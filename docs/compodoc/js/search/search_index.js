var COMPODOC_SEARCH_INDEX = {
  index: {
    version: '2.3.9',
    fields: ['title', 'body'],
    fieldVectors: [
      ['title/classes/AbstractDocument.html', [0, 0.21, 1, 3.008]],
      [
        'body/classes/AbstractDocument.html',
        [
          0, 0.283, 1, 5.004, 2, 1.986, 3, 0.121, 4, 0.121, 5, 0.088, 6, 5.549, 7, 0.533, 8, 0.968,
          9, 7.436, 10, 0.446, 11, 0.012, 12, 6.853, 13, 4.758, 14, 3.356, 15, 5.549, 16, 6.853, 17,
          3.035, 18, 1.537, 19, 5.549, 20, 0.15, 21, 6.853, 22, 4.144, 23, 3.779, 24, 5.549, 25,
          2.125, 26, 3.185, 27, 0.121, 28, 5.549, 29, 0.01, 30, 0.01,
        ],
      ],
      ['title/classes/AbstractRepository.html', [0, 0.21, 31, 3.262]],
      [
        'body/classes/AbstractRepository.html',
        [
          0, 0.169, 1, 2.424, 2, 1.188, 3, 0.073, 4, 0.073, 5, 0.053, 7, 0.319, 8, 0.685, 10, 0.481,
          11, 0.012, 17, 2.785, 18, 1.933, 20, 0.125, 26, 1.906, 27, 0.073, 29, 0.007, 30, 0.007,
          31, 3.837, 32, 3.32, 33, 5.003, 34, 2.106, 35, 3.817, 36, 1.474, 37, 2.904, 38, 2.421, 39,
          4.237, 40, 4.237, 41, 5.003, 42, 1.47, 43, 2.904, 44, 5.529, 45, 4.845, 46, 1.795, 47,
          1.852, 48, 1.358, 49, 4.237, 50, 4.177, 51, 3.127, 52, 5.5, 53, 3.32, 54, 6.305, 55,
          2.904, 56, 1.796, 57, 2.895, 58, 4.237, 59, 7.159, 60, 3.32, 61, 3.127, 62, 4.237, 63,
          3.32, 64, 2.904, 65, 3.143, 66, 5.5, 67, 5.5, 68, 3.32, 69, 1.149, 70, 1.416, 71, 2.231,
          72, 2.904, 73, 0.838, 74, 3.32, 75, 3.32, 76, 0.958, 77, 3.32, 78, 2.327, 79, 3.32, 80,
          1.237, 81, 2.191, 82, 3.32, 83, 3.32, 84, 3.32, 85, 5.72, 86, 3.32, 87, 5.5, 88, 2.53, 89,
          4.845, 90, 3.32, 91, 3.32, 92, 3.32,
        ],
      ],
      ['title/classes/ApiSDK.html', [0, 0.21, 93, 3.262]],
      [
        'body/classes/ApiSDK.html',
        [
          0, 0.242, 2, 1.7, 3, 0.104, 4, 0.104, 5, 0.075, 7, 0.457, 8, 0.877, 10, 0.404, 11, 0.012,
          17, 2.104, 18, 1.915, 20, 0.104, 27, 0.104, 29, 0.009, 30, 0.009, 34, 2.317, 42, 2.75, 46,
          1.275, 47, 1.316, 48, 0.965, 71, 2.859, 76, 0.796, 80, 0.935, 93, 4.918, 94, 4.693, 95,
          4.156, 96, 2.649, 97, 6.955, 98, 5.431, 99, 3.781, 100, 4.156, 101, 5.809, 102, 6.21, 103,
          1.318, 104, 4.752, 105, 4.752, 106, 3.763, 107, 0.381, 108, 0.381, 109, 0.648, 110, 2.277,
          111, 0.822, 112, 0.163, 113, 5.431, 114, 4.918, 115, 5.431, 116, 4.156, 117, 4.156, 118,
          4.156,
        ],
      ],
      ['title/interfaces/ApiSDKConfig.html', [101, 3.262, 112, 0.142]],
      [
        'body/interfaces/ApiSDKConfig.html',
        [
          0, 0.261, 3, 0.112, 4, 0.112, 5, 0.081, 7, 0.492, 8, 0.921, 10, 0.333, 11, 0.012, 17,
          2.267, 20, 0.112, 27, 0.112, 29, 0.009, 30, 0.009, 34, 1.715, 42, 2.267, 71, 3, 76, 0.857,
          80, 1.007, 93, 4.054, 94, 3.276, 95, 4.477, 96, 1.961, 97, 7.163, 99, 2.799, 101, 5.676,
          103, 1.438, 106, 4.054, 107, 0.41, 108, 0.41, 109, 0.698, 110, 2.454, 111, 1.127, 112,
          0.176, 113, 5.698, 114, 5.16, 115, 5.698, 116, 4.477, 117, 4.477, 118, 4.477,
        ],
      ],
      ['title/modules/AppModule.html', [119, 1.426, 120, 3.008]],
      [
        'body/modules/AppModule.html',
        [
          0, 0.241, 3, 0.103, 4, 0.103, 5, 0.075, 10, 0.449, 11, 0.012, 18, 1.308, 20, 0.16, 27,
          0.103, 29, 0.009, 30, 0.009, 36, 1.437, 46, 1.268, 47, 1.308, 48, 0.959, 56, 1.35, 73,
          1.192, 107, 0.553, 108, 0.553, 119, 2.387, 120, 5.882, 121, 2.264, 122, 2.264, 123, 2.467,
          124, 2.583, 125, 2.467, 126, 2.467, 127, 2.264, 128, 4.132, 129, 4.132, 130, 5.307, 131,
          5.307, 132, 3.382, 133, 2.467, 134, 2.583, 135, 4.725, 136, 3.741, 137, 4.725, 138, 6.186,
          139, 7.319, 140, 4.725, 141, 4.725, 142, 2.361, 143, 6.186, 144, 3.45, 145, 2.857, 146,
          3.741, 147, 4.725, 148, 2.583, 149, 4.725, 150, 4.517, 151, 4.725, 152, 4.132, 153, 4.725,
        ],
      ],
      ['title/interfaces/AppRoutes.html', [112, 0.142, 154, 3.262]],
      [
        'body/interfaces/AppRoutes.html',
        [
          3, 0.087, 4, 0.087, 5, 0.063, 10, 0.258, 11, 0.012, 18, 1.098, 20, 0.149, 27, 0.087, 29,
          0.008, 30, 0.008, 34, 1.328, 70, 1.691, 76, 1.141, 80, 1.457, 103, 1.364, 107, 0.318, 108,
          0.318, 111, 0.686, 112, 0.136, 148, 2.168, 154, 5.396, 155, 3.965, 156, 3.468, 157, 3.005,
          158, 2.7, 159, 3.965, 160, 2.537, 161, 2.801, 162, 3.965, 163, 3.14, 164, 1.691, 165,
          3.14, 166, 5.497, 167, 5.497, 168, 3.468, 169, 3.468, 170, 3.121, 171, 5.497, 172, 7.404,
          173, 2.168, 174, 4.808, 175, 7.404, 176, 2.398, 177, 3.965, 178, 2.438, 179, 3.14, 180,
          5.497, 181, 3.965, 182, 6.813, 183, 6.31, 184, 5.497, 185, 3.965, 186, 3.468, 187, 3.965,
          188, 3.965, 189, 3.468, 190, 3.965, 191, 3.965, 192, 3.965, 193, 3.965, 194, 3.965, 195,
          3.965, 196, 3.965, 197, 3.965,
        ],
      ],
      ['title/interfaces/AuthRequest.html', [112, 0.142, 198, 3.008]],
      [
        'body/interfaces/AuthRequest.html',
        [
          3, 0.119, 4, 0.119, 5, 0.086, 7, 0.523, 8, 0.956, 10, 0.517, 11, 0.012, 20, 0.161, 27,
          0.119, 29, 0.009, 30, 0.009, 107, 0.436, 108, 0.436, 109, 0.742, 111, 0.941, 112, 0.187,
          164, 2.32, 178, 2.759, 198, 4.943, 199, 5.44, 200, 2.343, 201, 6.445, 202, 5.631, 203,
          5.018, 204, 7.711, 205, 2.998, 206, 3.29, 207, 4.308,
        ],
      ],
      ['title/interfaces/AuthResponse.html', [112, 0.142, 208, 3.262]],
      [
        'body/interfaces/AuthResponse.html',
        [
          3, 0.123, 4, 0.123, 5, 0.089, 7, 0.541, 8, 0.976, 10, 0.45, 11, 0.012, 20, 0.123, 27,
          0.123, 29, 0.01, 30, 0.01, 111, 0.973, 112, 0.193, 200, 2.392, 201, 6.542, 206, 3.402,
          208, 5.473, 209, 5.625, 210, 5.462, 211, 3.74, 212, 7.48, 213, 7.48, 214, 7.48,
        ],
      ],
      ['title/interfaces/BuyCreditsFormProps.html', [112, 0.142, 215, 3.602]],
      [
        'body/interfaces/BuyCreditsFormProps.html',
        [
          3, 0.084, 4, 0.084, 5, 0.061, 7, 0.367, 8, 0.757, 10, 0.437, 11, 0.012, 17, 1.691, 20,
          0.154, 27, 0.084, 29, 0.007, 30, 0.007, 37, 1.413, 51, 2.088, 69, 1.322, 76, 1.225, 80,
          0.751, 81, 1.463, 103, 1.179, 107, 0.306, 108, 0.306, 111, 0.661, 112, 0.131, 160, 2.444,
          161, 2.201, 176, 2.309, 202, 2.788, 215, 4.683, 216, 3.819, 217, 7.058, 218, 3.126, 219,
          6.184, 220, 3.024, 221, 2.6, 222, 3.819, 223, 3.34, 224, 3.34, 225, 3.024, 226, 3.34, 227,
          2.309, 228, 1.994, 229, 3.34, 230, 5.355, 231, 3.819, 232, 3.024, 233, 3.91, 234, 3.34,
          235, 3.024, 236, 5.408, 237, 3.34, 238, 3.34, 239, 3.819, 240, 3.819, 241, 5.355, 242,
          5.355, 243, 3.819, 244, 3.819, 245, 3.819, 246, 3.819, 247, 3.819, 248, 3.819, 249, 4.241,
          250, 3.819, 251, 3.819, 252, 3.819, 253, 3.819, 254, 3.819, 255, 1.758, 256, 5.355, 257,
          3.819, 258, 3.819, 259, 3.024, 260, 3.819, 261, 3.819, 262, 3.34, 263, 5.355, 264, 5.355,
          265, 3.34, 266, 3.024, 267, 5.355, 268, 1.758, 269, 2.567, 270, 3.024, 271, 3.819, 272,
          3.819, 273, 3.024, 274, 3.819, 275, 3.34, 276, 3.819, 277, 3.819, 278, 3.819,
        ],
      ],
      ['title/interfaces/CallOptions.html', [112, 0.142, 279, 3.602]],
      [
        'body/interfaces/CallOptions.html',
        [
          3, 0.077, 4, 0.077, 5, 0.056, 7, 0.339, 8, 0.715, 10, 0.498, 11, 0.012, 13, 2.256, 20,
          0.129, 27, 0.077, 29, 0.007, 30, 0.007, 37, 1.305, 48, 1.576, 57, 1.623, 76, 1.229, 80,
          0.694, 81, 1.35, 88, 1.841, 103, 1.358, 107, 0.283, 108, 0.283, 109, 0.481, 110, 1.69,
          111, 0.61, 112, 0.121, 114, 2.792, 157, 1.927, 186, 3.083, 210, 2.574, 211, 1.69, 255,
          1.623, 268, 1.623, 269, 2.425, 279, 5.176, 280, 3.526, 281, 4.999, 282, 3.387, 283, 6.233,
          284, 4.39, 285, 7.128, 286, 4.542, 287, 3.235, 288, 6.467, 289, 3.911, 290, 2.958, 291,
          1.007, 292, 3.445, 293, 4.425, 294, 4.007, 295, 3.526, 296, 3.526, 297, 2.574, 298, 2.574,
          299, 2.792, 300, 3.526, 301, 3.526, 302, 5.06, 303, 5.06, 304, 5.06, 305, 3.526, 306,
          2.574, 307, 5.06, 308, 3.526, 309, 3.083, 310, 3.526, 311, 2.574, 312, 3.526, 313, 3.526,
          314, 3.083, 315, 3.526, 316, 2.792, 317, 3.526, 318, 3.526, 319, 1.927, 320, 5.06, 321,
          3.526, 322, 3.526, 323, 3.083, 324, 3.526, 325, 2.904, 326, 3.526,
        ],
      ],
      ['title/interfaces/ChangeLanguageProps.html', [112, 0.142, 327, 3.602]],
      [
        'body/interfaces/ChangeLanguageProps.html',
        [
          3, 0.099, 4, 0.099, 5, 0.072, 7, 0.437, 8, 0.852, 10, 0.441, 11, 0.012, 20, 0.175, 27,
          0.132, 29, 0.008, 30, 0.008, 76, 1.291, 80, 0.894, 111, 0.786, 112, 0.156, 161, 2.782,
          176, 2.747, 233, 3.317, 249, 3.598, 273, 3.598, 327, 5.272, 328, 3.973, 329, 4.543, 330,
          7.5, 331, 6.986, 332, 3.317, 333, 3.317, 334, 4.543, 335, 3.598, 336, 4.543, 337, 4.543,
          338, 4.543, 339, 6.029, 340, 4.543, 341, 6.029, 342, 3.317, 343, 4.543, 344, 2.747, 345,
          6.029, 346, 4.543, 347, 4.543, 348, 4.543, 349, 3.317, 350, 4.543, 351, 4.543, 352, 4.543,
          353, 4.543, 354, 4.543, 355, 4.543, 356, 4.543, 357, 4.543, 358, 4.543, 359, 4.543, 360,
          4.543,
        ],
      ],
      ['title/injectables/ChartConfigService.html', [361, 1.38, 362, 2.252]],
      [
        'body/injectables/ChartConfigService.html',
        [
          0, 0.112, 3, 0.048, 4, 0.048, 5, 0.035, 7, 0.34, 8, 0.499, 10, 0.484, 11, 0.012, 17,
          2.867, 18, 1.641, 20, 0.136, 25, 0.843, 27, 0.048, 29, 0.005, 30, 0.005, 34, 1.483, 36,
          1.075, 37, 2.472, 46, 1.49, 47, 1.641, 48, 1.127, 51, 1.204, 56, 1.586, 69, 1.223, 70,
          1.507, 71, 1.627, 73, 0.555, 76, 1.148, 78, 1.639, 80, 0.433, 81, 1.696, 88, 2.312, 96,
          2.27, 103, 1.47, 107, 0.406, 108, 0.406, 109, 0.604, 123, 1.149, 142, 1.1, 158, 2.407,
          164, 1.507, 173, 1.204, 218, 2.867, 228, 2.647, 255, 1.627, 262, 1.925, 268, 1.627, 282,
          2.958, 291, 1.01, 306, 1.608, 361, 1.184, 362, 1.932, 363, 1.055, 364, 5.446, 365, 5.446,
          366, 1.925, 367, 3.873, 368, 3.535, 369, 4.428, 370, 3.535, 371, 4.428, 372, 3.535, 373,
          3.535, 374, 3.252, 375, 2.202, 376, 2.202, 377, 3.5, 378, 6.228, 379, 2.202, 380, 3.701,
          381, 4.409, 382, 3.535, 383, 2.202, 384, 2.91, 385, 2.202, 386, 2.458, 387, 2.202, 388,
          3.535, 389, 4.433, 390, 2.202, 391, 3.091, 392, 3.091, 393, 2.202, 394, 1.608, 395, 1.925,
          396, 1.409, 397, 1.204, 398, 2.556, 399, 3.873, 400, 3.091, 401, 1.499, 402, 3.701, 403,
          1.499, 404, 1.608, 405, 3.552, 406, 3.873, 407, 3.091, 408, 1.499, 409, 2.202, 410, 2.202,
          411, 1.845, 412, 4.014, 413, 2.799, 414, 2.202, 415, 1.743, 416, 2.202, 417, 2.202, 418,
          3.535, 419, 2.202, 420, 1.925, 421, 1.264, 422, 2.202, 423, 2.202, 424, 3.535, 425, 4.428,
          426, 3.535, 427, 2.202, 428, 3.535, 429, 2.202, 430, 2.202, 431, 2.202, 432, 2.202, 433,
          2.202, 434, 1.925, 435, 1.204, 436, 1.204, 437, 1.499, 438, 3.091, 439, 2.581, 440, 3.535,
          441, 2.202, 442, 2.202, 443, 2.202, 444, 2.202, 445, 2.581, 446, 2.202, 447, 3.091, 448,
          2.202, 449, 2.202, 450, 1.409, 451, 2.202, 452, 2.202, 453, 1.925, 454, 2.202, 455, 2.202,
          456, 2.202, 457, 2.202, 458, 2.202, 459, 2.202, 460, 1.925,
        ],
      ],
      ['title/interfaces/ChartPreviewProps.html', [112, 0.142, 461, 3.602]],
      [
        'body/interfaces/ChartPreviewProps.html',
        [
          3, 0.107, 4, 0.056, 5, 0.041, 7, 0.248, 8, 0.566, 10, 0.458, 11, 0.012, 20, 0.172, 25,
          1.534, 27, 0.088, 29, 0.006, 30, 0.006, 37, 0.955, 48, 0.813, 71, 1.188, 76, 1.327, 80,
          1.089, 81, 0.988, 103, 1.209, 107, 0.508, 108, 0.508, 109, 0.352, 111, 0.446, 112, 0.089,
          148, 1.41, 160, 1.651, 161, 2.464, 163, 2.043, 164, 1.1, 165, 2.043, 173, 2.684, 178,
          1.433, 179, 2.043, 189, 2.256, 210, 1.883, 211, 1.236, 220, 2.043, 221, 1.756, 227, 1.56,
          228, 2.564, 229, 3.503, 232, 2.043, 233, 1.883, 234, 4.294, 235, 2.043, 255, 1.188, 266,
          2.043, 268, 1.188, 269, 2.653, 292, 2.727, 293, 3.503, 319, 2.19, 335, 3.172, 374, 3.573,
          381, 1.756, 384, 2.299, 386, 2.175, 402, 2.925, 437, 4.319, 439, 1.883, 461, 3.503, 462,
          2.256, 463, 6.344, 464, 2.579, 465, 2.579, 466, 2.579, 467, 2.579, 468, 2.256, 469, 2.579,
          470, 3.503, 471, 2.256, 472, 2.256, 473, 2.256, 474, 2.256, 475, 2.043, 476, 2.043, 477,
          2.043, 478, 2.579, 479, 3.503, 480, 2.256, 481, 3.503, 482, 4.006, 483, 2.579, 484, 1.883,
          485, 4.006, 486, 3.172, 487, 2.256, 488, 4.841, 489, 4.91, 490, 4.91, 491, 3.503, 492,
          2.579, 493, 2.579, 494, 2.579, 495, 2.579, 496, 4.294, 497, 2.579, 498, 2.579, 499, 2.579,
          500, 2.579, 501, 4.91, 502, 2.579, 503, 2.579, 504, 3.586, 505, 2.579, 506, 2.579, 507,
          2.579, 508, 2.579, 509, 2.579, 510, 2.579, 511, 2.579, 512, 2.579, 513, 2.579, 514, 2.579,
          515, 2.579, 516, 2.579, 517, 2.579, 518, 2.579, 519, 2.579, 520, 4.006, 521, 2.579, 522,
          4.006, 523, 2.579, 524, 2.579, 525, 2.579, 526, 2.579, 527, 2.579, 528, 4.006, 529, 2.579,
          530, 2.579, 531, 2.579, 532, 2.579, 533, 2.256, 534, 2.579, 535, 4.006, 536, 2.579, 537,
          1.56, 538, 2.579, 539, 2.579, 540, 2.579, 541, 2.579,
        ],
      ],
      ['title/injectables/ClusterModule.html', [361, 1.38, 542, 3.008]],
      [
        'body/injectables/ClusterModule.html',
        [
          0, 0.234, 3, 0.1, 4, 0.1, 5, 0.073, 7, 0.44, 8, 0.857, 10, 0.395, 11, 0.012, 18, 1.881,
          20, 0.149, 27, 0.1, 29, 0.008, 30, 0.008, 36, 1.844, 42, 3.009, 46, 1.229, 47, 1.268, 48,
          0.93, 56, 1.308, 73, 1.156, 96, 2.602, 142, 3.614, 290, 3.029, 361, 2.03, 363, 2.195, 421,
          2.629, 542, 4.426, 543, 6.324, 544, 6.324, 545, 4.581, 546, 4.436, 547, 7.231, 548, 6.062,
          549, 6.062, 550, 6.062, 551, 4.581, 552, 5.301, 553, 2.931, 554, 6.062, 555, 4.581, 556,
          4.581, 557, 6.062, 558, 4.581, 559, 4.581, 560, 4.581, 561, 4.581, 562, 4.581, 563, 4.581,
          564, 4.581, 565, 4.581, 566, 4.581, 567, 4.581, 568, 4.006, 569, 4.581, 570, 4.581,
        ],
      ],
      ['title/classes/CreateUserDto.html', [0, 0.21, 571, 2.364]],
      [
        'body/classes/CreateUserDto.html',
        [
          0, 0.364, 2, 1.586, 3, 0.097, 4, 0.097, 5, 0.07, 10, 0.289, 11, 0.012, 20, 0.156, 27,
          0.174, 29, 0.008, 30, 0.008, 38, 2.964, 65, 2.964, 76, 1.309, 99, 2.424, 107, 0.475, 108,
          0.475, 109, 0.809, 110, 2.125, 111, 0.767, 178, 1.586, 200, 2.47, 205, 1.963, 411, 3.726,
          571, 3.405, 572, 3.237, 573, 2.041, 574, 2.053, 575, 1.534, 576, 3.019, 577, 2.837, 578,
          3.654, 579, 3.019, 580, 5.066, 581, 3.243, 582, 3.097, 583, 3.237, 584, 3.237, 585, 3.237,
          586, 3.902, 587, 3.237, 588, 3.237, 589, 3.237, 590, 3.237, 591, 3.237, 592, 3.237, 593,
          3.237, 594, 3.237, 595, 3.237, 596, 3.237, 597, 3.237, 598, 2.681, 599, 3.237, 600, 2.681,
          601, 3.237, 602, 3.237, 603, 2.545, 604, 3.237,
        ],
      ],
      ['title/interfaces/CrudResourceGenConfig.html', [112, 0.142, 605, 3.008]],
      [
        'body/interfaces/CrudResourceGenConfig.html',
        [
          3, 0.082, 4, 0.082, 5, 0.059, 7, 0.359, 8, 0.745, 10, 0.343, 11, 0.012, 20, 0.134, 27,
          0.153, 29, 0.007, 30, 0.007, 38, 2.634, 48, 1.07, 57, 3.344, 65, 2.634, 76, 1.172, 94,
          2.388, 103, 1.477, 107, 0.422, 108, 0.422, 109, 0.719, 111, 0.646, 112, 0.21, 157, 2.041,
          170, 2.511, 203, 2.542, 281, 5.507, 282, 3.099, 284, 4.376, 286, 4.392, 287, 3.339, 289,
          3.694, 291, 1.066, 298, 5.567, 344, 2.257, 578, 4.344, 581, 2.881, 582, 2.751, 605, 4.46,
          606, 2.956, 607, 3.848, 608, 2.634, 609, 3.588, 610, 3.372, 611, 3.588, 612, 2.956, 613,
          2.956, 614, 2.956, 615, 2.927, 616, 4.837, 617, 3.628, 618, 2.542, 619, 2.956, 620, 3.848,
          621, 2.956,
        ],
      ],
      ['title/modules/DatabaseModule.html', [119, 1.426, 622, 2.636]],
      [
        'body/modules/DatabaseModule.html',
        [
          0, 0.246, 3, 0.105, 4, 0.105, 5, 0.076, 10, 0.454, 11, 0.012, 18, 1.335, 20, 0.161, 22,
          4.212, 23, 3.283, 26, 2.767, 27, 0.105, 29, 0.009, 30, 0.009, 36, 1.467, 46, 1.683, 47,
          1.736, 48, 0.979, 56, 1.377, 73, 1.216, 80, 0.948, 103, 0.919, 112, 0.166, 119, 2.411,
          121, 2.311, 127, 2.311, 136, 3.791, 287, 2.636, 311, 3.52, 546, 3.598, 622, 4.457, 623,
          4.216, 624, 4.821, 625, 4.821, 626, 5.841, 627, 4.821, 628, 4.821, 629, 5.086, 630, 4.964,
          631, 5.841, 632, 3.283, 633, 5.482, 634, 4.216, 635, 4.216, 636, 4.216, 637, 4.216, 638,
          4.216, 639, 4.216, 640, 3.818,
        ],
      ],
      ['title/controllers/DatafilesController.html', [144, 3.008, 641, 1.824]],
      [
        'body/controllers/DatafilesController.html',
        [
          0, 0.134, 3, 0.058, 4, 0.058, 5, 0.089, 7, 0.253, 10, 0.394, 11, 0.012, 14, 2.458, 18,
          1.125, 20, 0.165, 25, 1.557, 27, 0.058, 29, 0.006, 30, 0.006, 34, 2.025, 35, 2.222, 36,
          1.236, 37, 2.366, 42, 1.164, 46, 1.091, 47, 1.376, 48, 0.825, 56, 1.161, 57, 2.574, 71,
          1.21, 73, 0.663, 76, 1.012, 78, 2.366, 80, 0.8, 81, 1.903, 96, 2.316, 107, 0.512, 108,
          0.512, 109, 0.763, 144, 2.968, 206, 1.59, 211, 2.382, 218, 2.201, 282, 2.201, 286, 1.59,
          291, 1.161, 374, 2.122, 377, 2.795, 380, 3.629, 398, 1.21, 408, 1.79, 411, 1.372, 435,
          2.222, 436, 1.437, 437, 2.768, 450, 1.682, 574, 0.91, 575, 0.91, 608, 2.031, 610, 2.601,
          615, 1.26, 617, 3.947, 641, 1.164, 642, 1.164, 643, 2.629, 644, 1.682, 645, 2.629, 646,
          4.969, 647, 4.969, 648, 2.629, 649, 4.083, 650, 5.597, 651, 6.393, 652, 2.629, 653, 2.629,
          654, 2.629, 655, 4.346, 656, 4.083, 657, 2.629, 658, 2.629, 659, 4.668, 660, 1.59, 661,
          2.629, 662, 4.065, 663, 4.065, 664, 4.065, 665, 4.065, 666, 1.59, 667, 2.629, 668, 2.299,
          669, 2.629, 670, 1.919, 671, 2.629, 672, 1.79, 673, 3.384, 674, 2.299, 675, 3.005, 676,
          1.919, 677, 2.082, 678, 1.919, 679, 1.919, 680, 1.59, 681, 2.299, 682, 2.299, 683, 2.299,
          684, 1.919, 685, 2.082, 686, 2.299, 687, 2.629, 688, 2.629, 689, 3.555, 690, 4.065, 691,
          2.629, 692, 2.484, 693, 2.299, 694, 2.629, 695, 2.629, 696, 2.629, 697, 2.629, 698, 2.458,
          699, 2.629, 700, 2.629, 701, 2.629, 702, 2.629, 703, 2.629, 704, 2.629, 705, 2.299, 706,
          4.117, 707, 3.555, 708, 2.629, 709, 2.629, 710, 2.629, 711, 2.629, 712, 2.629, 713, 2.629,
          714, 1.682, 715, 2.299, 716, 2.629, 717, 2.629, 718, 2.629, 719, 2.629, 720, 4.065, 721,
          4.065, 722, 2.629, 723, 2.299, 724, 2.299, 725, 3.555, 726, 4.346, 727, 1.919, 728, 2.629,
          729, 2.968, 730, 2.629, 731, 1.79, 732, 2.629, 733, 2.629, 734, 2.299, 735, 2.299, 736,
          2.629, 737, 2.629,
        ],
      ],
      ['title/modules/DatafilesModule.html', [119, 1.426, 130, 2.805]],
      [
        'body/modules/DatafilesModule.html',
        [
          0, 0.248, 3, 0.106, 4, 0.106, 5, 0.077, 11, 0.012, 20, 0.172, 27, 0.106, 29, 0.009, 30,
          0.009, 73, 1.227, 107, 0.505, 108, 0.505, 119, 2.421, 121, 2.331, 122, 2.331, 123, 2.539,
          124, 2.659, 125, 2.539, 126, 3.652, 127, 2.331, 130, 5.626, 132, 3.447, 133, 2.539, 134,
          2.659, 136, 2.941, 144, 5.108, 630, 4.993, 632, 3.312, 642, 2.792, 673, 5.349, 674, 4.253,
          675, 4.751, 676, 3.551, 692, 3.926, 693, 4.253, 738, 4.253, 739, 4.253, 740, 4.864, 741,
          4.864,
        ],
      ],
      ['title/injectables/DatafilesService.html', [361, 1.38, 692, 2.059]],
      [
        'body/injectables/DatafilesService.html',
        [
          0, 0.134, 3, 0.058, 4, 0.058, 5, 0.079, 7, 0.253, 8, 0.576, 10, 0.435, 11, 0.012, 17,
          2.681, 18, 1.772, 20, 0.132, 25, 1.561, 27, 0.058, 29, 0.006, 30, 0.006, 36, 1.239, 37,
          2.763, 46, 1.625, 47, 1.772, 48, 1.229, 56, 1.73, 57, 1.876, 61, 2.228, 69, 0.913, 70,
          1.125, 71, 1.214, 73, 0.665, 76, 1.21, 78, 2.073, 80, 1.102, 81, 2.452, 88, 2.925, 96,
          1.907, 103, 1.532, 107, 0.399, 108, 0.399, 109, 0.556, 164, 1.125, 170, 2.631, 211, 1.264,
          218, 2.481, 255, 1.214, 268, 1.214, 269, 2.902, 291, 0.753, 361, 1.365, 363, 1.264, 394,
          2.975, 396, 1.687, 397, 2.228, 398, 3.257, 405, 4.624, 421, 1.514, 450, 1.687, 655, 4.355,
          659, 1.926, 692, 2.036, 727, 1.926, 731, 4.123, 742, 2.637, 743, 3.636, 744, 4.075, 745,
          4.075, 746, 4.075, 747, 4.979, 748, 4.979, 749, 4.075, 750, 2.637, 751, 2.637, 752, 4.075,
          753, 4.411, 754, 2.637, 755, 2.306, 756, 4.075, 757, 2.637, 758, 2.637, 759, 5.069, 760,
          4.979, 761, 2.637, 762, 2.637, 763, 4.979, 764, 2.637, 765, 3.227, 766, 2.637, 767, 4.355,
          768, 2.306, 769, 2.088, 770, 5.601, 771, 2.637, 772, 2.637, 773, 2.637, 774, 3.227, 775,
          4.979, 776, 2.637, 777, 2.637, 778, 2.637, 779, 2.637, 780, 2.637, 781, 2.306, 782, 2.306,
          783, 2.637, 784, 2.637, 785, 2.637, 786, 2.637, 787, 2.637, 788, 2.637, 789, 2.637, 790,
          2.637, 791, 2.637, 792, 2.637, 793, 2.637, 794, 2.637, 795, 2.637, 796, 2.637, 797, 3.227,
          798, 2.637, 799, 2.637, 800, 2.637, 801, 2.637, 802, 2.306, 803, 2.306, 804, 2.637, 805,
          2.637, 806, 2.637, 807, 2.637, 808, 2.637,
        ],
      ],
      ['title/classes/DeleteDatafileRequestDto.html', [0, 0.21, 649, 3.008]],
      [
        'body/classes/DeleteDatafileRequestDto.html',
        [
          0, 0.364, 2, 2.121, 3, 0.13, 4, 0.13, 5, 0.094, 11, 0.012, 20, 0.156, 27, 0.156, 29, 0.01,
          30, 0.01, 107, 0.475, 108, 0.475, 109, 0.808, 200, 2.469, 205, 3.159, 573, 2.729, 574,
          2.051, 575, 2.051, 649, 5.209, 679, 4.328, 809, 5.184, 810, 3.793, 811, 5.184, 812, 5.184,
        ],
      ],
      ['title/classes/DeleteDatafileResponseDto.html', [0, 0.21, 679, 3.008]],
      [
        'body/classes/DeleteDatafileResponseDto.html',
        [
          0, 0.364, 2, 2.121, 3, 0.13, 4, 0.13, 5, 0.094, 11, 0.012, 20, 0.156, 27, 0.156, 29, 0.01,
          30, 0.01, 107, 0.475, 108, 0.475, 109, 0.808, 200, 2.469, 205, 3.159, 573, 2.729, 574,
          2.051, 575, 2.051, 649, 4.328, 679, 5.209, 809, 5.184, 810, 3.793, 811, 5.184, 812, 5.184,
        ],
      ],
      ['title/injectables/FilenameService.html', [361, 1.38, 673, 2.805]],
      [
        'body/injectables/FilenameService.html',
        [
          0, 0.249, 3, 0.107, 4, 0.107, 5, 0.078, 7, 0.47, 10, 0.412, 11, 0.012, 18, 1.355, 20,
          0.162, 27, 0.107, 29, 0.009, 30, 0.009, 36, 1.925, 46, 1.313, 47, 1.355, 48, 0.993, 56,
          1.398, 73, 1.234, 76, 1.242, 80, 0.962, 103, 1.414, 107, 0.392, 108, 0.392, 109, 0.667,
          170, 2.011, 291, 1.398, 361, 2.12, 363, 2.345, 377, 4.002, 673, 4.309, 706, 4.777, 707,
          6.135, 759, 3.874, 768, 4.279, 813, 4.892, 814, 6.329, 815, 6.329, 816, 4.892, 817, 6.329,
          818, 4.892, 819, 4.892, 820, 4.892, 821, 4.892, 822, 4.892, 823, 4.892, 824, 4.892,
        ],
      ],
      ['title/classes/FirebaseAdmin.html', [0, 0.21, 825, 3.262]],
      [
        'body/classes/FirebaseAdmin.html',
        [
          0, 0.14, 2, 0.981, 3, 0.06, 4, 0.06, 5, 0.043, 7, 0.264, 8, 0.593, 10, 0.484, 11, 0.012,
          13, 3.265, 18, 2.086, 20, 0.125, 27, 0.112, 29, 0.006, 30, 0.006, 42, 1.859, 46, 0.736,
          47, 0.759, 48, 0.557, 69, 1.453, 70, 1.169, 76, 1.089, 78, 1.015, 80, 1.279, 96, 2.981,
          98, 3.672, 100, 2.398, 103, 1.09, 112, 0.094, 142, 1.37, 148, 4.17, 164, 2.438, 207,
          2.171, 228, 3.983, 397, 2.789, 403, 1.867, 546, 4.467, 743, 5.57, 765, 2.171, 774, 5.528,
          825, 4.528, 826, 6.041, 827, 2.398, 828, 5.332, 829, 4.462, 830, 6.301, 831, 4.881, 832,
          4.199, 833, 2.742, 834, 2.742, 835, 2.742, 836, 2.742, 837, 2.742, 838, 2.742, 839, 2.742,
          840, 3.672, 841, 2.742, 842, 3.325, 843, 2.742, 844, 3.325, 845, 2.742, 846, 2.742, 847,
          2.742, 848, 3.325, 849, 3.672, 850, 2.398, 851, 2.398, 852, 5, 853, 2.398, 854, 2.398,
          855, 2.398, 856, 2.398, 857, 4.462, 858, 2.398, 859, 2.171, 860, 2.398, 861, 4.462, 862,
          2.398, 863, 3.672, 864, 3.672, 865, 2.398, 866, 2.398, 867, 2.398, 868, 2.398, 869, 3.672,
          870, 2.398, 871, 3.672, 872, 2.398, 873, 3.672, 874, 2.398, 875, 2.398, 876, 2.398, 877,
          2.398, 878, 3.672, 879, 2.398,
        ],
      ],
      ['title/interfaces/FirebaseAdminConstructorConfig.html', [112, 0.142, 831, 3.262]],
      [
        'body/interfaces/FirebaseAdminConstructorConfig.html',
        [
          0, 0.171, 3, 0.073, 4, 0.073, 5, 0.053, 7, 0.322, 8, 0.69, 10, 0.456, 11, 0.012, 13,
          3.123, 20, 0.138, 27, 0.126, 29, 0.007, 30, 0.007, 42, 1.485, 48, 0.991, 69, 1.161, 76,
          1.173, 78, 1.241, 80, 1.378, 96, 2.572, 103, 1.28, 111, 0.58, 112, 0.115, 142, 1.676, 148,
          4.051, 164, 2.695, 207, 2.656, 228, 3.869, 397, 3.145, 403, 2.284, 546, 3.854, 743, 5.411,
          765, 2.656, 774, 5.549, 825, 4.556, 826, 2.656, 827, 2.933, 828, 4.903, 829, 2.933, 830,
          6.459, 831, 5.004, 840, 2.933, 842, 2.656, 844, 2.656, 848, 3.865, 849, 4.268, 850, 2.933,
          851, 2.933, 852, 5.526, 853, 2.933, 854, 2.933, 855, 2.933, 856, 2.933, 857, 5.032, 858,
          2.933, 859, 2.656, 860, 2.933, 861, 5.032, 862, 2.933, 863, 4.268, 864, 4.268, 865, 2.933,
          866, 2.933, 867, 2.933, 868, 2.933, 869, 4.268, 870, 2.933, 871, 4.268, 872, 2.933, 873,
          4.268, 874, 2.933, 875, 2.933, 876, 2.933, 877, 2.933, 878, 4.268, 879, 2.933,
        ],
      ],
      ['title/injectables/FirebaseAuthMiddleware.html', [146, 3.262, 361, 1.38]],
      [
        'body/injectables/FirebaseAuthMiddleware.html',
        [
          0, 0.171, 3, 0.074, 4, 0.074, 5, 0.053, 7, 0.323, 8, 0.691, 10, 0.375, 11, 0.012, 17,
          1.488, 18, 1.353, 20, 0.147, 25, 1.287, 27, 0.074, 29, 0.007, 30, 0.007, 34, 1.929, 35,
          3.458, 36, 1.487, 37, 2.132, 46, 0.902, 47, 0.931, 48, 0.682, 56, 0.96, 61, 1.837, 69,
          1.163, 70, 1.433, 73, 0.848, 76, 1.212, 78, 2.595, 80, 0.661, 81, 1.872, 88, 3.302, 96,
          2.206, 107, 0.462, 108, 0.462, 109, 0.667, 146, 3.871, 148, 3.458, 152, 2.939, 164, 1.433,
          178, 2.404, 198, 4.618, 202, 3.569, 206, 2.032, 208, 5.009, 255, 1.547, 268, 1.547, 269,
          2.761, 270, 3.871, 291, 0.96, 319, 2.672, 361, 1.637, 363, 1.611, 394, 2.454, 396, 2.15,
          397, 1.837, 420, 2.939, 421, 1.929, 586, 1.837, 650, 2.661, 684, 4.618, 767, 2.939, 802,
          2.939, 880, 5.76, 881, 5.76, 882, 3.361, 883, 4.275, 884, 4.888, 885, 5.76, 886, 6.325,
          887, 3.361, 888, 4.888, 889, 3.361, 890, 4.888, 891, 2.939, 892, 2.939, 893, 4.275, 894,
          3.361, 895, 3.361, 896, 3.361, 897, 3.361, 898, 2.939, 899, 3.361, 900, 3.361, 901, 3.361,
          902, 3.361, 903, 3.361, 904, 3.361, 905, 3.361, 906, 3.361, 907, 3.361, 908, 3.361, 909,
          3.361, 910, 3.361, 911, 3.361, 912, 2.454, 913, 3.361, 914, 3.361, 915, 3.361, 916, 3.361,
          917, 3.361, 918, 3.361, 919, 3.361, 920, 3.361, 921, 3.361, 922, 3.361, 923, 3.361, 924,
          2.454, 925, 3.361, 926, 3.361, 927, 3.361, 928, 3.361,
        ],
      ],
      ['title/classes/FirebaseWeb.html', [0, 0.21, 929, 3.602]],
      [
        'body/classes/FirebaseWeb.html',
        [
          0, 0.18, 2, 1.264, 3, 0.077, 4, 0.077, 5, 0.056, 7, 0.34, 8, 0.716, 10, 0.506, 11, 0.012,
          17, 1.565, 18, 2.081, 20, 0.142, 27, 0.13, 29, 0.007, 30, 0.007, 36, 1.542, 42, 1.565, 46,
          0.948, 47, 0.978, 48, 0.717, 56, 1.448, 76, 1.194, 78, 2.193, 80, 0.695, 88, 2.646, 103,
          1.129, 107, 0.406, 108, 0.406, 142, 2.533, 148, 4.109, 160, 2.261, 164, 1.507, 228, 3.924,
          232, 2.798, 255, 1.627, 268, 1.627, 269, 2.429, 421, 2.028, 828, 4.327, 830, 5.126, 842,
          2.798, 844, 2.798, 848, 4.013, 929, 4.432, 930, 3.533, 931, 3.934, 932, 6.473, 933, 6.473,
          934, 5.068, 935, 6.238, 936, 5.068, 937, 6.853, 938, 3.533, 939, 3.533, 940, 3.533, 941,
          3.533, 942, 3.533, 943, 3.533, 944, 5.068, 945, 3.533, 946, 3.09, 947, 3.533, 948, 2.798,
          949, 5.068, 950, 3.533, 951, 3.533, 952, 3.533, 953, 3.533, 954, 3.533, 955, 3.533, 956,
          3.533, 957, 3.533, 958, 3.533, 959, 5.068, 960, 3.533, 961, 3.533, 962, 3.533, 963, 5.068,
          964, 3.533, 965, 3.533, 966, 3.533, 967, 3.533, 968, 3.09, 969, 5.925, 970, 3.533, 971,
          3.533, 972, 3.533, 973, 3.533, 974, 3.533, 975, 3.533, 976, 3.533,
        ],
      ],
      ['title/classes/GetUsersDto.html', [0, 0.21, 600, 2.491]],
      [
        'body/classes/GetUsersDto.html',
        [
          0, 0.364, 2, 1.586, 3, 0.097, 4, 0.097, 5, 0.07, 10, 0.289, 11, 0.012, 20, 0.156, 27,
          0.174, 29, 0.008, 30, 0.008, 38, 2.964, 65, 2.964, 76, 1.309, 99, 2.424, 107, 0.475, 108,
          0.475, 109, 0.809, 110, 2.125, 111, 0.767, 178, 1.586, 200, 2.47, 205, 1.963, 411, 3.726,
          571, 2.545, 572, 3.237, 573, 2.041, 574, 2.053, 575, 1.534, 576, 3.019, 577, 2.837, 578,
          3.654, 579, 3.019, 580, 5.066, 581, 3.243, 582, 3.097, 583, 3.237, 584, 3.237, 585, 3.237,
          586, 3.902, 587, 3.237, 588, 3.237, 589, 3.237, 590, 3.237, 591, 3.237, 592, 3.237, 593,
          3.237, 594, 3.237, 595, 3.237, 596, 3.237, 597, 3.237, 598, 2.681, 599, 3.237, 600, 3.587,
          601, 3.237, 602, 3.237, 603, 2.545, 604, 3.237,
        ],
      ],
      ['title/controllers/I18nStreamController.html', [641, 1.824, 977, 3.008]],
      [
        'body/controllers/I18nStreamController.html',
        [
          0, 0.247, 3, 0.106, 4, 0.106, 5, 0.077, 7, 0.466, 10, 0.41, 11, 0.012, 14, 2.933, 18,
          1.343, 20, 0.168, 27, 0.106, 29, 0.009, 30, 0.009, 34, 1.624, 36, 1.914, 46, 1.302, 47,
          1.343, 48, 0.985, 56, 1.385, 73, 1.224, 78, 1.795, 80, 0.954, 103, 1.331, 107, 0.389, 108,
          0.389, 111, 0.839, 349, 4.595, 574, 1.678, 575, 1.678, 641, 2.147, 642, 2.147, 644, 3.103,
          660, 2.933, 666, 2.933, 672, 3.302, 698, 2.933, 977, 4.595, 978, 4.595, 979, 4.595, 980,
          4.849, 981, 6.292, 982, 4.849, 983, 6.292, 984, 4.849, 985, 6.292, 986, 6.985, 987, 3.302,
          988, 4.47, 989, 3.84, 990, 4.983, 991, 4.983, 992, 4.849, 993, 4.849, 994, 3.84, 995,
          4.849, 996, 4.849,
        ],
      ],
      ['title/classes/I18nStreamDto.html', [0, 0.21, 991, 3.262]],
      [
        'body/classes/I18nStreamDto.html',
        [
          0, 0.29, 2, 2.033, 3, 0.124, 4, 0.124, 5, 0.09, 11, 0.012, 20, 0.164, 27, 0.164, 29, 0.01,
          30, 0.01, 76, 1.164, 107, 0.455, 108, 0.455, 109, 0.775, 200, 1.967, 205, 3.08, 573,
          2.616, 574, 2.407, 575, 1.967, 576, 3.869, 577, 3.636, 991, 5.507, 997, 5.683, 998, 5.683,
          999, 5.683, 1000, 5.683, 1001, 5.683, 1002, 5.683, 1003, 5.683,
        ],
      ],
      ['title/modules/I18nStreamModule.html', [119, 1.426, 1004, 2.805]],
      [
        'body/modules/I18nStreamModule.html',
        [
          0, 0.208, 3, 0.089, 4, 0.089, 5, 0.065, 7, 0.391, 10, 0.265, 11, 0.012, 17, 2.48, 18,
          1.128, 20, 0.163, 27, 0.123, 29, 0.008, 30, 0.008, 36, 1.239, 46, 1.093, 47, 1.128, 48,
          0.827, 56, 1.163, 71, 1.875, 73, 1.413, 76, 0.682, 80, 0.801, 103, 0.776, 112, 0.14, 119,
          2.385, 121, 1.952, 122, 1.952, 123, 2.126, 124, 2.227, 125, 2.126, 126, 3.598, 127, 2.684,
          132, 3.061, 133, 2.126, 134, 2.227, 136, 2.463, 170, 1.674, 206, 2.463, 349, 4.673, 546,
          3.673, 629, 4.673, 642, 2.48, 670, 2.974, 977, 4.673, 978, 4.089, 979, 4.089, 988, 4.985,
          989, 3.225, 1004, 5.207, 1005, 4.073, 1006, 4.073, 1007, 3.562, 1008, 4.897, 1009, 4.073,
          1010, 5.457, 1011, 4.073, 1012, 4.897, 1013, 3.562, 1014, 3.562, 1015, 3.225, 1016, 3.562,
          1017, 3.562, 1018, 3.562, 1019, 5.457, 1020, 6.027, 1021, 3.562, 1022, 3.562, 1023, 3.562,
          1024, 3.562, 1025, 3.562, 1026, 3.562, 1027, 3.562, 1028, 3.562, 1029, 3.225, 1030, 3.562,
        ],
      ],
      ['title/interfaces/I18nStreamModuleOptions.html', [112, 0.142, 1010, 3.262]],
      [
        'body/interfaces/I18nStreamModuleOptions.html',
        [
          0, 0.224, 3, 0.096, 4, 0.096, 5, 0.07, 7, 0.567, 8, 0.834, 10, 0.286, 11, 0.012, 17,
          2.613, 20, 0.167, 27, 0.129, 29, 0.008, 30, 0.008, 71, 2.025, 73, 1.488, 76, 0.736, 80,
          0.865, 103, 1.269, 111, 0.761, 112, 0.151, 119, 2.304, 126, 3.08, 127, 2.108, 136, 2.66,
          170, 2.425, 206, 2.66, 349, 5.195, 546, 3.386, 629, 4.308, 642, 1.948, 670, 3.211, 977,
          4.308, 978, 3.211, 979, 3.211, 988, 4.552, 989, 3.483, 1004, 4.017, 1007, 3.846, 1008,
          3.846, 1010, 5.272, 1012, 5.159, 1013, 3.846, 1014, 3.846, 1015, 3.483, 1016, 3.846, 1017,
          3.846, 1018, 5.159, 1019, 6.179, 1020, 6.221, 1021, 3.846, 1022, 3.846, 1023, 3.846, 1024,
          3.846, 1025, 3.846, 1026, 3.846, 1027, 3.846, 1028, 3.846, 1029, 3.483, 1030, 3.846,
        ],
      ],
      ['title/injectables/I18nStreamService.html', [361, 1.38, 988, 2.636]],
      [
        'body/injectables/I18nStreamService.html',
        [
          0, 0.242, 3, 0.104, 4, 0.104, 5, 0.075, 7, 0.457, 8, 0.877, 10, 0.478, 11, 0.012, 18,
          1.915, 20, 0.151, 27, 0.104, 29, 0.009, 30, 0.009, 34, 2.317, 36, 1.889, 42, 2.104, 46,
          1.667, 47, 1.719, 48, 1.261, 56, 1.357, 73, 1.199, 80, 0.935, 96, 2.649, 103, 1.537, 170,
          1.953, 361, 2.08, 363, 2.277, 640, 3.763, 759, 4.918, 978, 5.356, 979, 5.356, 988, 3.973,
          1019, 6.182, 1031, 4.752, 1032, 6.21, 1033, 4.752, 1034, 6.21, 1035, 6.21, 1036, 4.752,
          1037, 6.917, 1038, 4.752, 1039, 4.752, 1040, 4.752, 1041, 4.752, 1042, 4.752, 1043, 4.752,
        ],
      ],
      ['title/interfaces/IFeatureModel.html', [112, 0.142, 626, 3.262]],
      [
        'body/interfaces/IFeatureModel.html',
        [
          0, 0.246, 3, 0.105, 4, 0.105, 5, 0.076, 7, 0.463, 8, 0.886, 10, 0.454, 11, 0.012, 20,
          0.161, 22, 4.893, 23, 3.283, 26, 2.767, 27, 0.105, 29, 0.009, 30, 0.009, 47, 2.042, 73,
          1.216, 80, 0.948, 103, 1.328, 111, 0.834, 112, 0.166, 119, 2.411, 127, 2.311, 136, 3.791,
          311, 5.086, 546, 2.767, 622, 4.011, 623, 4.216, 626, 5.516, 629, 4.577, 630, 4.964, 631,
          5.841, 632, 3.283, 633, 5.482, 634, 4.216, 635, 4.216, 636, 4.216, 637, 4.216, 638, 4.216,
          639, 4.216, 640, 3.818,
        ],
      ],
      ['title/interfaces/JwtCustomClaims.html', [112, 0.142, 1044, 3.602]],
      [
        'body/interfaces/JwtCustomClaims.html',
        [
          3, 0.101, 4, 0.101, 5, 0.073, 7, 0.445, 8, 0.863, 10, 0.445, 11, 0.012, 20, 0.165, 25,
          2.339, 27, 0.134, 29, 0.009, 30, 0.009, 48, 1.24, 56, 1.323, 76, 1.144, 80, 0.911, 107,
          0.489, 108, 0.489, 109, 0.632, 111, 0.801, 112, 0.159, 148, 2.532, 160, 2.964, 161, 2.51,
          163, 3.668, 164, 1.975, 165, 3.668, 174, 4.051, 178, 2.598, 179, 3.668, 200, 2.113, 202,
          5.303, 203, 4.652, 233, 3.382, 325, 2.659, 486, 4.836, 496, 4.051, 948, 3.668, 1044,
          6.351, 1045, 4.632, 1046, 6.831, 1047, 6.831, 1048, 4.632, 1049, 4.632, 1050, 4.632, 1051,
          4.632, 1052, 4.632, 1053, 4.632,
        ],
      ],
      ['title/injectables/NotificationsService.html', [361, 1.38, 675, 2.491]],
      [
        'body/injectables/NotificationsService.html',
        [
          0, 0.222, 3, 0.095, 4, 0.095, 5, 0.069, 7, 0.419, 8, 0.829, 10, 0.284, 11, 0.012, 18,
          1.836, 20, 0.155, 25, 2.248, 27, 0.095, 29, 0.008, 30, 0.008, 34, 2.552, 35, 3.877, 36,
          1.785, 37, 2.454, 46, 1.171, 47, 1.208, 48, 0.886, 56, 1.246, 69, 2.031, 70, 2.502, 73,
          1.101, 78, 2.172, 81, 1.671, 96, 2.919, 103, 1.452, 107, 0.531, 108, 0.531, 109, 0.8, 164,
          1.861, 218, 2.936, 228, 3.064, 255, 2.009, 268, 2.009, 269, 2.091, 291, 1.246, 361, 1.965,
          363, 2.091, 396, 2.792, 397, 2.385, 404, 3.186, 533, 5.799, 675, 3.549, 924, 3.186, 1054,
          4.363, 1055, 6.63, 1056, 6.63, 1057, 4.363, 1058, 6.63, 1059, 6.63, 1060, 4.363, 1061,
          5.868, 1062, 4.363, 1063, 5.868, 1064, 4.363, 1065, 4.363, 1066, 4.363,
        ],
      ],
      ['title/interfaces/Render.html', [112, 0.142, 537, 2.491]],
      [
        'body/interfaces/Render.html',
        [
          3, 0.069, 4, 0.069, 5, 0.05, 7, 0.302, 8, 0.658, 10, 0.523, 11, 0.012, 20, 0.102, 27,
          0.121, 29, 0.007, 30, 0.007, 46, 0.844, 51, 2.544, 103, 1.305, 107, 0.252, 108, 0.252,
          109, 0.429, 111, 0.544, 112, 0.191, 178, 1.125, 218, 1.392, 282, 2.061, 290, 2.326, 291,
          0.898, 374, 1.641, 377, 2.769, 381, 3.169, 384, 1.804, 386, 3.615, 398, 3.01, 401, 2.14,
          405, 2.011, 435, 3.575, 436, 3.349, 445, 2.295, 537, 3.954, 586, 1.719, 615, 3.623, 714,
          2.011, 753, 4.755, 1067, 2.489, 1068, 4.851, 1069, 3.685, 1070, 5.313, 1071, 3.685, 1072,
          3.685, 1073, 6.073, 1074, 3.546, 1075, 4.851, 1076, 4.851, 1077, 4.046, 1078, 4.388, 1079,
          4.388, 1080, 4.388, 1081, 2.489, 1082, 2.295, 1083, 2.14, 1084, 2.489, 1085, 2.489, 1086,
          2.489, 1087, 2.489, 1088, 3.169, 1089, 2.978, 1090, 2.814, 1091, 2.489, 1092, 2.489, 1093,
          2.295, 1094, 2.489, 1095, 2.295,
        ],
      ],
      ['title/classes/RenderChartConfigRequestDto.html', [0, 0.21, 1096, 3.262]],
      [
        'body/classes/RenderChartConfigRequestDto.html',
        [
          0, 0.306, 2, 2.144, 3, 0.131, 4, 0.131, 5, 0.095, 11, 0.012, 20, 0.157, 27, 0.131, 29,
          0.01, 30, 0.01, 107, 0.48, 108, 0.48, 109, 0.817, 200, 2.074, 205, 3.18, 386, 2.653, 573,
          3.306, 574, 2.074, 575, 2.074, 1096, 5.686, 1097, 5.992, 1098, 5.992, 1099, 5.992,
        ],
      ],
      ['title/controllers/RenderController.html', [641, 1.824, 1100, 3.262]],
      [
        'body/controllers/RenderController.html',
        [
          0, 0.161, 3, 0.069, 4, 0.069, 5, 0.05, 7, 0.303, 10, 0.399, 11, 0.012, 14, 1.905, 18,
          0.872, 20, 0.173, 25, 1.785, 27, 0.069, 29, 0.007, 30, 0.007, 34, 2.054, 35, 3.033, 36,
          1.418, 37, 2.053, 42, 1.395, 46, 0.845, 47, 0.872, 48, 0.639, 51, 1.722, 56, 0.9, 61,
          1.722, 73, 0.795, 76, 1.187, 78, 1.166, 80, 0.62, 81, 2.348, 96, 2.348, 107, 0.583, 108,
          0.583, 109, 0.836, 145, 1.905, 164, 1.987, 211, 1.51, 218, 2.457, 228, 2.433, 291, 1.331,
          362, 3.033, 374, 2.896, 377, 2.329, 384, 3.184, 386, 1.395, 391, 2.754, 396, 2.015, 397,
          1.722, 398, 2.823, 402, 3.403, 403, 2.145, 404, 2.3, 435, 2.548, 439, 2.3, 447, 2.754,
          537, 1.905, 574, 1.09, 575, 1.09, 608, 1.574, 615, 1.51, 617, 3.352, 631, 2.494, 632,
          2.145, 641, 1.395, 642, 1.395, 644, 2.015, 660, 1.905, 666, 1.905, 680, 1.905, 681, 2.754,
          692, 2.773, 698, 1.905, 714, 2.015, 729, 2.3, 753, 2.982, 931, 2.675, 1070, 2.3, 1088,
          2.145, 1089, 2.015, 1090, 1.905, 1095, 2.3, 1096, 4.855, 1100, 3.691, 1101, 3.149, 1102,
          4.66, 1103, 3.149, 1104, 4.66, 1105, 3.149, 1106, 3.149, 1107, 2.015, 1108, 2.494, 1109,
          2.494, 1110, 2.754, 1111, 2.754, 1112, 3.777, 1113, 2.754, 1114, 3.149, 1115, 3.149, 1116,
          3.149, 1117, 3.149, 1118, 3.149, 1119, 3.149, 1120, 3.149, 1121, 3.149, 1122, 3.149, 1123,
          2.754, 1124, 3.149, 1125, 2.754, 1126, 3.149, 1127, 2.754, 1128, 3.149, 1129, 3.149, 1130,
          4.66, 1131, 3.149, 1132, 3.149, 1133, 3.149, 1134, 3.149, 1135, 3.149, 1136, 3.149, 1137,
          3.149, 1138, 2.754, 1139, 2.754,
        ],
      ],
      ['title/interfaces/RenderMetadata.html', [112, 0.142, 1093, 3.008]],
      [
        'body/interfaces/RenderMetadata.html',
        [
          3, 0.071, 4, 0.071, 5, 0.051, 7, 0.311, 8, 0.672, 10, 0.509, 11, 0.012, 20, 0.104, 27,
          0.123, 29, 0.007, 30, 0.007, 46, 0.869, 51, 2.599, 103, 1.398, 107, 0.259, 108, 0.259,
          109, 0.441, 111, 0.56, 112, 0.194, 178, 1.701, 218, 2.751, 282, 1.433, 290, 2.376, 291,
          0.924, 374, 3.243, 377, 3.666, 381, 3.237, 384, 1.857, 386, 3.629, 398, 2.189, 401, 2.203,
          405, 3.042, 435, 3.618, 436, 3.396, 445, 2.363, 537, 3.408, 586, 1.769, 615, 3.516, 714,
          3.975, 753, 3.606, 1067, 2.562, 1068, 4.919, 1069, 2.562, 1070, 5.357, 1071, 2.562, 1072,
          2.562, 1073, 5.929, 1074, 3.042, 1075, 5.241, 1076, 5.241, 1077, 2.363, 1078, 2.562, 1079,
          2.562, 1080, 2.562, 1081, 2.562, 1082, 2.363, 1083, 2.203, 1084, 2.562, 1085, 2.562, 1086,
          2.562, 1087, 2.562, 1088, 3.237, 1089, 3.042, 1090, 2.875, 1091, 2.562, 1092, 3.765, 1093,
          3.472, 1094, 3.765, 1095, 2.363,
        ],
      ],
      ['title/modules/RenderModule.html', [119, 1.426, 1140, 3.008]],
      [
        'body/modules/RenderModule.html',
        [
          0, 0.252, 3, 0.108, 4, 0.108, 5, 0.078, 11, 0.012, 20, 0.169, 27, 0.108, 29, 0.009, 30,
          0.009, 73, 1.249, 107, 0.511, 108, 0.511, 119, 2.442, 121, 2.373, 122, 2.373, 123, 2.585,
          124, 2.707, 125, 2.585, 126, 3.683, 127, 2.373, 132, 3.486, 133, 2.585, 134, 2.707, 145,
          2.994, 362, 4.315, 642, 2.824, 692, 3.945, 931, 2.842, 1100, 5.587, 1107, 3.168, 1112,
          5.375, 1113, 4.33, 1140, 6.051, 1141, 4.33, 1142, 4.33, 1143, 4.951, 1144, 4.951,
        ],
      ],
      ['title/interfaces/RenderParams.html', [112, 0.142, 1082, 3.008]],
      [
        'body/interfaces/RenderParams.html',
        [
          3, 0.073, 4, 0.073, 5, 0.053, 7, 0.32, 8, 0.686, 10, 0.511, 11, 0.012, 20, 0.106, 27,
          0.125, 29, 0.007, 30, 0.007, 46, 1.302, 51, 3.82, 103, 1.332, 107, 0.267, 108, 0.267, 109,
          0.454, 111, 0.576, 112, 0.197, 158, 3.304, 178, 1.19, 218, 1.473, 282, 1.473, 290, 2.425,
          291, 0.95, 374, 1.737, 377, 2.862, 381, 4.286, 384, 3.613, 386, 3.626, 398, 2.234, 401,
          2.265, 405, 2.129, 435, 2.652, 436, 2.652, 445, 3.543, 537, 3.807, 586, 1.819, 615, 3.672,
          714, 2.129, 753, 3.665, 1067, 2.635, 1068, 4.985, 1069, 2.635, 1070, 5.399, 1071, 2.635,
          1072, 2.635, 1073, 5.855, 1074, 3.105, 1075, 4.535, 1076, 4.535, 1077, 2.429, 1078, 2.635,
          1079, 2.635, 1080, 2.635, 1081, 3.842, 1082, 3.543, 1083, 3.304, 1084, 2.635, 1085, 2.635,
          1086, 2.635, 1087, 2.635, 1088, 3.304, 1089, 3.105, 1090, 2.934, 1091, 2.635, 1092, 2.635,
          1093, 2.429, 1094, 2.635, 1095, 2.429,
        ],
      ],
      ['title/injectables/RenderService.html', [361, 1.38, 1112, 2.805]],
      [
        'body/injectables/RenderService.html',
        [
          0, 0.183, 3, 0.079, 4, 0.079, 5, 0.057, 7, 0.345, 8, 0.725, 10, 0.39, 11, 0.012, 18,
          1.421, 20, 0.157, 25, 1.965, 27, 0.079, 29, 0.007, 30, 0.007, 34, 2.004, 35, 3.567, 36,
          1.561, 46, 0.965, 47, 0.995, 48, 0.73, 51, 2.805, 56, 1.027, 57, 2.362, 61, 1.965, 69,
          1.776, 70, 1.533, 73, 0.907, 76, 1.201, 78, 2.733, 80, 1.009, 88, 1.877, 96, 2.291, 107,
          0.411, 108, 0.411, 109, 0.7, 255, 1.655, 268, 1.655, 269, 1.723, 291, 1.027, 361, 1.718,
          363, 1.723, 384, 2.945, 386, 2.649, 395, 3.144, 398, 3.176, 435, 1.965, 436, 1.965, 480,
          3.144, 537, 4.172, 615, 2.459, 753, 2.3, 781, 3.144, 782, 3.144, 924, 2.625, 1088, 2.448,
          1089, 2.3, 1090, 3.103, 1111, 3.144, 1112, 3.493, 1125, 5.232, 1145, 3.595, 1146, 3.595,
          1147, 3.595, 1148, 5.13, 1149, 3.595, 1150, 5.706, 1151, 3.595, 1152, 5.13, 1153, 5.13,
          1154, 5.13, 1155, 5.13, 1156, 5.983, 1157, 5.983, 1158, 3.595, 1159, 3.595, 1160, 3.595,
          1161, 3.595, 1162, 3.595, 1163, 3.595, 1164, 3.595, 1165, 3.595, 1166, 3.595, 1167, 2.847,
          1168, 5.167, 1169, 6.524, 1170, 3.595, 1171, 5.167, 1172, 3.595, 1173, 3.595, 1174, 3.595,
          1175, 3.595, 1176, 3.595, 1177, 3.595,
        ],
      ],
      ['title/interfaces/Resource.html', [112, 0.142, 618, 2.805]],
      [
        'body/interfaces/Resource.html',
        [
          3, 0.084, 4, 0.084, 5, 0.061, 11, 0.012, 18, 1.062, 20, 0.136, 27, 0.155, 29, 0.008, 30,
          0.008, 38, 2.685, 57, 3.464, 65, 2.685, 76, 1.184, 94, 3.438, 103, 1.463, 107, 0.431, 108,
          0.431, 109, 0.733, 111, 0.664, 112, 0.213, 156, 3.355, 157, 2.937, 170, 2.549, 203, 2.612,
          281, 5.381, 282, 3.131, 284, 4.407, 286, 4.431, 287, 3.389, 289, 3.749, 291, 1.096, 298,
          5.606, 344, 2.32, 578, 4.006, 581, 2.937, 582, 2.805, 605, 3.923, 606, 3.038, 607, 3.923,
          608, 2.685, 609, 3.658, 610, 3.438, 611, 3.658, 612, 3.038, 613, 3.038, 614, 3.038, 615,
          2.971, 616, 4.909, 617, 3.672, 618, 3.658, 619, 3.038, 620, 3.923, 621, 3.038, 1178,
          3.837,
        ],
      ],
      ['title/interfaces/ResourceDeleted.html', [112, 0.142, 1179, 3.262]],
      [
        'body/interfaces/ResourceDeleted.html',
        [
          0, 0.202, 3, 0.087, 4, 0.087, 5, 0.063, 7, 0.38, 8, 0.775, 10, 0.494, 11, 0.012, 20,
          0.162, 25, 1.515, 27, 0.087, 29, 0.008, 30, 0.008, 34, 1.325, 37, 2.646, 57, 3.292, 73,
          0.998, 76, 0.662, 80, 1.407, 81, 2.738, 103, 1.41, 107, 0.44, 108, 0.44, 109, 0.749, 111,
          0.684, 112, 0.136, 173, 3.445, 178, 1.415, 450, 4.734, 571, 3.907, 574, 1.369, 575, 1.369,
          582, 2.065, 598, 3.811, 600, 3.319, 603, 4.104, 608, 2.743, 609, 2.694, 610, 2.531, 615,
          3.708, 617, 3, 641, 1.752, 660, 2.392, 666, 2.392, 672, 2.694, 680, 2.392, 698, 2.392,
          987, 2.694, 990, 5.859, 994, 3.133, 1179, 4.346, 1180, 3.46, 1181, 4.032, 1182, 3.133,
          1183, 3.46, 1184, 2.889, 1185, 3.46, 1186, 3.46, 1187, 3.46, 1188, 3.46, 1189, 3.46, 1190,
          3.46, 1191, 3.46, 1192, 3.46, 1193, 3.46, 1194, 3.46, 1195, 3.46, 1196, 3.46,
        ],
      ],
      ['title/interfaces/ResourceGenConfig.html', [112, 0.142, 620, 3.008]],
      [
        'body/interfaces/ResourceGenConfig.html',
        [
          3, 0.079, 4, 0.079, 5, 0.057, 7, 0.348, 8, 0.728, 10, 0.426, 11, 0.012, 20, 0.131, 27,
          0.151, 29, 0.007, 30, 0.007, 38, 2.576, 48, 1.046, 57, 3.31, 65, 2.576, 76, 1.158, 94,
          2.315, 103, 1.505, 107, 0.413, 108, 0.413, 109, 0.703, 111, 0.626, 112, 0.207, 157, 1.978,
          170, 2.956, 203, 2.464, 281, 5.478, 282, 3.349, 284, 4.534, 286, 4.348, 287, 3.781, 289,
          4.183, 291, 1.034, 298, 5.522, 344, 2.188, 578, 3.93, 581, 2.818, 582, 2.691, 605, 3.764,
          606, 2.865, 607, 3.764, 608, 2.576, 609, 3.51, 610, 3.298, 611, 3.51, 612, 2.865, 613,
          2.865, 614, 2.865, 615, 2.878, 616, 4.755, 617, 3.577, 618, 2.464, 619, 2.865, 620, 4.384,
          621, 2.865,
        ],
      ],
      ['title/modules/ServerNestClusterModule.html', [119, 1.426, 1197, 3.008]],
      [
        'body/modules/ServerNestClusterModule.html',
        [
          0, 0.284, 3, 0.122, 4, 0.122, 5, 0.088, 11, 0.012, 20, 0.15, 27, 0.122, 29, 0.01, 30,
          0.01, 73, 1.405, 119, 2.577, 121, 2.669, 122, 2.669, 123, 2.907, 124, 3.044, 125, 2.907,
          126, 3.888, 127, 2.669, 132, 3.754, 133, 2.907, 134, 3.044, 542, 5.939, 543, 4.869, 544,
          6.006, 1197, 5.939, 1198, 4.869, 1199, 4.869, 1200, 5.568, 1201, 4.869, 1202, 5.568,
        ],
      ],
      ['title/interfaces/SignUpFormSpecs.html', [112, 0.142, 1203, 3.262]],
      [
        'body/interfaces/SignUpFormSpecs.html',
        [
          3, 0.095, 4, 0.095, 5, 0.069, 7, 0.418, 8, 0.828, 10, 0.482, 11, 0.012, 20, 0.162, 25,
          2.244, 27, 0.162, 29, 0.008, 30, 0.008, 76, 1.186, 80, 1.152, 103, 0.829, 107, 0.349, 108,
          0.349, 109, 0.594, 111, 0.753, 112, 0.15, 157, 2.379, 170, 1.789, 211, 2.086, 287, 3.202,
          297, 3.177, 342, 3.177, 344, 2.632, 1083, 2.963, 1203, 4.639, 1204, 3.806, 1205, 5.609,
          1206, 6.195, 1207, 5.855, 1208, 5.244, 1209, 3.177, 1210, 3.806, 1211, 4.352, 1212, 4.352,
          1213, 5.791, 1214, 3.806, 1215, 5.858, 1216, 5.858, 1217, 5.123, 1218, 4.352, 1219, 4.352,
          1220, 4.352, 1221, 4.352, 1222, 3.806, 1223, 6.03, 1224, 3.446, 1225, 4.352, 1226, 7.083,
          1227, 4.352, 1228, 4.352, 1229, 3.446, 1230, 5.123, 1231, 4.352, 1232, 4.352,
        ],
      ],
      ['title/interfaces/SignUpProps.html', [112, 0.142, 1233, 3.602]],
      [
        'body/interfaces/SignUpProps.html',
        [
          3, 0.057, 4, 0.057, 5, 0.041, 7, 0.249, 8, 0.568, 10, 0.432, 11, 0.012, 20, 0.175, 22,
          1.567, 27, 0.057, 29, 0.006, 30, 0.006, 37, 1.488, 61, 2.198, 69, 1.391, 76, 1.3, 78,
          0.959, 80, 1.092, 81, 1.54, 103, 0.494, 107, 0.531, 108, 0.531, 109, 0.353, 111, 0.448,
          112, 0.089, 148, 1.417, 160, 1.658, 161, 2.282, 176, 1.567, 211, 1.927, 221, 1.765, 227,
          1.567, 255, 1.851, 268, 1.851, 269, 3.046, 287, 3.284, 291, 0.74, 297, 1.892, 306, 1.892,
          319, 1.417, 323, 2.266, 325, 1.488, 332, 1.892, 333, 1.892, 342, 2.935, 344, 1.567, 412,
          2.052, 471, 2.266, 472, 2.266, 473, 2.266, 474, 2.266, 475, 2.052, 476, 2.052, 803, 2.266,
          859, 2.052, 883, 2.266, 946, 2.266, 948, 2.052, 1167, 2.052, 1168, 2.052, 1171, 3.184,
          1203, 3.184, 1205, 5.033, 1206, 5.253, 1207, 3.184, 1210, 2.266, 1213, 4.853, 1214, 2.266,
          1217, 2.266, 1222, 2.266, 1223, 3.184, 1224, 3.184, 1233, 3.516, 1234, 2.592, 1235, 2.052,
          1236, 2.052, 1237, 2.592, 1238, 2.266, 1239, 2.592, 1240, 2.266, 1241, 2.592, 1242, 2.592,
          1243, 2.266, 1244, 2.266, 1245, 2.592, 1246, 5.55, 1247, 2.592, 1248, 2.592, 1249, 4.02,
          1250, 4.02, 1251, 2.266, 1252, 2.266, 1253, 2.266, 1254, 4.02, 1255, 2.592, 1256, 2.592,
          1257, 3.184, 1258, 1.892, 1259, 2.431, 1260, 2.266, 1261, 2.592, 1262, 4.02, 1263, 2.592,
          1264, 2.592, 1265, 2.592, 1266, 2.592, 1267, 2.592, 1268, 2.592, 1269, 2.266, 1270, 2.266,
          1271, 2.266, 1272, 2.266, 1273, 2.592, 1274, 2.266, 1275, 3.516, 1276, 2.266, 1277, 4.925,
          1278, 2.592, 1279, 2.592, 1280, 2.592, 1281, 4.925, 1282, 2.592, 1283, 2.592, 1284, 3.184,
          1285, 2.592, 1286, 2.592, 1287, 2.266, 1288, 2.592, 1289, 2.592, 1290, 4.02, 1291, 2.592,
          1292, 2.592, 1293, 2.592, 1294, 2.592, 1295, 4.02, 1296, 2.592, 1297, 2.592, 1298, 2.592,
          1299, 4.02, 1300, 2.592, 1301, 2.592, 1302, 2.592, 1303, 2.592, 1304, 2.592, 1305, 2.592,
          1306, 2.592, 1307, 2.592, 1308, 2.592,
        ],
      ],
      ['title/interfaces/SpinnerButtonProps.html', [112, 0.142, 1309, 3.602]],
      [
        'body/interfaces/SpinnerButtonProps.html',
        [
          3, 0.124, 4, 0.124, 5, 0.09, 7, 0.544, 8, 0.981, 10, 0.452, 11, 0.012, 20, 0.124, 27,
          0.124, 29, 0.01, 30, 0.01, 48, 1.409, 107, 0.454, 108, 0.454, 111, 0.98, 112, 0.195, 173,
          4.464, 200, 2.402, 1243, 4.953, 1309, 6.069, 1310, 4.953, 1311, 5.663, 1312, 5.942, 1313,
          7.821, 1314, 6.193,
        ],
      ],
      ['title/interfaces/ToastMessageProps.html', [112, 0.142, 1315, 3.262]],
      [
        'body/interfaces/ToastMessageProps.html',
        [
          3, 0.12, 4, 0.12, 5, 0.087, 7, 0.526, 8, 0.96, 10, 0.443, 11, 0.012, 20, 0.12, 27, 0.162,
          29, 0.01, 30, 0.01, 48, 1.38, 69, 1.895, 80, 1.077, 103, 1.544, 111, 0.947, 112, 0.188,
          211, 3.936, 411, 4.229, 468, 4.789, 477, 5.383, 553, 3.504, 1315, 5.853, 1316, 4.789,
          1317, 5.476,
        ],
      ],
      ['title/interfaces/ToolbarProps.html', [112, 0.142, 1318, 3.602]],
      [
        'body/interfaces/ToolbarProps.html',
        [
          3, 0.113, 4, 0.113, 5, 0.082, 7, 0.495, 8, 0.924, 10, 0.336, 11, 0.012, 20, 0.143, 27,
          0.113, 29, 0.009, 30, 0.009, 69, 1.783, 76, 1.204, 80, 1.013, 111, 0.891, 112, 0.177, 176,
          3.115, 227, 3.115, 332, 3.762, 333, 3.762, 421, 2.957, 1090, 3.115, 1318, 5.721, 1319,
          5.152, 1320, 5.824, 1321, 5.248, 1322, 5.152, 1323, 5.152, 1324, 7.188, 1325, 5.152, 1326,
          5.152, 1327, 5.152, 1328, 4.505, 1329, 4.776, 1330, 5.152, 1331, 5.152, 1332, 4.505, 1333,
          5.152, 1334, 4.505, 1335, 4.505, 1336, 5.152, 1337, 5.152, 1338, 5.152, 1339, 4.505, 1340,
          5.152, 1341, 5.152,
        ],
      ],
      ['title/controllers/TransactionController.html', [150, 3.008, 641, 1.824]],
      [
        'body/controllers/TransactionController.html',
        [
          0, 0.189, 3, 0.081, 4, 0.081, 5, 0.059, 7, 0.357, 10, 0.397, 11, 0.012, 14, 3.177, 18,
          1.454, 20, 0.163, 25, 1.423, 27, 0.081, 29, 0.007, 30, 0.007, 34, 2.041, 36, 1.598, 37,
          2.684, 42, 1.645, 46, 1.41, 47, 1.454, 48, 1.066, 56, 1.5, 61, 2.872, 73, 0.938, 76, 0.88,
          80, 1.033, 81, 2.334, 96, 2.334, 107, 0.531, 108, 0.531, 109, 0.716, 145, 2.247, 150,
          3.836, 198, 5.444, 211, 2.518, 218, 1.645, 362, 3.331, 374, 2.743, 437, 2.53, 574, 1.286,
          575, 1.286, 608, 1.857, 617, 4.163, 641, 1.645, 642, 1.645, 644, 2.378, 650, 5.904, 660,
          2.247, 666, 2.247, 668, 3.25, 680, 2.247, 692, 3.045, 698, 3.177, 705, 3.25, 726, 3.25,
          729, 3.836, 734, 3.25, 735, 3.25, 931, 2.133, 1107, 2.378, 1342, 3.716, 1343, 5.328, 1344,
          5.253, 1345, 5.253, 1346, 3.716, 1347, 5.904, 1348, 3.716, 1349, 3.716, 1350, 3.716, 1351,
          3.716, 1352, 3.716, 1353, 4.149, 1354, 3.25, 1355, 3.716, 1356, 3.716, 1357, 5.253, 1358,
          3.716, 1359, 3.716, 1360, 3.716, 1361, 5.253, 1362, 3.716, 1363, 3.716, 1364, 3.716, 1365,
          3.716, 1366, 3.716,
        ],
      ],
      ['title/modules/TransactionModule.html', [119, 1.426, 131, 2.805]],
      [
        'body/modules/TransactionModule.html',
        [
          0, 0.253, 3, 0.109, 4, 0.109, 5, 0.079, 11, 0.012, 20, 0.169, 27, 0.109, 29, 0.009, 30,
          0.009, 73, 1.253, 107, 0.512, 108, 0.512, 119, 2.445, 121, 2.38, 122, 2.38, 123, 2.593,
          124, 2.715, 125, 2.593, 126, 3.689, 127, 2.38, 131, 5.646, 132, 3.493, 133, 2.593, 134,
          2.715, 145, 3.003, 150, 5.159, 362, 4.319, 642, 2.83, 692, 3.948, 931, 2.85, 1107, 3.178,
          1353, 5.379, 1354, 4.343, 1367, 4.343, 1368, 4.343, 1369, 4.966, 1370, 4.966,
        ],
      ],
      ['title/classes/TransactionRequestDto.html', [0, 0.21, 1347, 3.262]],
      [
        'body/classes/TransactionRequestDto.html',
        [
          0, 0.307, 2, 2.152, 3, 0.132, 4, 0.132, 5, 0.095, 11, 0.012, 20, 0.157, 27, 0.132, 29,
          0.01, 30, 0.01, 107, 0.482, 108, 0.482, 109, 0.82, 200, 2.081, 205, 3.187, 573, 3.313,
          574, 2.081, 575, 2.081, 1347, 5.699, 1371, 6.014, 1372, 6.014, 1373, 6.014,
        ],
      ],
      ['title/injectables/TransactionService.html', [361, 1.38, 1353, 2.805]],
      [
        'body/injectables/TransactionService.html',
        [
          0, 0.179, 3, 0.077, 4, 0.077, 5, 0.056, 7, 0.338, 8, 0.714, 10, 0.385, 11, 0.012, 17,
          1.558, 18, 1.789, 20, 0.15, 25, 1.347, 27, 0.077, 29, 0.007, 30, 0.007, 34, 2.56, 35,
          3.532, 36, 1.537, 37, 2.188, 46, 0.944, 47, 0.974, 48, 0.714, 56, 1.005, 69, 2.046, 70,
          2.521, 72, 3.077, 73, 0.888, 76, 1.146, 78, 2.391, 81, 1.935, 87, 3.077, 88, 2.638, 96,
          2.928, 103, 1.357, 107, 0.474, 108, 0.474, 109, 0.689, 164, 2.155, 178, 2.312, 218, 2.861,
          228, 1.837, 236, 5.17, 259, 2.786, 291, 1.005, 361, 1.692, 363, 1.686, 367, 5.17, 374,
          3.572, 386, 2.618, 392, 4.418, 396, 2.251, 397, 1.923, 402, 4.316, 403, 2.396, 404, 2.569,
          421, 2.019, 434, 3.077, 438, 3.077, 439, 3.689, 891, 3.077, 912, 2.569, 1343, 3.077, 1353,
          3.44, 1374, 3.518, 1375, 5.911, 1376, 5.052, 1377, 5.052, 1378, 3.518, 1379, 3.518, 1380,
          5.052, 1381, 3.518, 1382, 5.052, 1383, 3.518, 1384, 3.518, 1385, 5.052, 1386, 3.518, 1387,
          3.518, 1388, 3.518, 1389, 3.518, 1390, 3.518, 1391, 3.518, 1392, 3.518, 1393, 3.518, 1394,
          3.518, 1395, 3.518, 1396, 6.461, 1397, 3.518, 1398, 3.518, 1399, 3.518, 1400, 3.518, 1401,
          3.518, 1402, 3.518, 1403, 3.518, 1404, 3.518,
        ],
      ],
      ['title/interfaces/UiButtonProps.html', [112, 0.142, 1312, 3.262]],
      [
        'body/interfaces/UiButtonProps.html',
        [
          3, 0.096, 4, 0.096, 5, 0.07, 7, 0.423, 8, 0.834, 10, 0.546, 11, 0.012, 20, 0.146, 27,
          0.146, 29, 0.008, 30, 0.008, 48, 1.674, 50, 4.308, 111, 0.761, 112, 0.151, 161, 1.808,
          173, 3.639, 200, 2.042, 227, 2.66, 291, 1.256, 413, 5.272, 491, 5.822, 898, 6.221, 1312,
          4.672, 1320, 5.195, 1321, 4.861, 1329, 5.195, 1405, 3.846, 1406, 7.114, 1407, 7.114, 1408,
          6.68, 1409, 6.221, 1410, 6.489, 1411, 6.657, 1412, 6.657, 1413, 4.398, 1414, 4.398, 1415,
          4.398, 1416, 4.398,
        ],
      ],
      ['title/interfaces/UiCardProps.html', [112, 0.142, 1417, 3.602]],
      [
        'body/interfaces/UiCardProps.html',
        [
          3, 0.101, 4, 0.101, 5, 0.073, 7, 0.444, 8, 0.861, 10, 0.397, 11, 0.012, 20, 0.149, 27,
          0.101, 29, 0.009, 30, 0.009, 69, 1.599, 76, 1.021, 80, 0.909, 111, 0.799, 112, 0.159, 161,
          2.506, 176, 2.793, 200, 2.11, 332, 3.373, 412, 3.658, 1244, 5.331, 1269, 4.04, 1270, 4.04,
          1271, 4.04, 1272, 4.04, 1274, 4.04, 1275, 5.331, 1276, 4.04, 1320, 5.656, 1321, 4.981,
          1329, 3.373, 1332, 4.04, 1334, 4.04, 1335, 4.04, 1339, 4.04, 1417, 5.331, 1418, 4.619,
          1419, 6.822, 1420, 4.619, 1421, 4.619, 1422, 4.619, 1423, 4.619, 1424, 4.619, 1425, 4.619,
          1426, 4.619, 1427, 4.619, 1428, 4.619, 1429, 4.619, 1430, 6.095, 1431, 6.095, 1432, 4.619,
          1433, 4.619, 1434, 4.619, 1435, 4.619, 1436, 4.619, 1437, 4.04, 1438, 6.095, 1439, 4.619,
          1440, 4.619, 1441, 4.619, 1442, 4.619, 1443, 4.619, 1444, 4.619, 1445, 4.619, 1446, 4.619,
          1447, 4.619, 1448, 4.619, 1449, 4.619, 1450, 4.619, 1451, 4.619, 1452, 4.619,
        ],
      ],
      ['title/interfaces/UiHeaderProps.html', [112, 0.142, 1453, 3.602]],
      [
        'body/interfaces/UiHeaderProps.html',
        [
          3, 0.105, 4, 0.105, 5, 0.076, 7, 0.459, 8, 0.881, 10, 0.537, 11, 0.012, 13, 3.058, 20,
          0.105, 27, 0.105, 29, 0.009, 30, 0.009, 48, 1.265, 103, 1.582, 111, 0.827, 112, 0.164,
          158, 4.244, 161, 1.965, 170, 1.965, 173, 2.613, 290, 3.908, 460, 6.429, 1089, 4.704, 1090,
          4.446, 1320, 5.368, 1321, 5.065, 1409, 5.451, 1453, 5.451, 1454, 4.779, 1455, 7.351, 1456,
          7.351, 1457, 7.351, 1458, 4.779, 1459, 4.779, 1460, 4.779,
        ],
      ],
      ['title/classes/UpdateUserDto.html', [0, 0.21, 603, 2.364]],
      [
        'body/classes/UpdateUserDto.html',
        [
          0, 0.364, 2, 1.586, 3, 0.097, 4, 0.097, 5, 0.07, 10, 0.289, 11, 0.012, 20, 0.156, 27,
          0.174, 29, 0.008, 30, 0.008, 38, 2.964, 65, 2.964, 76, 1.309, 99, 2.424, 107, 0.475, 108,
          0.475, 109, 0.809, 110, 2.125, 111, 0.767, 178, 1.586, 200, 2.47, 205, 1.963, 411, 3.726,
          571, 2.545, 572, 3.237, 573, 2.041, 574, 2.053, 575, 1.534, 576, 3.019, 577, 2.837, 578,
          3.654, 579, 3.019, 580, 5.066, 581, 3.243, 582, 3.097, 583, 3.237, 584, 3.237, 585, 3.237,
          586, 3.902, 587, 3.237, 588, 3.237, 589, 3.237, 590, 3.237, 591, 3.237, 592, 3.237, 593,
          3.237, 594, 3.237, 595, 3.237, 596, 3.237, 597, 3.237, 598, 2.681, 599, 3.237, 600, 2.681,
          601, 3.237, 602, 3.237, 603, 3.405, 604, 3.237,
        ],
      ],
      ['title/interfaces/UploadCsvChartFileProps.html', [112, 0.142, 1461, 3.602]],
      [
        'body/interfaces/UploadCsvChartFileProps.html',
        [
          3, 0.073, 4, 0.073, 5, 0.091, 7, 0.322, 8, 0.69, 10, 0.437, 11, 0.012, 20, 0.168, 27,
          0.073, 29, 0.007, 30, 0.007, 36, 1.485, 70, 2.081, 76, 1.265, 80, 0.66, 107, 0.461, 108,
          0.461, 109, 0.457, 111, 0.58, 112, 0.115, 142, 2.439, 161, 2.365, 176, 2.028, 220, 2.656,
          221, 2.284, 223, 2.933, 224, 2.933, 225, 2.656, 226, 2.933, 227, 2.028, 273, 2.656, 291,
          0.958, 377, 3.356, 380, 2.449, 386, 2.161, 408, 4.302, 411, 1.751, 415, 3.865, 475, 2.656,
          476, 2.656, 486, 3.865, 553, 4.043, 641, 1.485, 912, 2.449, 1208, 2.656, 1209, 2.449,
          1229, 2.656, 1235, 2.656, 1236, 2.656, 1238, 2.933, 1257, 3.865, 1258, 2.449, 1259, 2.028,
          1284, 2.656, 1461, 4.268, 1462, 2.933, 1463, 7.007, 1464, 7.007, 1465, 3.354, 1466, 2.284,
          1467, 3.354, 1468, 3.354, 1469, 3.354, 1470, 3.354, 1471, 3.354, 1472, 3.354, 1473, 4.268,
          1474, 3.354, 1475, 5.032, 1476, 4.268, 1477, 5.032, 1478, 5.032, 1479, 3.354, 1480, 3.354,
          1481, 3.354, 1482, 3.354, 1483, 2.284, 1484, 3.354, 1485, 2.146, 1486, 3.354, 1487, 3.354,
          1488, 3.354, 1489, 2.933, 1490, 2.933, 1491, 4.881, 1492, 3.354, 1493, 3.354, 1494, 3.354,
          1495, 3.354, 1496, 3.354, 1497, 3.354, 1498, 3.354, 1499, 3.354, 1500, 4.881, 1501, 3.354,
          1502, 3.354, 1503, 3.354, 1504, 3.354, 1505, 3.354, 1506, 3.354, 1507, 3.323, 1508, 2.656,
          1509, 3.354, 1510, 3.354,
        ],
      ],
      ['title/classes/UploadDatafileRequestDto.html', [0, 0.21, 656, 3.008]],
      [
        'body/classes/UploadDatafileRequestDto.html',
        [
          0, 0.364, 2, 2.121, 3, 0.13, 4, 0.13, 5, 0.094, 11, 0.012, 20, 0.156, 27, 0.156, 29, 0.01,
          30, 0.01, 107, 0.475, 108, 0.475, 109, 0.808, 200, 2.469, 205, 3.159, 573, 2.729, 574,
          2.051, 575, 2.051, 656, 5.209, 678, 4.328, 810, 3.793, 1511, 5.184, 1512, 5.184, 1513,
          5.184,
        ],
      ],
      ['title/classes/UploadDatafileResponseDto.html', [0, 0.21, 678, 3.008]],
      [
        'body/classes/UploadDatafileResponseDto.html',
        [
          0, 0.364, 2, 2.121, 3, 0.13, 4, 0.13, 5, 0.094, 11, 0.012, 20, 0.156, 27, 0.156, 29, 0.01,
          30, 0.01, 107, 0.475, 108, 0.475, 109, 0.808, 200, 2.469, 205, 3.159, 573, 2.729, 574,
          2.051, 575, 2.051, 656, 4.328, 678, 5.209, 810, 3.793, 1511, 5.184, 1512, 5.184, 1513,
          5.184,
        ],
      ],
      ['title/interfaces/UploadFileSchemaOptions.html', [112, 0.142, 1514, 3.602]],
      [
        'body/interfaces/UploadFileSchemaOptions.html',
        [
          3, 0.114, 4, 0.114, 5, 0.124, 7, 0.5, 8, 0.93, 10, 0.47, 11, 0.012, 20, 0.114, 27, 0.114,
          29, 0.009, 30, 0.009, 107, 0.417, 108, 0.417, 109, 0.709, 111, 0.9, 112, 0.179, 237,
          4.548, 290, 3.608, 291, 1.485, 398, 3.681, 725, 5.755, 1127, 5.755, 1514, 5.755, 1515,
          5.2, 1516, 7.587, 1517, 5.54, 1518, 6.58, 1519, 6.58, 1520, 6.58, 1521, 5.2, 1522, 3.797,
          1523, 5.2,
        ],
      ],
      ['title/interfaces/UploadWizardFormData.html', [112, 0.142, 1485, 2.636]],
      [
        'body/interfaces/UploadWizardFormData.html',
        [
          3, 0.091, 4, 0.091, 5, 0.115, 7, 0.399, 8, 0.802, 10, 0.474, 11, 0.012, 20, 0.124, 27,
          0.152, 29, 0.008, 30, 0.008, 34, 1.392, 69, 1.965, 70, 1.772, 103, 1.324, 107, 0.333, 108,
          0.333, 109, 0.567, 110, 1.991, 111, 0.719, 112, 0.222, 142, 2.076, 157, 3.103, 161, 1.708,
          170, 2.334, 284, 2.385, 290, 2.076, 291, 1.187, 319, 2.271, 325, 2.385, 398, 2.613, 504,
          3.034, 586, 2.271, 706, 2.829, 731, 2.829, 1074, 2.659, 1259, 4.542, 1466, 2.829, 1483,
          4.954, 1485, 3.632, 1507, 5.235, 1517, 4.145, 1522, 3.034, 1524, 3.034, 1525, 3.034, 1526,
          5.121, 1527, 5.948, 1528, 4.495, 1529, 4.495, 1530, 4.495, 1531, 4.495, 1532, 4.495, 1533,
          5.074, 1534, 3.29, 1535, 3.034, 1536, 2.829, 1537, 3.29, 1538, 3.29, 1539, 3.29, 1540,
          3.29, 1541, 3.29, 1542, 3.29, 1543, 3.034,
        ],
      ],
      ['title/interfaces/UploadWizardProps.html', [112, 0.142, 1535, 3.008]],
      [
        'body/interfaces/UploadWizardProps.html',
        [
          3, 0.082, 4, 0.082, 5, 0.097, 7, 0.36, 8, 0.747, 10, 0.505, 11, 0.012, 20, 0.116, 27,
          0.145, 29, 0.007, 30, 0.007, 34, 1.256, 48, 1.35, 69, 2.301, 70, 2.836, 103, 1.386, 107,
          0.3, 108, 0.3, 109, 0.511, 110, 2.534, 111, 0.649, 112, 0.211, 142, 1.874, 157, 3.347,
          161, 1.541, 170, 2.99, 284, 3.034, 290, 3.06, 291, 1.071, 319, 2.05, 325, 2.152, 398,
          3.061, 504, 3.86, 706, 2.553, 731, 2.553, 1074, 3.383, 1259, 4.399, 1466, 2.553, 1483,
          3.6, 1485, 2.399, 1507, 5.197, 1517, 5.311, 1522, 3.86, 1524, 2.738, 1525, 2.738, 1526,
          4.849, 1527, 5.76, 1528, 2.969, 1529, 2.969, 1530, 2.969, 1531, 2.969, 1532, 4.186, 1533,
          5.667, 1534, 2.969, 1535, 3.86, 1536, 3.6, 1537, 4.186, 1538, 4.186, 1539, 5.265, 1540,
          4.186, 1541, 4.186, 1542, 4.186, 1543, 2.738,
        ],
      ],
      ['title/interfaces/UploadWizardRef.html', [112, 0.142, 1466, 2.805]],
      [
        'body/interfaces/UploadWizardRef.html',
        [
          3, 0.089, 4, 0.089, 5, 0.101, 7, 0.39, 8, 0.79, 10, 0.498, 11, 0.012, 20, 0.122, 27,
          0.151, 29, 0.008, 30, 0.008, 34, 1.361, 69, 1.935, 70, 1.733, 103, 1.422, 107, 0.326, 108,
          0.326, 109, 0.554, 110, 1.947, 111, 0.703, 112, 0.22, 142, 2.03, 157, 3.056, 161, 1.67,
          170, 2.298, 284, 2.332, 290, 2.03, 291, 1.161, 319, 2.221, 325, 3.669, 398, 2.574, 504,
          2.967, 553, 3.577, 706, 4.688, 731, 4.688, 1074, 2.6, 1259, 4.163, 1466, 3.806, 1483,
          4.915, 1485, 2.6, 1507, 4.915, 1517, 4.082, 1522, 2.967, 1524, 2.967, 1525, 2.967, 1526,
          4.427, 1527, 5.452, 1528, 3.217, 1529, 3.217, 1530, 3.217, 1531, 3.217, 1532, 4.427, 1533,
          5.447, 1534, 3.217, 1535, 2.967, 1536, 2.766, 1537, 3.217, 1538, 3.217, 1539, 3.217, 1540,
          3.217, 1541, 3.217, 1542, 3.217, 1543, 5.027,
        ],
      ],
      ['title/interfaces/UseHookFormProps.html', [112, 0.142, 1544, 3.602]],
      [
        'body/interfaces/UseHookFormProps.html',
        [
          3, 0.071, 4, 0.071, 5, 0.052, 7, 0.313, 8, 0.676, 10, 0.504, 11, 0.012, 20, 0.152, 22,
          4.335, 27, 0.071, 29, 0.007, 30, 0.007, 36, 1.455, 48, 1.548, 56, 0.932, 61, 1.783, 69,
          1.655, 76, 1.112, 80, 0.642, 103, 1.079, 107, 0.261, 108, 0.261, 109, 0.445, 110, 1.563,
          111, 0.564, 112, 0.112, 161, 2.328, 170, 2.947, 210, 4.553, 255, 1.501, 268, 1.501, 269,
          2.714, 282, 2.118, 287, 1.783, 289, 4.446, 291, 0.932, 292, 2.221, 294, 4.938, 299, 2.583,
          306, 5.066, 319, 2.614, 484, 2.381, 553, 2.087, 608, 1.63, 727, 2.381, 987, 4.246, 1205,
          5.677, 1208, 2.583, 1209, 3.492, 1235, 2.583, 1236, 2.583, 1257, 3.787, 1258, 4.134, 1259,
          3.424, 1284, 2.583, 1287, 4.951, 1314, 2.583, 1536, 2.221, 1543, 4.553, 1544, 4.951, 1545,
          3.261, 1546, 6.938, 1547, 6.235, 1548, 4.483, 1549, 5.662, 1550, 5.662, 1551, 4.951, 1552,
          5.662, 1553, 4.782, 1554, 3.261, 1555, 2.583, 1556, 3.261, 1557, 2.852, 1558, 3.261, 1559,
          4.182, 1560, 2.852, 1561, 2.852, 1562, 3.261, 1563, 4.782, 1564, 3.261, 1565, 3.261, 1566,
          4.782, 1567, 3.261, 1568, 3.261,
        ],
      ],
      ['title/interfaces/UseReactMutation.html', [112, 0.142, 1555, 3.262]],
      [
        'body/interfaces/UseReactMutation.html',
        [
          3, 0.073, 4, 0.073, 5, 0.053, 7, 0.32, 8, 0.686, 10, 0.47, 11, 0.012, 13, 4.028, 20,
          0.146, 27, 0.073, 29, 0.007, 30, 0.007, 37, 1.231, 56, 0.95, 69, 1.151, 76, 1.17, 78,
          1.231, 80, 0.954, 81, 1.274, 88, 1.737, 103, 0.634, 107, 0.267, 108, 0.267, 109, 0.454,
          110, 1.595, 111, 0.576, 112, 0.114, 142, 1.663, 170, 1.368, 173, 4.122, 255, 1.532, 268,
          1.532, 269, 3.721, 281, 3.9, 282, 3.477, 283, 5.009, 284, 3.613, 286, 3.807, 287, 2.652,
          289, 2.012, 291, 0.95, 292, 3.9, 294, 3.842, 299, 2.635, 309, 2.91, 314, 2.91, 316, 2.635,
          325, 3.287, 344, 2.012, 421, 1.91, 470, 2.91, 484, 2.429, 553, 3.665, 608, 1.663, 931,
          2.785, 987, 3.304, 1314, 5.713, 1536, 2.265, 1548, 2.635, 1551, 5.009, 1555, 4.985, 1559,
          6.309, 1560, 6.309, 1561, 6.309, 1569, 3.327, 1570, 4.852, 1571, 2.91, 1572, 4.852, 1573,
          5.727, 1574, 3.327, 1575, 3.327, 1576, 3.327, 1577, 3.327, 1578, 4.852, 1579, 3.327, 1580,
          3.327, 1581, 3.327, 1582, 3.327,
        ],
      ],
      ['title/interfaces/UserDocument.html', [112, 0.142, 1583, 2.805]],
      [
        'body/interfaces/UserDocument.html',
        [
          1, 4.748, 3, 0.112, 4, 0.112, 5, 0.081, 10, 0.424, 11, 0.012, 17, 3.169, 20, 0.157, 22,
          3.933, 25, 1.955, 26, 2.93, 27, 0.142, 29, 0.009, 30, 0.009, 71, 2.994, 76, 0.855, 78,
          1.889, 99, 2.79, 107, 0.521, 108, 0.521, 109, 0.696, 111, 0.883, 112, 0.176, 178, 2.561,
          200, 2.251, 218, 2.26, 311, 3.727, 408, 3.475, 435, 2.79, 481, 4.464, 682, 4.464, 683,
          4.464, 684, 3.727, 685, 4.042, 686, 4.464, 912, 4.748, 1328, 4.464, 1583, 4.428, 1584,
          5.104, 1585, 4.042, 1586, 5.104, 1587, 4.464, 1588, 5.104, 1589, 5.104, 1590, 5.104, 1591,
          6.503, 1592, 5.104,
        ],
      ],
      ['title/classes/UserDto.html', [0, 0.21, 598, 2.491]],
      [
        'body/classes/UserDto.html',
        [
          0, 0.364, 2, 1.586, 3, 0.097, 4, 0.097, 5, 0.07, 10, 0.289, 11, 0.012, 20, 0.156, 27,
          0.174, 29, 0.008, 30, 0.008, 38, 2.964, 65, 2.964, 76, 1.309, 99, 2.424, 107, 0.475, 108,
          0.475, 109, 0.809, 110, 2.125, 111, 0.767, 178, 1.586, 200, 2.47, 205, 1.963, 411, 3.726,
          571, 2.545, 572, 3.237, 573, 2.041, 574, 2.053, 575, 1.534, 576, 3.019, 577, 2.837, 578,
          3.654, 579, 3.019, 580, 5.066, 581, 3.243, 582, 3.097, 583, 3.237, 584, 3.237, 585, 3.237,
          586, 3.902, 587, 3.237, 588, 3.237, 589, 3.237, 590, 3.237, 591, 3.237, 592, 3.237, 593,
          3.237, 594, 3.237, 595, 3.237, 596, 3.237, 597, 3.237, 598, 3.587, 599, 3.237, 600, 2.681,
          601, 3.237, 602, 3.237, 603, 2.545, 604, 3.237,
        ],
      ],
      ['title/classes/UserRepository.html', [0, 0.21, 1593, 3.262]],
      [
        'body/classes/UserRepository.html',
        [
          0, 0.206, 2, 1.447, 3, 0.088, 4, 0.088, 5, 0.064, 7, 0.389, 8, 0.787, 10, 0.506, 11,
          0.012, 18, 2.062, 20, 0.139, 26, 2.321, 27, 0.088, 29, 0.008, 30, 0.008, 31, 6.158, 33,
          4.872, 34, 1.866, 35, 3.485, 36, 1.695, 37, 2.878, 38, 2.784, 39, 4.872, 40, 4.872, 41,
          4.872, 42, 1.79, 43, 4.872, 44, 5.707, 46, 1.934, 47, 1.995, 48, 1.463, 49, 3.536, 50,
          4.068, 51, 3.046, 52, 4.872, 54, 3.536, 55, 3.536, 56, 1.962, 57, 2.565, 58, 3.536, 59,
          6.902, 61, 3.046, 62, 3.536, 64, 3.536, 65, 2.784, 66, 4.872, 67, 4.872, 69, 1.399, 70,
          1.724, 71, 1.861, 107, 0.324, 108, 0.324, 200, 1.928, 1583, 2.753, 1585, 3.202, 1593,
          4.412, 1594, 4.043, 1595, 4.043, 1596, 7.206, 1597, 4.043, 1598, 4.043, 1599, 4.043, 1600,
          4.043, 1601, 4.043, 1602, 3.202, 1603, 4.043,
        ],
      ],
      ['title/controllers/UsersController.html', [641, 1.824, 1184, 3.008]],
      [
        'body/controllers/UsersController.html',
        [
          0, 0.165, 3, 0.071, 4, 0.071, 5, 0.051, 7, 0.31, 10, 0.487, 11, 0.012, 14, 3.999, 18,
          1.831, 20, 0.151, 25, 1.237, 27, 0.071, 29, 0.007, 30, 0.007, 34, 1.082, 36, 1.444, 37,
          2.965, 38, 2.373, 46, 1.666, 47, 1.718, 48, 1.26, 56, 1.889, 57, 3.503, 65, 2.373, 73,
          0.815, 76, 0.541, 80, 1.301, 81, 2.533, 99, 1.766, 103, 1.45, 107, 0.38, 108, 0.38, 109,
          0.648, 112, 0.111, 173, 1.766, 178, 1.155, 450, 3.602, 571, 4.209, 574, 1.118, 575, 1.118,
          581, 2.595, 582, 3.24, 598, 3.999, 600, 3.404, 603, 4.367, 608, 2.373, 609, 2.199, 610,
          2.066, 611, 3.233, 615, 3.514, 617, 2.595, 641, 1.43, 642, 1.43, 644, 2.066, 660, 1.953,
          666, 1.953, 672, 2.199, 680, 1.953, 698, 1.953, 987, 2.199, 990, 5.475, 994, 2.557, 1179,
          2.557, 1180, 2.824, 1181, 3.602, 1182, 2.557, 1183, 2.824, 1184, 3.467, 1185, 2.824, 1186,
          2.824, 1187, 2.824, 1188, 2.824, 1189, 2.824, 1190, 2.824, 1191, 2.824, 1192, 2.824, 1193,
          2.824, 1194, 2.824, 1195, 2.824, 1196, 2.824, 1604, 2.824, 1605, 3.229, 1606, 3.229, 1607,
          3.229, 1608, 3.229, 1609, 2.824, 1610, 3.229, 1611, 3.229, 1612, 2.824, 1613, 3.229, 1614,
          3.229, 1615, 2.824, 1616, 3.229, 1617, 3.229,
        ],
      ],
      ['title/modules/UsersModule.html', [119, 1.426, 1618, 3.008]],
      [
        'body/modules/UsersModule.html',
        [
          0, 0.252, 3, 0.108, 4, 0.108, 5, 0.078, 10, 0.322, 11, 0.012, 20, 0.169, 22, 2.994, 27,
          0.108, 29, 0.009, 30, 0.009, 47, 1.371, 73, 1.249, 107, 0.397, 108, 0.397, 119, 2.442,
          121, 2.373, 122, 2.373, 123, 2.585, 124, 2.707, 125, 2.585, 126, 3.683, 127, 2.373, 132,
          3.486, 133, 2.585, 134, 2.707, 136, 3.857, 622, 4.934, 642, 2.824, 1181, 5.051, 1182,
          3.921, 1184, 5.151, 1583, 3.371, 1585, 3.921, 1587, 5.577, 1602, 3.921, 1618, 5.94, 1619,
          4.33, 1620, 4.33, 1621, 4.33, 1622, 4.951, 1623, 4.951, 1624, 4.951, 1625, 4.951,
        ],
      ],
      ['title/injectables/UsersService.html', [361, 1.38, 1181, 2.636]],
      [
        'body/injectables/UsersService.html',
        [
          0, 0.171, 3, 0.073, 4, 0.073, 5, 0.053, 7, 0.322, 8, 0.689, 10, 0.456, 11, 0.012, 17,
          1.482, 18, 2.001, 20, 0.158, 23, 2.279, 25, 1.282, 26, 1.921, 27, 0.073, 29, 0.007, 30,
          0.007, 34, 1.925, 36, 1.482, 37, 2.982, 38, 2.436, 42, 1.482, 44, 4.999, 46, 1.801, 47,
          1.858, 48, 1.362, 56, 1.916, 57, 3.532, 65, 2.436, 73, 0.844, 76, 0.56, 78, 1.239, 80,
          1.32, 81, 2.57, 96, 2.201, 103, 1.439, 107, 0.391, 108, 0.391, 109, 0.665, 178, 1.198,
          218, 2.545, 316, 2.651, 361, 1.632, 363, 1.604, 450, 2.142, 571, 3.851, 581, 2.664, 582,
          3.296, 603, 4.251, 611, 3.318, 615, 3.356, 680, 2.024, 1181, 3.118, 1583, 2.279, 1593,
          5.545, 1602, 2.651, 1604, 4.262, 1609, 4.262, 1612, 4.262, 1615, 4.262, 1626, 3.347, 1627,
          3.347, 1628, 4.873, 1629, 4.873, 1630, 3.347, 1631, 3.347, 1632, 3.347, 1633, 3.347, 1634,
          3.347, 1635, 3.347, 1636, 3.347, 1637, 3.347, 1638, 4.873, 1639, 3.347, 1640, 3.347, 1641,
          3.347, 1642, 3.347, 1643, 4.873, 1644, 3.347,
        ],
      ],
      ['title/classes/ValidateDatafileRequestDto.html', [0, 0.21, 1645, 3.008]],
      [
        'body/classes/ValidateDatafileRequestDto.html',
        [
          0, 0.363, 2, 2.113, 3, 0.129, 4, 0.129, 5, 0.094, 11, 0.012, 20, 0.156, 27, 0.156, 29,
          0.01, 30, 0.01, 107, 0.473, 108, 0.473, 109, 0.806, 200, 2.464, 205, 2.615, 573, 2.719,
          574, 2.044, 575, 2.044, 810, 3.779, 1645, 5.198, 1646, 5.165, 1647, 5.165, 1648, 5.165,
          1649, 5.165, 1650, 4.313, 1651, 5.165,
        ],
      ],
      ['title/classes/ValidateDatafileResponseDto.html', [0, 0.21, 1650, 3.008]],
      [
        'body/classes/ValidateDatafileResponseDto.html',
        [
          0, 0.363, 2, 2.113, 3, 0.129, 4, 0.129, 5, 0.094, 11, 0.012, 20, 0.156, 27, 0.156, 29,
          0.01, 30, 0.01, 107, 0.473, 108, 0.473, 109, 0.806, 200, 2.464, 205, 2.615, 573, 2.719,
          574, 2.044, 575, 2.044, 810, 3.779, 1645, 4.313, 1646, 5.165, 1647, 5.165, 1648, 5.165,
          1649, 5.165, 1650, 5.198, 1651, 5.165,
        ],
      ],
      ['title/controllers/ValidationController.html', [641, 1.824, 1652, 3.262]],
      [
        'body/controllers/ValidationController.html',
        [
          0, 0.161, 3, 0.069, 4, 0.069, 5, 0.05, 7, 0.304, 10, 0.362, 11, 0.012, 14, 1.912, 18,
          0.875, 20, 0.163, 27, 0.069, 29, 0.007, 30, 0.007, 34, 2.195, 35, 2.555, 36, 1.422, 37,
          2.058, 42, 1.4, 46, 0.849, 47, 1.539, 48, 0.642, 56, 0.903, 57, 2.152, 71, 2.152, 73,
          0.798, 76, 1.22, 78, 2.273, 80, 0.622, 81, 2.353, 96, 2.51, 107, 0.55, 108, 0.55, 109,
          0.637, 145, 1.912, 178, 1.131, 211, 2.665, 218, 2.07, 255, 1.456, 265, 2.765, 268, 1.456,
          269, 2.24, 270, 2.504, 282, 2.07, 291, 0.903, 319, 2.555, 362, 3.04, 374, 3.886, 377,
          3.07, 380, 4.06, 384, 2.683, 386, 2.07, 411, 2.44, 435, 3.358, 436, 2.555, 437, 2.153,
          574, 1.094, 575, 1.094, 608, 1.58, 617, 3.358, 641, 1.4, 642, 1.4, 644, 2.023, 659, 4.06,
          660, 1.912, 666, 1.912, 675, 3.362, 676, 2.309, 677, 2.504, 680, 1.912, 692, 2.779, 698,
          1.912, 723, 2.765, 724, 4.087, 727, 4.485, 729, 2.309, 755, 2.765, 797, 2.504, 924, 2.309,
          931, 2.683, 1107, 2.023, 1108, 2.504, 1109, 2.504, 1123, 2.765, 1138, 2.765, 1139, 2.765,
          1508, 2.504, 1645, 4.485, 1650, 2.309, 1652, 3.701, 1653, 3.162, 1654, 4.863, 1655, 3.162,
          1656, 4.674, 1657, 3.162, 1658, 3.162, 1659, 3.786, 1660, 2.765, 1661, 3.162, 1662, 3.162,
          1663, 3.162, 1664, 3.162, 1665, 3.162, 1666, 3.162, 1667, 3.162, 1668, 4.674, 1669, 3.162,
          1670, 3.162, 1671, 3.162, 1672, 3.162, 1673, 3.162, 1674, 4.674, 1675, 3.162, 1676, 3.162,
          1677, 3.162, 1678, 3.162,
        ],
      ],
      ['title/modules/ValidationModule.html', [119, 1.426, 1679, 3.008]],
      [
        'body/modules/ValidationModule.html',
        [
          0, 0.24, 3, 0.103, 4, 0.103, 5, 0.075, 11, 0.012, 20, 0.17, 27, 0.103, 29, 0.009, 30,
          0.009, 73, 1.189, 107, 0.552, 108, 0.552, 119, 2.384, 121, 2.258, 122, 2.258, 123, 2.46,
          124, 2.576, 125, 2.46, 126, 3.596, 127, 2.258, 132, 3.376, 133, 2.46, 134, 2.576, 145,
          2.849, 362, 4.258, 642, 2.734, 675, 4.71, 676, 3.44, 692, 3.892, 931, 2.704, 1107, 3.015,
          1652, 5.455, 1659, 5.303, 1660, 4.12, 1679, 6.084, 1680, 4.12, 1681, 4.12, 1682, 4.711,
          1683, 4.711,
        ],
      ],
      ['title/injectables/ValidationService.html', [361, 1.38, 1659, 2.805]],
      [
        'body/injectables/ValidationService.html',
        [
          0, 0.149, 3, 0.064, 4, 0.064, 5, 0.046, 7, 0.28, 10, 0.503, 11, 0.012, 18, 1.844, 20,
          0.139, 27, 0.064, 29, 0.006, 30, 0.006, 36, 1.338, 46, 1.787, 47, 1.844, 48, 1.352, 56,
          1.902, 69, 1.523, 70, 1.244, 71, 2.026, 73, 0.736, 76, 1.061, 78, 2.464, 80, 1.46, 88,
          3.477, 96, 3.015, 107, 0.425, 108, 0.425, 109, 0.6, 291, 0.833, 297, 2.129, 361, 1.474,
          363, 1.398, 377, 3.639, 386, 2.949, 394, 2.129, 408, 2.996, 415, 3.484, 659, 2.129, 715,
          2.55, 769, 2.309, 797, 5.273, 1109, 2.309, 1167, 2.309, 1168, 5.273, 1171, 2.309, 1475,
          3.848, 1476, 2.55, 1477, 3.848, 1478, 3.848, 1489, 2.55, 1490, 2.55, 1654, 3.848, 1659,
          2.996, 1684, 2.916, 1685, 4.4, 1686, 4.4, 1687, 4.4, 1688, 4.4, 1689, 4.4, 1690, 4.4,
          1691, 8.077, 1692, 2.916, 1693, 4.4, 1694, 2.916, 1695, 4.4, 1696, 5.901, 1697, 2.916,
          1698, 4.4, 1699, 2.916, 1700, 4.4, 1701, 2.916, 1702, 4.4, 1703, 2.916, 1704, 2.916, 1705,
          2.916, 1706, 2.55, 1707, 2.916, 1708, 2.916, 1709, 2.916, 1710, 2.916, 1711, 2.916, 1712,
          2.916, 1713, 2.916, 1714, 2.916, 1715, 7.421, 1716, 2.916, 1717, 6.334, 1718, 6.334, 1719,
          6.334, 1720, 6.334, 1721, 2.916, 1722, 2.916, 1723, 2.916, 1724, 2.916,
        ],
      ],
      ['title/dependencies.html', [122, 2.377, 1725, 2.716]],
      [
        'body/dependencies.html',
        [
          0, 0.181, 11, 0.012, 23, 2.416, 25, 1.359, 26, 2.037, 29, 0.007, 30, 0.007, 73, 0.895,
          122, 1.701, 161, 3.296, 164, 2.928, 168, 4.445, 169, 4.445, 206, 3.074, 227, 2.146, 235,
          2.81, 282, 1.571, 292, 2.416, 333, 2.591, 335, 2.81, 342, 4.736, 397, 1.94, 401, 2.416,
          405, 2.271, 436, 2.779, 479, 3.103, 484, 2.591, 487, 3.103, 546, 2.037, 574, 1.759, 575,
          1.228, 577, 2.271, 632, 2.416, 670, 2.591, 672, 2.416, 689, 3.103, 769, 2.81, 1015, 2.81,
          1150, 3.103, 1209, 2.591, 1251, 3.103, 1252, 3.103, 1253, 3.103, 1258, 3.712, 1259, 3.074,
          1260, 3.103, 1557, 3.103, 1571, 3.103, 1726, 3.548, 1727, 3.548, 1728, 3.548, 1729, 3.548,
          1730, 3.548, 1731, 3.548, 1732, 3.548, 1733, 3.548, 1734, 3.548, 1735, 3.548, 1736, 3.548,
          1737, 5.083, 1738, 3.548, 1739, 5.083, 1740, 3.548, 1741, 5.083, 1742, 3.548, 1743, 5.083,
          1744, 3.548, 1745, 6.486, 1746, 3.548, 1747, 3.548, 1748, 3.548, 1749, 3.548, 1750, 3.548,
          1751, 3.548, 1752, 3.548, 1753, 3.548, 1754, 3.548, 1755, 3.548, 1756, 3.548, 1757, 3.548,
          1758, 3.548, 1759, 3.548, 1760, 3.548, 1761, 3.548, 1762, 3.548, 1763, 3.548, 1764, 3.548,
          1765, 3.548, 1766, 3.548, 1767, 3.548, 1768, 3.548, 1769, 3.548, 1770, 3.548, 1771, 2.416,
          1772, 3.548, 1773, 3.548, 1774, 3.548, 1775, 3.103, 1776, 3.548, 1777, 3.548, 1778, 3.103,
          1779, 3.548, 1780, 3.548, 1781, 3.548, 1782, 3.548, 1783, 3.548, 1784, 3.548, 1785, 3.548,
          1786, 3.548, 1787, 5.083, 1788, 3.548, 1789, 3.548, 1790, 3.548, 1791, 3.548, 1792, 3.548,
          1793, 3.548, 1794, 3.548, 1795, 3.548, 1796, 3.548, 1797, 3.548, 1798, 3.548, 1799, 5.083,
          1800, 3.548, 1801, 3.548, 1802, 3.548, 1803, 3.548, 1804, 3.548, 1805, 3.548, 1806, 3.548,
          1807, 3.548,
        ],
      ],
      ['title/miscellaneous/functions.html', [1771, 3.377, 1808, 2.504]],
      [
        'body/miscellaneous/functions.html',
        [
          7, 0.488, 10, 0.465, 11, 0.011, 29, 0.009, 30, 0.009, 46, 2.018, 47, 2.082, 48, 1.526, 56,
          1.449, 103, 1.234, 125, 4.31, 211, 3.105, 411, 3.382, 477, 5.129, 552, 4.436, 578, 4.11,
          580, 3.454, 1083, 3.454, 1108, 5.129, 1315, 5.129, 1316, 4.436, 1706, 5.665, 1771, 3.454,
          1808, 3.704, 1809, 7.136, 1810, 6.477, 1811, 5.073, 1812, 5.073, 1813, 6.477, 1814, 5.073,
          1815, 4.436, 1816, 5.073, 1817, 7.136, 1818, 5.073, 1819, 5.073, 1820, 5.073, 1821, 5.073,
          1822, 5.073, 1823, 5.073, 1824, 5.073, 1825, 5.073, 1826, 5.073, 1827, 5.073,
        ],
      ],
      ['title/index.html', [7, 0.33, 1828, 3.429, 1829, 3.429]],
      [
        'body/index.html',
        [
          0, 0.174, 5, 0.078, 11, 0.007, 29, 0.007, 30, 0.007, 99, 1.864, 107, 0.273, 108, 0.273,
          111, 0.59, 112, 0.117, 122, 1.634, 161, 2.03, 164, 2.882, 178, 2.078, 228, 2.579, 238,
          2.982, 249, 4.599, 275, 2.982, 282, 2.82, 386, 2.187, 453, 2.982, 568, 2.982, 618, 2.321,
          684, 2.489, 685, 3.911, 743, 2.489, 828, 3.606, 968, 5.569, 1029, 2.7, 1201, 2.982, 1483,
          3.363, 1507, 2.321, 1508, 4.599, 1725, 2.7, 1771, 4.336, 1778, 5.079, 1830, 6.367, 1831,
          7.268, 1832, 5.807, 1833, 5.807, 1834, 6.367, 1835, 6.367, 1836, 3.409, 1837, 4.939, 1838,
          5.807, 1839, 3.409, 1840, 3.409, 1841, 3.409, 1842, 7.047, 1843, 3.409, 1844, 6.367, 1845,
          4.939, 1846, 3.409, 1847, 3.409, 1848, 6.367, 1849, 5.807, 1850, 3.409, 1851, 2.982, 1852,
          4.939, 1853, 3.409, 1854, 5.807, 1855, 3.409, 1856, 5.807, 1857, 3.409, 1858, 3.409, 1859,
          3.409, 1860, 5.807, 1861, 4.939, 1862, 3.409, 1863, 3.409, 1864, 3.409, 1865, 3.409, 1866,
          7.047, 1867, 3.409, 1868, 5.91, 1869, 4.939, 1870, 4.939, 1871, 3.409, 1872, 4.939, 1873,
          4.939, 1874, 5.807, 1875, 3.409, 1876, 4.939, 1877, 3.409, 1878, 3.409, 1879, 4.939, 1880,
          3.409, 1881, 3.409, 1882, 3.409, 1883, 3.409, 1884, 3.409, 1885, 3.409, 1886, 3.409, 1887,
          3.409, 1888, 3.409, 1889, 3.409, 1890, 4.939, 1891, 3.409, 1892, 3.409, 1893, 3.409, 1894,
          3.409, 1895, 3.409, 1896, 3.409, 1897, 3.409, 1898, 3.409, 1899, 3.409, 1900, 3.409, 1901,
          3.409, 1902, 3.409, 1903, 4.939, 1904, 4.939, 1905, 3.409, 1906, 3.409, 1907, 3.409, 1908,
          3.409, 1909, 3.409, 1910, 3.409, 1911, 3.409, 1912, 3.409, 1913, 3.409, 1914, 3.409, 1915,
          3.409, 1916, 3.409, 1917, 4.939, 1918, 3.409, 1919, 3.409, 1920, 3.409, 1921, 3.409, 1922,
          3.409, 1923, 3.409, 1924, 3.409, 1925, 3.409, 1926, 3.409, 1927, 3.409, 1928, 5.807, 1929,
          3.409, 1930, 3.409, 1931, 3.409, 1932, 3.409, 1933, 3.409, 1934, 5.807, 1935, 4.939, 1936,
          3.409, 1937, 3.409,
        ],
      ],
      ['title/modules.html', [121, 2.705]],
      [
        'body/modules.html',
        [
          11, 0.009, 29, 0.009, 30, 0.009, 120, 5.753, 121, 2.549, 130, 3.621, 131, 3.621, 622,
          3.402, 1004, 3.621, 1077, 6.188, 1140, 3.883, 1197, 3.883, 1618, 3.883, 1679, 3.883, 1775,
          7.411, 1851, 7.411, 1938, 8.51, 1939, 5.317, 1940, 5.317,
        ],
      ],
      ['title/overview.html', [1941, 4.935]],
      [
        'body/overview.html',
        [
          2, 1.415, 11, 0.012, 29, 0.008, 30, 0.008, 111, 0.684, 119, 1.369, 120, 6.062, 121, 1.896,
          122, 1.896, 123, 2.065, 124, 2.163, 125, 2.065, 126, 2.065, 127, 1.896, 128, 3.46, 129,
          3.46, 130, 5.348, 131, 5.348, 132, 3, 133, 2.065, 134, 2.163, 362, 3.909, 363, 1.896, 542,
          4.602, 622, 4.032, 642, 1.752, 673, 4.291, 675, 4.116, 692, 3.698, 738, 3.46, 739, 3.46,
          988, 4.355, 1004, 4.868, 1112, 4.291, 1140, 5.735, 1141, 3.46, 1142, 3.46, 1181, 4.032,
          1197, 4.97, 1198, 3.46, 1199, 3.46, 1353, 4.291, 1367, 3.46, 1368, 3.46, 1618, 5.54, 1619,
          3.46, 1620, 3.46, 1621, 3.46, 1659, 4.291, 1679, 5.867, 1680, 3.46, 1681, 3.46, 1941,
          3.46, 1942, 3.956, 1943, 3.956, 1944, 3.956, 1945, 3.956, 1946, 3.956, 1947, 3.956,
        ],
      ],
      ['title/properties.html', [8, 0.701, 1725, 2.716]],
      [
        'body/properties.html',
        [
          8, 0.924, 11, 0.011, 29, 0.011, 30, 0.011, 1948, 6.537, 1949, 6.537, 1950, 6.537, 1951,
          6.537,
        ],
      ],
      ['title/miscellaneous/typealiases.html', [1808, 2.504, 1952, 4.96]],
      [
        'body/miscellaneous/typealiases.html',
        [
          5, 0.044, 7, 0.268, 10, 0.469, 11, 0.012, 29, 0.006, 30, 0.006, 50, 2.039, 94, 3.694, 103,
          0.532, 106, 3.372, 133, 1.458, 154, 3.372, 158, 4.781, 178, 1.524, 221, 1.902, 225, 2.212,
          259, 3.372, 266, 2.212, 286, 1.689, 289, 2.575, 290, 1.396, 325, 1.603, 328, 2.443, 331,
          3.724, 364, 2.443, 365, 2.443, 366, 4.513, 377, 2.128, 386, 1.886, 389, 3.724, 398, 1.96,
          399, 3.724, 400, 2.443, 406, 3.724, 407, 3.724, 413, 2.212, 436, 1.527, 462, 2.443, 488,
          3.724, 578, 2.328, 579, 2.9, 607, 3.109, 677, 3.372, 714, 2.725, 826, 2.212, 892, 3.724,
          893, 3.724, 935, 3.724, 1110, 3.724, 1204, 2.443, 1207, 3.372, 1223, 2.212, 1224, 2.212,
          1229, 6.064, 1230, 3.724, 1240, 3.724, 1310, 2.443, 1329, 3.768, 1405, 2.443, 1408, 3.724,
          1410, 3.724, 1437, 2.443, 1462, 2.443, 1473, 3.724, 1485, 2.725, 1524, 2.039, 1525, 2.039,
          1533, 3.109, 1548, 2.212, 1771, 1.902, 1808, 2.039, 1815, 2.443, 1868, 3.724, 1953, 2.793,
          1954, 5.773, 1955, 4.258, 1956, 2.793, 1957, 2.793, 1958, 4.258, 1959, 6.549, 1960, 4.258,
          1961, 5.161, 1962, 6.81, 1963, 5.161, 1964, 2.793, 1965, 2.793, 1966, 2.793, 1967, 4.258,
          1968, 5.161, 1969, 4.258, 1970, 5.161, 1971, 4.258, 1972, 6.215, 1973, 4.258, 1974, 4.258,
          1975, 4.258, 1976, 2.793, 1977, 4.258, 1978, 5.161, 1979, 4.258, 1980, 2.793, 1981, 2.793,
          1982, 2.793, 1983, 4.258, 1984, 4.258, 1985, 2.793, 1986, 5.161, 1987, 4.258, 1988, 4.258,
          1989, 2.793, 1990, 2.793, 1991, 4.258, 1992, 2.793, 1993, 4.258, 1994, 4.258, 1995, 2.793,
          1996, 4.258, 1997, 4.258, 1998, 2.793, 1999, 4.258, 2000, 4.258, 2001, 4.258, 2002, 4.258,
          2003, 4.258, 2004, 4.258, 2005, 4.258, 2006, 2.793, 2007, 4.258, 2008, 4.258, 2009, 2.793,
          2010, 4.258, 2011, 2.793, 2012, 2.793, 2013, 4.258, 2014, 2.793, 2015, 4.258, 2016, 2.793,
          2017, 2.793, 2018, 4.258, 2019, 2.793, 2020, 2.793, 2021, 2.793, 2022, 2.793, 2023, 2.793,
          2024, 2.793, 2025, 2.793, 2026, 2.793, 2027, 2.793, 2028, 2.793, 2029, 2.793, 2030, 2.793,
          2031, 2.793, 2032, 2.793, 2033, 2.793, 2034, 2.793, 2035, 2.793, 2036, 2.793, 2037, 2.793,
          2038, 2.793, 2039, 2.793, 2040, 2.793, 2041, 2.793, 2042, 2.793, 2043, 2.793, 2044, 2.793,
          2045, 2.793, 2046, 2.793, 2047, 2.793, 2048, 2.793, 2049, 2.793, 2050, 2.793, 2051, 2.793,
          2052, 2.793, 2053, 2.793, 2054, 2.793, 2055, 2.793, 2056, 2.793, 2057, 2.793, 2058, 2.793,
          2059, 2.793, 2060, 2.793, 2061, 2.793, 2062, 2.793, 2063, 2.793, 2064, 2.793, 2065, 2.793,
          2066, 2.793, 2067, 2.793, 2068, 2.793, 2069, 2.793, 2070, 2.793, 2071, 2.793, 2072, 2.793,
        ],
      ],
    ],
    invertedIndex: [
      [
        '',
        {
          _index: 11,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'modules/RenderModule.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'modules/ServerNestClusterModule.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        '0',
        {
          _index: 421,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'interfaces/ToolbarProps.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      ['0.1.13', { _index: 1802, title: {}, body: { 'dependencies.html': {} } }],
      ['0.14.0', { _index: 1763, title: {}, body: { 'dependencies.html': {} } }],
      ['0.2.1', { _index: 1949, title: {}, body: { 'properties.html': {} } }],
      ['0.3s', { _index: 1443, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['0px', { _index: 1431, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        '1',
        {
          _index: 912,
          title: {},
          body: {
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UserDocument.html': {},
          },
        },
      ],
      ['1.0.0', { _index: 1757, title: {}, body: { 'dependencies.html': {} } }],
      ['1.10.0', { _index: 1726, title: {}, body: { 'dependencies.html': {} } }],
      ['1.14.0', { _index: 1727, title: {}, body: { 'dependencies.html': {} } }],
      ['1.2.2', { _index: 1749, title: {}, body: { 'dependencies.html': {} } }],
      ['1.4.0', { _index: 1759, title: {}, body: { 'dependencies.html': {} } }],
      ['1.4.5', { _index: 1781, title: {}, body: { 'dependencies.html': {} } }],
      ['1.7.4', { _index: 1765, title: {}, body: { 'dependencies.html': {} } }],
      [
        '10',
        {
          _index: 238,
          title: {},
          body: { 'interfaces/BuyCreditsFormProps.html': {}, 'index.html': {} },
        },
      ],
      ['10/api', { _index: 992, title: {}, body: { 'controllers/I18nStreamController.html': {} } }],
      [
        '10/server',
        {
          _index: 396,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        '10/server/nest/chart',
        {
          _index: 1107,
          title: {},
          body: {
            'controllers/RenderController.html': {},
            'modules/RenderModule.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
          },
        },
      ],
      [
        '10/server/nest/database',
        {
          _index: 1585,
          title: {},
          body: {
            'interfaces/UserDocument.html': {},
            'classes/UserRepository.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        '10/server/nest/datafiles',
        {
          _index: 145,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/RenderController.html': {},
            'modules/RenderModule.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
          },
        },
      ],
      [
        '10/server/nest/filename',
        {
          _index: 674,
          title: {},
          body: { 'controllers/DatafilesController.html': {}, 'modules/DatafilesModule.html': {} },
        },
      ],
      [
        '10/server/nest/firebase',
        { _index: 147, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        '10/server/nest/notifications',
        {
          _index: 676,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
          },
        },
      ],
      [
        '10/server/nest/transaction',
        { _index: 151, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        '10/server/nest/utils',
        {
          _index: 1109,
          title: {},
          body: {
            'controllers/RenderController.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        '10/shared',
        {
          _index: 109,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/GetUsersDto.html': {},
            'classes/I18nStreamDto.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'controllers/TransactionController.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      ['10/web/env', { _index: 945, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        '10/web/features/upload',
        { _index: 1467, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        '10/web/firebase',
        {
          _index: 160,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'classes/FirebaseWeb.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/SignUpProps.html': {},
          },
        },
      ],
      [
        '10/web/hooks',
        {
          _index: 471,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        '10/web/ui/button',
        {
          _index: 1243,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'interfaces/SpinnerButtonProps.html': {} },
        },
      ],
      ['10/web/ui/card', { _index: 1245, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        '10/web/ui/progress',
        {
          _index: 473,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        '10/web/ui/spinner',
        {
          _index: 476,
          title: {},
          body: {
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
          },
        },
      ],
      [
        '10/web/ui/toast',
        { _index: 478, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      ['100', { _index: 1846, title: {}, body: { 'index.html': {} } }],
      ['10000', { _index: 301, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        '1024',
        {
          _index: 1127,
          title: {},
          body: {
            'controllers/RenderController.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
          },
        },
      ],
      ['10px', { _index: 1433, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['11', { _index: 1945, title: {}, body: { 'overview.html': {} } }],
      ['11.11.0', { _index: 1732, title: {}, body: { 'dependencies.html': {} } }],
      ['11.11.1', { _index: 1731, title: {}, body: { 'dependencies.html': {} } }],
      ['11.9.0', { _index: 1770, title: {}, body: { 'dependencies.html': {} } }],
      ['12.3.1', { _index: 1795, title: {}, body: { 'dependencies.html': {} } }],
      ['13', { _index: 1943, title: {}, body: { 'overview.html': {} } }],
      ['14.2.3', { _index: 1790, title: {}, body: { 'dependencies.html': {} } }],
      ['15px', { _index: 1429, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['18.2.0', { _index: 1787, title: {}, body: { 'dependencies.html': {} } }],
      ['19', { _index: 1946, title: {}, body: { 'overview.html': {} } }],
      [
        '1d',
        {
          _index: 1027,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        '1px',
        {
          _index: 1334,
          title: {},
          body: { 'interfaces/ToolbarProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      ['1rem', { _index: 1438, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        '2',
        {
          _index: 487,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'dependencies.html': {} },
        },
      ],
      ['2.11.2', { _index: 1760, title: {}, body: { 'dependencies.html': {} } }],
      ['2.2.1', { _index: 1779, title: {}, body: { 'dependencies.html': {} } }],
      ['2.26.2', { _index: 1729, title: {}, body: { 'dependencies.html': {} } }],
      ['2.3.4', { _index: 1746, title: {}, body: { 'dependencies.html': {} } }],
      ['2.30.0', { _index: 1767, title: {}, body: { 'dependencies.html': {} } }],
      ['2.5.3', { _index: 1806, title: {}, body: { 'dependencies.html': {} } }],
      ['20', { _index: 239, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      ['200', { _index: 1361, title: {}, body: { 'controllers/TransactionController.html': {} } }],
      [
        '201',
        {
          _index: 1138,
          title: {},
          body: {
            'controllers/RenderController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      ['204', { _index: 737, title: {}, body: { 'controllers/DatafilesController.html': {} } }],
      ['20px', { _index: 1450, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['22.5.1', { _index: 1774, title: {}, body: { 'dependencies.html': {} } }],
      ['24px', { _index: 1273, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['2px', { _index: 1432, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['2rem', { _index: 1439, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['3.0.1', { _index: 1752, title: {}, body: { 'dependencies.html': {} } }],
      ['3.1.1', { _index: 1736, title: {}, body: { 'dependencies.html': {} } }],
      ['3.2.0', { _index: 1785, title: {}, body: { 'dependencies.html': {} } }],
      ['3.21.4', { _index: 1807, title: {}, body: { 'dependencies.html': {} } }],
      ['3.3.2', { _index: 1773, title: {}, body: { 'dependencies.html': {} } }],
      ['3.4.2', { _index: 1798, title: {}, body: { 'dependencies.html': {} } }],
      ['333333', { _index: 1331, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      ['35', { _index: 1947, title: {}, body: { 'overview.html': {} } }],
      ['3px', { _index: 1448, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['4.1.0', { _index: 1755, title: {}, body: { 'dependencies.html': {} } }],
      ['4.18.2', { _index: 1768, title: {}, body: { 'dependencies.html': {} } }],
      ['4.29.19', { _index: 1758, title: {}, body: { 'dependencies.html': {} } }],
      ['4.3.0', { _index: 1761, title: {}, body: { 'dependencies.html': {} } }],
      ['4.4.1', { _index: 1772, title: {}, body: { 'dependencies.html': {} } }],
      ['400px', { _index: 1266, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['404', { _index: 187, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      ['48px', { _index: 1341, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      ['4px', { _index: 1449, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        '5',
        {
          _index: 237,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
          },
        },
      ],
      ['5.0.3', { _index: 1734, title: {}, body: { 'dependencies.html': {} } }],
      ['5.1.1', { _index: 1792, title: {}, body: { 'dependencies.html': {} } }],
      ['5.11.16', { _index: 1738, title: {}, body: { 'dependencies.html': {} } }],
      ['5.13.6', { _index: 1739, title: {}, body: { 'dependencies.html': {} } }],
      ['5.2.0', { _index: 1788, title: {}, body: { 'dependencies.html': {} } }],
      ['5.4.1', { _index: 1786, title: {}, body: { 'dependencies.html': {} } }],
      ['50', { _index: 240, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      [
        '5242880',
        { _index: 1523, title: {}, body: { 'interfaces/UploadFileSchemaOptions.html': {} } },
      ],
      [
        '5e6',
        {
          _index: 1540,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        '5mb',
        {
          _index: 1522,
          title: {},
          body: {
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      ['6', { _index: 1944, title: {}, body: { 'overview.html': {} } }],
      ['6.14.1', { _index: 1799, title: {}, body: { 'dependencies.html': {} } }],
      ['6.3.0', { _index: 1753, title: {}, body: { 'dependencies.html': {} } }],
      ['6.3.1', { _index: 1794, title: {}, body: { 'dependencies.html': {} } }],
      ['6.9.1', { _index: 1743, title: {}, body: { 'dependencies.html': {} } }],
      ['680', { _index: 1128, title: {}, body: { 'controllers/RenderController.html': {} } }],
      ['7.1.0', { _index: 1777, title: {}, body: { 'dependencies.html': {} } }],
      ['7.2.2', { _index: 1780, title: {}, body: { 'dependencies.html': {} } }],
      ['7.45.1', { _index: 1793, title: {}, body: { 'dependencies.html': {} } }],
      ['7.8.1', { _index: 1804, title: {}, body: { 'dependencies.html': {} } }],
      ['8', { _index: 718, title: {}, body: { 'controllers/DatafilesController.html': {} } }],
      ['9.1.3', { _index: 1800, title: {}, body: { 'dependencies.html': {} } }],
      ['9.2.2', { _index: 1751, title: {}, body: { 'dependencies.html': {} } }],
      ['9.23.0', { _index: 1769, title: {}, body: { 'dependencies.html': {} } }],
      ['9.4.3', { _index: 1745, title: {}, body: { 'dependencies.html': {} } }],
      ['_', { _index: 885, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } }],
      ['_id', { _index: 9, title: {}, body: { 'classes/AbstractDocument.html': {} } }],
      ['abort', { _index: 489, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      [
        'aborted',
        { _index: 1366, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'aborttransaction',
        { _index: 1344, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'aborttransaction(@req',
        { _index: 1364, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'aborttransaction(req',
        { _index: 1346, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'abstract.schema',
        { _index: 74, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'abstractdocument',
        {
          _index: 1,
          title: { 'classes/AbstractDocument.html': {} },
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'interfaces/UserDocument.html': {},
          },
        },
      ],
      [
        'abstractrepository',
        {
          _index: 31,
          title: { 'classes/AbstractRepository.html': {} },
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'abstractrepository:11',
        { _index: 1598, title: {}, body: { 'classes/UserRepository.html': {} } },
      ],
      [
        'abstractrepository:16',
        { _index: 1600, title: {}, body: { 'classes/UserRepository.html': {} } },
      ],
      [
        'abstractrepository:27',
        { _index: 1601, title: {}, body: { 'classes/UserRepository.html': {} } },
      ],
      [
        'abstractrepository:46',
        { _index: 1599, title: {}, body: { 'classes/UserRepository.html': {} } },
      ],
      [
        'abstractrepository:7',
        { _index: 1597, title: {}, body: { 'classes/UserRepository.html': {} } },
      ],
      [
        'accessors',
        {
          _index: 98,
          title: {},
          body: { 'classes/ApiSDK.html': {}, 'classes/FirebaseAdmin.html': {} },
        },
      ],
      [
        'action',
        {
          _index: 504,
          title: {},
          body: {
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'add(notification',
        { _index: 1066, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      ['added', { _index: 532, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      [
        'admin',
        {
          _index: 397,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/DatafilesService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/TransactionService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'admin.auth',
        {
          _index: 877,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'admin.firestore',
        {
          _index: 876,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'admin.init',
        {
          _index: 879,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'admin.storage',
        {
          _index: 765,
          title: {},
          body: {
            'injectables/DatafilesService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'admin/app',
        {
          _index: 850,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'admin/auth',
        {
          _index: 207,
          title: {},
          body: {
            'interfaces/AuthRequest.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'admin/firestore',
        {
          _index: 403,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'controllers/RenderController.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        'admin/src/lib/index.ts',
        {
          _index: 827,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'admin/src/lib/index.ts:13',
        { _index: 833, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/src/lib/index.ts:14',
        { _index: 837, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/src/lib/index.ts:15',
        { _index: 835, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/src/lib/index.ts:16',
        { _index: 834, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/src/lib/index.ts:17',
        { _index: 832, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/src/lib/index.ts:23',
        { _index: 836, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/src/lib/index.ts:50',
        { _index: 839, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/src/lib/index.ts:54',
        { _index: 841, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/src/lib/index.ts:58',
        { _index: 843, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/src/lib/index.ts:62',
        { _index: 845, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/src/lib/index.ts:66',
        { _index: 847, title: {}, body: { 'classes/FirebaseAdmin.html': {} } },
      ],
      [
        'admin/storage',
        {
          _index: 851,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      ['against', { _index: 1713, title: {}, body: { 'injectables/ValidationService.html': {} } }],
      ['aliases', { _index: 1953, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'alignitems',
        {
          _index: 1276,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      [
        'allowedtypes',
        { _index: 1516, title: {}, body: { 'interfaces/UploadFileSchemaOptions.html': {} } },
      ],
      ['allowing', { _index: 1898, title: {}, body: { 'index.html': {} } }],
      ['allows', { _index: 1880, title: {}, body: { 'index.html': {} } }],
      [
        'already',
        {
          _index: 859,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'interfaces/SignUpProps.html': {},
          },
        },
      ],
      ['alt', { _index: 1455, title: {}, body: { 'interfaces/UiHeaderProps.html': {} } }],
      [
        'anatine/zod',
        {
          _index: 574,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'controllers/DatafilesController.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/TransactionController.html': {},
            'classes/TransactionRequestDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'api',
        {
          _index: 110,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/CallOptions.html': {},
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'apiconsumes',
        { _index: 671, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        "apiconsumes('multipart/form",
        { _index: 700, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'apicreatedresponse',
        {
          _index: 990,
          title: {},
          body: {
            'controllers/I18nStreamController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'apikey',
        {
          _index: 97,
          title: {},
          body: { 'classes/ApiSDK.html': {}, 'interfaces/ApiSDKConfig.html': {} },
        },
      ],
      [
        "apikey.startswith('sdk_test_",
        {
          _index: 116,
          title: {},
          body: { 'classes/ApiSDK.html': {}, 'interfaces/ApiSDKConfig.html': {} },
        },
      ],
      [
        'apikeyexistsinenv',
        {
          _index: 113,
          title: {},
          body: { 'classes/ApiSDK.html': {}, 'interfaces/ApiSDKConfig.html': {} },
        },
      ],
      [
        'apiresources',
        {
          _index: 106,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        "apiresources['users",
        {
          _index: 118,
          title: {},
          body: { 'classes/ApiSDK.html': {}, 'interfaces/ApiSDKConfig.html': {} },
        },
      ],
      [
        'apisdk',
        {
          _index: 93,
          title: { 'classes/ApiSDK.html': {} },
          body: { 'classes/ApiSDK.html': {}, 'interfaces/ApiSDKConfig.html': {} },
        },
      ],
      [
        'apisdkconfig',
        {
          _index: 101,
          title: { 'interfaces/ApiSDKConfig.html': {} },
          body: { 'classes/ApiSDK.html': {}, 'interfaces/ApiSDKConfig.html': {} },
        },
      ],
      [
        'app',
        {
          _index: 828,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'classes/FirebaseWeb.html': {},
            'index.html': {},
          },
        },
      ],
      ['appbar', { _index: 1322, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      ['appcolors', { _index: 1955, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'append',
        {
          _index: 1542,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      ['appendheaders', { _index: 296, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        'appendheaders(headers',
        { _index: 313, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      [
        'appendqueryparams',
        { _index: 295, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      [
        'appendqueryparams(url',
        { _index: 310, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      ['application', { _index: 1835, title: {}, body: { 'index.html': {} } }],
      [
        'application/pdf',
        {
          _index: 1086,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'application_pdf',
        { _index: 1153, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'applicationdefault',
        {
          _index: 849,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      ['applications', { _index: 1860, title: {}, body: { 'index.html': {} } }],
      [
        'appmodule',
        {
          _index: 120,
          title: { 'modules/AppModule.html': {} },
          body: { 'modules/AppModule.html': {}, 'modules.html': {}, 'overview.html': {} },
        },
      ],
      [
        'approutes',
        {
          _index: 154,
          title: { 'interfaces/AppRoutes.html': {} },
          body: { 'interfaces/AppRoutes.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'apps/.../colors.constants.ts',
        { _index: 1956, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/.../headerlink.type.ts',
        { _index: 1980, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/.../i18n.constants.ts',
        { _index: 1972, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/.../index.ts',
        { _index: 1992, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/.../index.tsx',
        { _index: 1963, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/.../main.ts',
        { _index: 1809, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'apps/.../palette.constants.ts',
        { _index: 1965, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/.../routes.ts',
        { _index: 1957, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/api/src/app/app.module.ts',
        { _index: 135, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/api/src/app/app.module.ts:10',
        { _index: 140, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      ['apps/i18n', { _index: 1818, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      ['apps/user', { _index: 1816, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'apps/validation',
        { _index: 1819, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'apps/web/src/app/components/buycreditsform/index.tsx',
        { _index: 216, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'apps/web/src/app/components/chartpreview/index.tsx',
        {
          _index: 462,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'apps/web/src/app/components/stepper/index.tsx',
        { _index: 2064, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/web/src/app/components/uploadcsvchartfile/index.tsx',
        {
          _index: 1462,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'apps/web/src/app/constants/colors.constants.ts',
        { _index: 2021, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/web/src/app/constants/i18n.constants.ts',
        { _index: 2035, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/web/src/app/constants/palette.constants.ts',
        { _index: 2031, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/web/src/app/pages/index.ts',
        { _index: 2056, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/web/src/app/routes.ts',
        { _index: 2022, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'apps/web/src/app/types/headerlink.type.ts',
        { _index: 2049, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['architecture', { _index: 1833, title: {}, body: { 'index.html': {} } }],
      [
        'area',
        {
          _index: 1490,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'args',
        {
          _index: 619,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      [
        'array',
        {
          _index: 591,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'associated',
        {
          _index: 1092,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'async',
        {
          _index: 37,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/SignUpProps.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UseReactMutation.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'auth',
        {
          _index: 148,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/SignUpProps.html': {},
          },
        },
      ],
      [
        'auth.getuser(user.uid)).customclaims',
        { _index: 915, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'auth.middleware.ts',
        { _index: 882, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'auth.middleware.ts:24',
        { _index: 889, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'auth.middleware.ts:26',
        { _index: 887, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'auth.verifyidtoken(idtoken',
        { _index: 913, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['auth/email', { _index: 1297, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'authentication',
        { _index: 904, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'authorization',
        { _index: 900, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'authrequest',
        {
          _index: 198,
          title: { 'interfaces/AuthRequest.html': {} },
          body: {
            'interfaces/AuthRequest.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'controllers/TransactionController.html': {},
          },
        },
      ],
      [
        'authresponse',
        {
          _index: 208,
          title: { 'interfaces/AuthResponse.html': {} },
          body: {
            'interfaces/AuthResponse.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
          },
        },
      ],
      ['auto', { _index: 16, title: {}, body: { 'classes/AbstractDocument.html': {} } }],
      ['available', { _index: 1940, title: {}, body: { 'modules.html': {} } }],
      [
        'await',
        {
          _index: 81,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/SignUpProps.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'axios',
        {
          _index: 292,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['axios.create', { _index: 315, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        "axios.defaults.headers.common['x",
        { _index: 302, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      [
        'axios.post(`/transaction/${action',
        { _index: 507, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'axios.request',
        { _index: 1580, title: {}, body: { 'interfaces/UseReactMutation.html': {} } },
      ],
      [
        'axioserror',
        {
          _index: 293,
          title: {},
          body: { 'interfaces/CallOptions.html': {}, 'interfaces/ChartPreviewProps.html': {} },
        },
      ],
      ['axiosoptions', { _index: 312, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        'axiosoptions.method',
        { _index: 322, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      ['axiosoptions.url', { _index: 321, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        'axiosrequestconfig',
        {
          _index: 294,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      [
        'axiosrequestheaders',
        { _index: 288, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      [
        'axis',
        { _index: 1488, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      ['backend', { _index: 1778, title: {}, body: { 'dependencies.html': {}, 'index.html': {} } }],
      [
        'background',
        {
          _index: 1328,
          title: {},
          body: { 'interfaces/ToolbarProps.html': {}, 'interfaces/UserDocument.html': {} },
        },
      ],
      ['backgroundcolor', { _index: 1426, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['bad', { _index: 214, title: {}, body: { 'interfaces/AuthResponse.html': {} } }],
      [
        'badrequestexception',
        {
          _index: 394,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        "badrequestexception('chart",
        { _index: 449, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        "badrequestexception('file",
        { _index: 796, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'badrequestexception(`data',
        { _index: 1718, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'badrequestexception(error.message',
        { _index: 788, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'badrequestexception(error_msg.invalid_token',
        { _index: 909, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['base', { _index: 1576, title: {}, body: { 'interfaces/UseReactMutation.html': {} } }],
      ['base_url', { _index: 1572, title: {}, body: { 'interfaces/UseReactMutation.html': {} } }],
      ['based', { _index: 1834, title: {}, body: { 'index.html': {} } }],
      [
        'baseurl',
        {
          _index: 281,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      [
        'blob',
        {
          _index: 1534,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      ['block', { _index: 193, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      [
        'body',
        {
          _index: 617,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'controllers/RenderController.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'controllers/TransactionController.html': {},
            'controllers/UsersController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'body.chartid',
        { _index: 1360, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'body.object',
        { _index: 1663, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'body.object.metadata',
        { _index: 1664, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'boolean',
        {
          _index: 173,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'bootstrap',
        {
          _index: 125,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'miscellaneous/functions.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'border',
        {
          _index: 1332,
          title: {},
          body: { 'interfaces/ToolbarProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      ['borderradius', { _index: 1428, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['bottom', { _index: 1333, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      [
        'box',
        {
          _index: 220,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
          },
        },
      ],
      ['boxshadow', { _index: 1430, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['brand', { _index: 1456, title: {}, body: { 'interfaces/UiHeaderProps.html': {} } }],
      [
        'break',
        {
          _index: 1171,
          title: {},
          body: {
            'injectables/RenderService.html': {},
            'interfaces/SignUpProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      ['browse', { _index: 1938, title: {}, body: { 'modules.html': {} } }],
      [
        'browser',
        { _index: 1775, title: {}, body: { 'dependencies.html': {}, 'modules.html': {} } },
      ],
      [
        'bubble',
        {
          _index: 1475,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'bubblechartdatatype',
        { _index: 1958, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['bucket', { _index: 806, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      [
        'buffer',
        {
          _index: 753,
          title: {},
          body: {
            'injectables/DatafilesService.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
          },
        },
      ],
      ['buffer.from', { _index: 1166, title: {}, body: { 'injectables/RenderService.html': {} } }],
      [
        'buffer.from(`${canvas.tobuffer().tostring',
        { _index: 1170, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      ['build', { _index: 1844, title: {}, body: { 'index.html': {} } }],
      ['building', { _index: 1856, title: {}, body: { 'index.html': {} } }],
      ['built', { _index: 1914, title: {}, body: { 'index.html': {} } }],
      [
        'button',
        {
          _index: 221,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'button/src/lib/index.tsx',
        { _index: 2026, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'button/src/lib/types.ts',
        { _index: 1311, title: {}, body: { 'interfaces/SpinnerButtonProps.html': {} } },
      ],
      [
        'buttoncolorstate',
        { _index: 1960, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['buttonprops', { _index: 1413, title: {}, body: { 'interfaces/UiButtonProps.html': {} } }],
      ['buy', { _index: 278, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      [
        'buycreditsform',
        { _index: 241, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'buycreditsformprops',
        {
          _index: 215,
          title: { 'interfaces/BuyCreditsFormProps.html': {} },
          body: { 'interfaces/BuyCreditsFormProps.html': {} },
        },
      ],
      [
        'bytes',
        { _index: 1520, title: {}, body: { 'interfaces/UploadFileSchemaOptions.html': {} } },
      ],
      [
        'cachecontrol',
        {
          _index: 1025,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'call',
        {
          _index: 298,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      [
        'called',
        {
          _index: 855,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'calloptions',
        {
          _index: 279,
          title: { 'interfaces/CallOptions.html': {} },
          body: { 'interfaces/CallOptions.html': {} },
        },
      ],
      [
        'canvas',
        {
          _index: 1150,
          title: {},
          body: { 'injectables/RenderService.html': {}, 'dependencies.html': {} },
        },
      ],
      ['canvas(width', { _index: 1160, title: {}, body: { 'injectables/RenderService.html': {} } }],
      [
        "canvas.getcontext('2d",
        { _index: 1162, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'canvas.tobuffer',
        { _index: 1174, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'canvas.tobuffer(application_pdf',
        { _index: 1172, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'canvas.tobuffer(image_png',
        { _index: 1173, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'canvasrenderingcontext2d',
        { _index: 1163, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      ['canvastype', { _index: 1156, title: {}, body: { 'injectables/RenderService.html': {} } }],
      ['card', { _index: 1421, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['cardprops', { _index: 1419, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['carousel', { _index: 1797, title: {}, body: { 'dependencies.html': {} } }],
      [
        'case',
        {
          _index: 1168,
          title: {},
          body: {
            'injectables/RenderService.html': {},
            'interfaces/SignUpProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'catch',
        {
          _index: 268,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'injectables/NotificationsService.html': {},
            'injectables/RenderService.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'cause',
        { _index: 926, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'center',
        {
          _index: 1275,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      [
        'change.doc.data',
        { _index: 534, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'change.type',
        { _index: 531, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'changelanguage',
        { _index: 348, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'changelanguageprops',
        {
          _index: 327,
          title: { 'interfaces/ChangeLanguageProps.html': {} },
          body: { 'interfaces/ChangeLanguageProps.html': {} },
        },
      ],
      ['changesets/cli', { _index: 1728, title: {}, body: { 'dependencies.html': {} } }],
      [
        'chart',
        {
          _index: 386,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
            'index.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'chart(context',
        { _index: 1164, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'chart.claimed',
        { _index: 443, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'chart.js',
        {
          _index: 401,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'chart.js/auto',
        {
          _index: 480,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'injectables/RenderService.html': {} },
        },
      ],
      [
        'chartconfig',
        {
          _index: 384,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'chartconfig.options',
        { _index: 418, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'chartconfig.options.interaction',
        { _index: 422, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'chartconfig.options.scales',
        { _index: 424, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'chartconfig.options.scales[yaxisid',
        { _index: 430, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'chartconfig.type',
        { _index: 417, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'chartconfigservice',
        {
          _index: 362,
          title: { 'injectables/ChartConfigService.html': {} },
          body: {
            'injectables/ChartConfigService.html': {},
            'controllers/RenderController.html': {},
            'modules/RenderModule.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'chartconfiguration',
        {
          _index: 381,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'chartdata',
        { _index: 378, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'chartdataset',
        {
          _index: 400,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'chartdatatype',
        { _index: 1962, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'chartid',
        {
          _index: 374,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'controllers/DatafilesController.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'chartid}.${type',
        { _index: 1136, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'chartjs',
        {
          _index: 479,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'chartjs.register',
        { _index: 494, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'chartpreview',
        { _index: 493, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'chartpreviewactions',
        {
          _index: 488,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'chartpreviewactions)[keyof',
        { _index: 492, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'chartpreviewactions.abort',
        { _index: 509, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'chartpreviewactions.verify',
        { _index: 508, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'chartpreviewprops',
        {
          _index: 461,
          title: { 'interfaces/ChartPreviewProps.html': {} },
          body: { 'interfaces/ChartPreviewProps.html': {} },
        },
      ],
      [
        'chartref',
        {
          _index: 439,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'controllers/RenderController.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        'chartref.delete',
        { _index: 448, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'chartref.get',
        { _index: 1120, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'chartref.set',
        { _index: 442, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      ['charts', { _index: 1838, title: {}, body: { 'index.html': {} } }],
      [
        'charts_collection_path',
        {
          _index: 367,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        'chartsnapshot',
        { _index: 1119, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'chartsnapshot.data',
        { _index: 1121, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'charttitle',
        {
          _index: 380,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'controllers/DatafilesController.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'charttype',
        {
          _index: 377,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/FilenameService.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'charttypelabels',
        { _index: 1486, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      ['checkbox', { _index: 2037, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'children',
        {
          _index: 1320,
          title: {},
          body: {
            'interfaces/ToolbarProps.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
          },
        },
      ],
      ['chunk', { _index: 784, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      ['chunks', { _index: 779, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      [
        'chunks.push(chunk',
        { _index: 785, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'claimed',
        {
          _index: 438,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        'claiming',
        { _index: 1391, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'claims',
        {
          _index: 174,
          title: {},
          body: { 'interfaces/AppRoutes.html': {}, 'interfaces/JwtCustomClaims.html': {} },
        },
      ],
      [
        'class',
        {
          _index: 0,
          title: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'classes/CreateUserDto.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'classes/FirebaseAdmin.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'classes/I18nStreamDto.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'classes/TransactionRequestDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
          },
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'injectables/NotificationsService.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'modules/RenderModule.html': {},
            'injectables/RenderService.html': {},
            'interfaces/ResourceDeleted.html': {},
            'modules/ServerNestClusterModule.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'classes',
        {
          _index: 2,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'classes/CreateUserDto.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'classes/FirebaseAdmin.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'classes/I18nStreamDto.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'classes/TransactionRequestDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'overview.html': {},
          },
        },
      ],
      ['cloud', { _index: 1866, title: {}, body: { 'index.html': {} } }],
      ['cluster', { _index: 554, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      ['cluster.fork', { _index: 570, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      [
        'cluster.isprimary',
        { _index: 559, title: {}, body: { 'injectables/ClusterModule.html': {} } },
      ],
      [
        'cluster.module.ts',
        { _index: 1200, title: {}, body: { 'modules/ServerNestClusterModule.html': {} } },
      ],
      [
        'cluster.service',
        { _index: 1202, title: {}, body: { 'modules/ServerNestClusterModule.html': {} } },
      ],
      [
        'cluster.service.ts',
        { _index: 545, title: {}, body: { 'injectables/ClusterModule.html': {} } },
      ],
      [
        'cluster.service.ts:17',
        { _index: 551, title: {}, body: { 'injectables/ClusterModule.html': {} } },
      ],
      [
        'cluster.service.ts:9',
        { _index: 549, title: {}, body: { 'injectables/ClusterModule.html': {} } },
      ],
      [
        'cluster_appmodule',
        { _index: 128, title: {}, body: { 'modules/AppModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_appmodule_imports',
        { _index: 129, title: {}, body: { 'modules/AppModule.html': {}, 'overview.html': {} } },
      ],
      ['cluster_appmodule_providers', { _index: 1942, title: {}, body: { 'overview.html': {} } }],
      [
        'cluster_datafilesmodule',
        {
          _index: 738,
          title: {},
          body: { 'modules/DatafilesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_datafilesmodule_providers',
        {
          _index: 739,
          title: {},
          body: { 'modules/DatafilesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_i18nstreammodule',
        { _index: 1005, title: {}, body: { 'modules/I18nStreamModule.html': {} } },
      ],
      [
        'cluster_i18nstreammodule_providers',
        { _index: 1006, title: {}, body: { 'modules/I18nStreamModule.html': {} } },
      ],
      [
        'cluster_rendermodule',
        { _index: 1141, title: {}, body: { 'modules/RenderModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_rendermodule_providers',
        { _index: 1142, title: {}, body: { 'modules/RenderModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_servernestclustermodule',
        {
          _index: 1198,
          title: {},
          body: { 'modules/ServerNestClusterModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_servernestclustermodule_providers',
        {
          _index: 1199,
          title: {},
          body: { 'modules/ServerNestClusterModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_transactionmodule',
        {
          _index: 1367,
          title: {},
          body: { 'modules/TransactionModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_transactionmodule_providers',
        {
          _index: 1368,
          title: {},
          body: { 'modules/TransactionModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_usersmodule',
        { _index: 1619, title: {}, body: { 'modules/UsersModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_usersmodule_imports',
        { _index: 1620, title: {}, body: { 'modules/UsersModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_usersmodule_providers',
        { _index: 1621, title: {}, body: { 'modules/UsersModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_validationmodule',
        {
          _index: 1680,
          title: {},
          body: { 'modules/ValidationModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_validationmodule_providers',
        {
          _index: 1681,
          title: {},
          body: { 'modules/ValidationModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'clustermodule',
        {
          _index: 542,
          title: { 'injectables/ClusterModule.html': {} },
          body: {
            'injectables/ClusterModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'clustermodule.threads',
        { _index: 557, title: {}, body: { 'injectables/ClusterModule.html': {} } },
      ],
      [
        'code',
        {
          _index: 568,
          title: {},
          body: { 'injectables/ClusterModule.html': {}, 'index.html': {} },
        },
      ],
      [
        'collection',
        {
          _index: 481,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'interfaces/UserDocument.html': {} },
        },
      ],
      [
        'collection(`users/${uid}/medialinks',
        { _index: 458, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        "collection(collectionspaths.charts_collection_path.replace('{uid",
        { _index: 1118, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        "collection(this.charts_collection_path.replace('{uid",
        { _index: 440, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        "collection(this.notifications_collection_path.replace('{uid",
        { _index: 1065, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'collectionreference',
        { _index: 482, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'collectionspaths',
        {
          _index: 404,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        'collectionspaths.charts_collection_path',
        {
          _index: 392,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        'collectionspaths.notifications_collection_path',
        { _index: 1063, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'collectionspaths.users_collection_path',
        { _index: 1382, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'color',
        {
          _index: 1329,
          title: {},
          body: {
            'interfaces/ToolbarProps.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'color="primary',
        { _index: 541, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'color="secondary',
        { _index: 539, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      ['colors', { _index: 1239, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'column',
        {
          _index: 1271,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      ['communicate', { _index: 1920, title: {}, body: { 'index.html': {} } }],
      ['complete', { _index: 271, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      ['components', { _index: 1910, title: {}, body: { 'index.html': {} } }],
      ['comprehensive', { _index: 1864, title: {}, body: { 'index.html': {} } }],
      ['compression', { _index: 1764, title: {}, body: { 'dependencies.html': {} } }],
      ['compute', { _index: 1885, title: {}, body: { 'index.html': {} } }],
      ['concats', { _index: 1575, title: {}, body: { 'interfaces/UseReactMutation.html': {} } }],
      ['concept', { _index: 1892, title: {}, body: { 'index.html': {} } }],
      [
        'config',
        {
          _index: 931,
          title: {},
          body: {
            'classes/FirebaseWeb.html': {},
            'controllers/RenderController.html': {},
            'modules/RenderModule.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
          },
        },
      ],
      [
        "config')@usepipes(zodvalidationpipe",
        { _index: 1105, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'config.dto.ts',
        { _index: 1098, title: {}, body: { 'classes/RenderChartConfigRequestDto.html': {} } },
      ],
      [
        'config.service.ts',
        {
          _index: 366,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'config.service.ts:111',
        { _index: 375, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'config.service.ts:123',
        { _index: 390, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'config.service.ts:24',
        { _index: 393, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'config.service.ts:26',
        { _index: 379, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'config.service.ts:58',
        { _index: 383, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'config.service.ts:84',
        { _index: 387, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      ['config.ts', { _index: 1977, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'config/src/lib/chart',
        {
          _index: 365,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['configdata', { _index: 524, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      [
        'configmodule',
        {
          _index: 630,
          title: {},
          body: {
            'modules/DatabaseModule.html': {},
            'modules/DatafilesModule.html': {},
            'interfaces/IFeatureModel.html': {},
          },
        },
      ],
      [
        'configservice',
        {
          _index: 631,
          title: {},
          body: {
            'modules/DatabaseModule.html': {},
            'interfaces/IFeatureModel.html': {},
            'controllers/RenderController.html': {},
          },
        },
      ],
      [
        "configservice.get('mongodb_uri",
        {
          _index: 639,
          title: {},
          body: { 'modules/DatabaseModule.html': {}, 'interfaces/IFeatureModel.html': {} },
        },
      ],
      [
        'configuration',
        {
          _index: 445,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      ['configure', { _index: 137, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['configure(consumer', { _index: 138, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['connectauthemulator', { _index: 947, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'connectauthemulator(this.auth',
        { _index: 970, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      ['connectemulators', { _index: 932, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'connectfirestoreemulator',
        { _index: 949, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        "console.log('render",
        { _index: 185, title: {}, body: { 'interfaces/AppRoutes.html': {} } },
      ],
      [
        'console.warn',
        {
          _index: 862,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        "console.warn('firebaseadmin",
        {
          _index: 858,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        "console.warn('initializefirebaseadmin",
        {
          _index: 854,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'const',
        {
          _index: 76,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'classes/I18nStreamDto.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiCardProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'constants',
        {
          _index: 344,
          title: {},
          body: {
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      [
        'constants/app.constants',
        { _index: 1472, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'constructor',
        {
          _index: 42,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'injectables/ClusterModule.html': {},
            'controllers/DatafilesController.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'classes/FirebaseWeb.html': {},
            'injectables/I18nStreamService.html': {},
            'controllers/RenderController.html': {},
            'controllers/TransactionController.html': {},
            'classes/UserRepository.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        "constructor(@inject('root_path",
        { _index: 1041, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      [
        'constructor(@injectmodel(usersservice.name',
        { _index: 1637, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      ['constructor(config', { _index: 934, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'constructor(model',
        {
          _index: 43,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'constructor(private',
        {
          _index: 994,
          title: {},
          body: {
            'controllers/I18nStreamController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'constructor(protected',
        { _index: 75, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'constructor(rootpath',
        { _index: 1033, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      [
        'constructor(undefined',
        {
          _index: 100,
          title: {},
          body: { 'classes/ApiSDK.html': {}, 'classes/FirebaseAdmin.html': {} },
        },
      ],
      [
        'constructor(usermodel',
        { _index: 1627, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'consts',
        {
          _index: 291,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpProps.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      ['consumer', { _index: 141, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'consumer.apply(firebaseauthmiddleware).forroutes(datafilescontroller',
        { _index: 153, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      ['contained', { _index: 1412, title: {}, body: { 'interfaces/UiButtonProps.html': {} } }],
      ['containerization', { _index: 1878, title: {}, body: { 'index.html': {} } }],
      ['containerized', { _index: 1887, title: {}, body: { 'index.html': {} } }],
      [
        'containing',
        {
          _index: 1072,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      ['contains', { _index: 1929, title: {}, body: { 'index.html': {} } }],
      [
        'content',
        {
          _index: 1074,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'contentencoding',
        { _index: 716, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'contenttype',
        {
          _index: 398,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'contenttype.text_csv',
        { _index: 704, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'contenttypemapper',
        { _index: 1151, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'contenttypemapper[contenttype',
        { _index: 1158, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'contenttypemappertype',
        { _index: 1967, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['context', { _index: 1161, title: {}, body: { 'injectables/RenderService.html': {} } }],
      [
        'control',
        { _index: 1494, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'controller',
        {
          _index: 641,
          title: {
            'controllers/DatafilesController.html': {},
            'controllers/I18nStreamController.html': {},
            'controllers/RenderController.html': {},
            'controllers/TransactionController.html': {},
            'controllers/UsersController.html': {},
            'controllers/ValidationController.html': {},
          },
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/I18nStreamController.html': {},
            'controllers/RenderController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/TransactionController.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'controllers/UsersController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        "controller('datafiles",
        { _index: 694, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        "controller('i18n",
        { _index: 993, title: {}, body: { 'controllers/I18nStreamController.html': {} } },
      ],
      [
        "controller('render",
        { _index: 1114, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        "controller('transaction",
        { _index: 1355, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        "controller('users",
        {
          _index: 1183,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        "controller('validation",
        { _index: 1661, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'controllers',
        {
          _index: 642,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'controllers/RenderController.html': {},
            'modules/RenderModule.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
      ['convert', { _index: 1896, title: {}, body: { 'index.html': {} } }],
      ['converts', { _index: 1836, title: {}, body: { 'index.html': {} } }],
      ['coupling', { _index: 1900, title: {}, body: { 'index.html': {} } }],
      ['cpus', { _index: 555, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      ['cpus().length', { _index: 558, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      [
        'create',
        {
          _index: 38,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'create${resourcename',
        {
          _index: 594,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'create(@body',
        {
          _index: 1189,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'create(createuserdto',
        {
          _index: 1604,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'create(document',
        {
          _index: 49,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'created',
        {
          _index: 1076,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'createdat',
        {
          _index: 435,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'controllers/DatafilesController.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/UserDocument.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'createddocument',
        { _index: 77, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'createddocument.save(options)).tojson',
        { _index: 82, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      ['createelement', { _index: 162, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      [
        'createelement(fccomponent',
        { _index: 183, title: {}, body: { 'interfaces/AppRoutes.html': {} } },
      ],
      [
        'createelement(react.lazy',
        { _index: 196, title: {}, body: { 'interfaces/AppRoutes.html': {} } },
      ],
      [
        'createreadstream',
        { _index: 1038, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      [
        'createreadstream(join(this.rootpath',
        { _index: 1043, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      [
        'createresourceschemaanddto',
        { _index: 1810, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'createresourceschemaanddto(resourcename',
        { _index: 1821, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'createuserdto',
        {
          _index: 571,
          title: { 'classes/CreateUserDto.html': {} },
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/ResourceDeleted.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'createuserwithemailandpassword',
        { _index: 1247, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'createuserwithemailandpassword(auth',
        { _index: 1289, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'createuserz',
        {
          _index: 592,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'createzoddto',
        {
          _index: 573,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/I18nStreamDto.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'classes/TransactionRequestDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'classes/UserDto.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'createzoddto(createuserz',
        {
          _index: 602,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'createzoddto(geti18nstreamz',
        { _index: 1003, title: {}, body: { 'classes/I18nStreamDto.html': {} } },
      ],
      [
        'createzoddto(getusersz',
        {
          _index: 601,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'createzoddto(schemas.deletedatafilerequestschema',
        {
          _index: 811,
          title: {},
          body: {
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'createzoddto(schemas.deletedatafileresponseschema',
        {
          _index: 812,
          title: {},
          body: {
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'createzoddto(schemas.uploaddatafilerequestschema',
        {
          _index: 1512,
          title: {},
          body: {
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'createzoddto(schemas.uploaddatafileresponseschema',
        {
          _index: 1513,
          title: {},
          body: {
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'createzoddto(updateuserz',
        {
          _index: 604,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'createzoddto(userz',
        {
          _index: 599,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'createzoddto(validatedatafilerequestschema',
        {
          _index: 1649,
          title: {},
          body: {
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'createzoddto(validatedatafileresponseschema',
        {
          _index: 1651,
          title: {},
          body: {
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'credential',
        {
          _index: 866,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      ['credit', { _index: 246, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      [
        'credits',
        {
          _index: 236,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        'credits.map((value',
        { _index: 276, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'crudresourcegen',
        {
          _index: 612,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      [
        'crudresourcegenconfig',
        {
          _index: 605,
          title: { 'interfaces/CrudResourceGenConfig.html': {} },
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      ['crypto', { _index: 818, title: {}, body: { 'injectables/FilenameService.html': {} } }],
      [
        'csv',
        {
          _index: 1508,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'controllers/ValidationController.html': {},
            'index.html': {},
          },
        },
      ],
      [
        "csv')@usepipes(zodvalidationpipe",
        { _index: 1657, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      ['ctx', { _index: 1286, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'ctx.formstate.errors',
        { _index: 1306, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        "ctx.seterror('email",
        { _index: 1298, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        "ctx.seterror('root",
        { _index: 1300, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      ['current', { _index: 260, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      ['custom', { _index: 1048, title: {}, body: { 'interfaces/JwtCustomClaims.html': {} } }],
      [
        'customclaims',
        {
          _index: 202,
          title: {},
          body: {
            'interfaces/AuthRequest.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'interfaces/JwtCustomClaims.html': {},
          },
        },
      ],
      [
        'customclaims.disabled',
        { _index: 918, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'customclaims.quota.current',
        { _index: 1400, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'customclaims.roles?.includes(userrole.user',
        { _index: 921, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'data',
        {
          _index: 282,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/ValidationController.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'data.datasets',
        { _index: 427, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      ['database', { _index: 1873, title: {}, body: { 'index.html': {} } }],
      [
        'databasemodule',
        {
          _index: 622,
          title: { 'modules/DatabaseModule.html': {} },
          body: {
            'modules/DatabaseModule.html': {},
            'interfaces/IFeatureModel.html': {},
            'modules/UsersModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'databasemodule.forfeature',
        { _index: 1624, title: {}, body: { 'modules/UsersModule.html': {} } },
      ],
      [
        'datafile',
        {
          _index: 659,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'datafile.dto.ts',
        {
          _index: 810,
          title: {},
          body: {
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'datafile.originalname',
        { _index: 709, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'datafilemetadata',
        { _index: 1969, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'datafiles',
        { _index: 645, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'datafiles.constants',
        { _index: 691, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'datafiles.controller',
        { _index: 741, title: {}, body: { 'modules/DatafilesModule.html': {} } },
      ],
      [
        'datafiles.service',
        {
          _index: 693,
          title: {},
          body: { 'controllers/DatafilesController.html': {}, 'modules/DatafilesModule.html': {} },
        },
      ],
      [
        'datafilescontroller',
        {
          _index: 144,
          title: { 'controllers/DatafilesController.html': {} },
          body: {
            'modules/AppModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
          },
        },
      ],
      [
        'datafilesmodule',
        {
          _index: 130,
          title: { 'modules/DatafilesModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'datafilesservice',
        {
          _index: 692,
          title: { 'injectables/DatafilesService.html': {} },
          body: {
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'controllers/RenderController.html': {},
            'modules/RenderModule.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
      ['dataset', { _index: 426, title: {}, body: { 'injectables/ChartConfigService.html': {} } }],
      [
        'date',
        {
          _index: 436,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'controllers/DatafilesController.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'controllers/ValidationController.html': {},
            'dependencies.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'date().tolocalestring',
        { _index: 713, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'date(body.object.timecreated',
        { _index: 1665, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      ['datetime', { _index: 2038, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['ddd', { _index: 1441, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        'declarations',
        {
          _index: 124,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
      ['decodedidtoken', { _index: 204, title: {}, body: { 'interfaces/AuthRequest.html': {} } }],
      [
        'decorators',
        {
          _index: 14,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'controllers/DatafilesController.html': {},
            'controllers/I18nStreamController.html': {},
            'controllers/RenderController.html': {},
            'controllers/TransactionController.html': {},
            'controllers/UsersController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'deeppartial',
        { _index: 1547, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      [
        'default',
        {
          _index: 69,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/DatafilesService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/NotificationsService.html': {},
            'injectables/RenderService.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'classes/UserRepository.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'default_headers',
        { _index: 1573, title: {}, body: { 'interfaces/UseReactMutation.html': {} } },
      ],
      [
        'defaultlanguage',
        { _index: 1971, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'defaultvalues',
        {
          _index: 1205,
          title: {},
          body: {
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UseHookFormProps.html': {},
          },
        },
      ],
      [
        'define_gcloud_project',
        {
          _index: 852,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'defined',
        {
          _index: 18,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'injectables/I18nStreamService.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'delete',
        {
          _index: 610,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "delete(':id",
        {
          _index: 1194,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        "delete(':id')@apicreatedresponse({type",
        { _index: 1610, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'delete()@httpcode(204)@usepipes(zodvalidationpipe',
        { _index: 652, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'deletechartconfig',
        { _index: 368, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'deletechartconfig(uid',
        { _index: 373, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'deleted',
        {
          _index: 450,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'deletedatafile',
        { _index: 646, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'deletedatafile(body',
        { _index: 648, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'deletedatafilerequestdto',
        {
          _index: 649,
          title: { 'classes/DeleteDatafileRequestDto.html': {} },
          body: {
            'controllers/DatafilesController.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'deletedatafileresponsedto',
        {
          _index: 679,
          title: { 'classes/DeleteDatafileResponseDto.html': {} },
          body: {
            'controllers/DatafilesController.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
          },
        },
      ],
      ['deletefile', { _index: 744, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      [
        'deletefile(filepath',
        { _index: 749, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'delivered',
        {
          _index: 724,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'deny',
        {
          _index: 1024,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'dependencies',
        {
          _index: 122,
          title: { 'dependencies.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'dependencies.html': {},
            'index.html': {},
            'overview.html': {},
          },
        },
      ],
      ['deploy', { _index: 1937, title: {}, body: { 'index.html': {} } }],
      ['deploy:all', { _index: 1936, title: {}, body: { 'index.html': {} } }],
      ['deploying', { _index: 1886, title: {}, body: { 'index.html': {} } }],
      ['deployment', { _index: 1876, title: {}, body: { 'index.html': {} } }],
      [
        'description',
        {
          _index: 586,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      ['development', { _index: 1904, title: {}, body: { 'index.html': {} } }],
      ['different', { _index: 1931, title: {}, body: { 'index.html': {} } }],
      [
        'directory',
        {
          _index: 1018,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'disable',
        {
          _index: 683,
          title: {},
          body: { 'controllers/DatafilesController.html': {}, 'interfaces/UserDocument.html': {} },
        },
      ],
      [
        'disabled',
        {
          _index: 898,
          title: {},
          body: {
            'injectables/FirebaseAuthMiddleware.html': {},
            'interfaces/UiButtonProps.html': {},
          },
        },
      ],
      ['discarded', { _index: 511, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      [
        'display',
        {
          _index: 412,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UiCardProps.html': {},
          },
        },
      ],
      ['divider', { _index: 1237, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'doc',
        {
          _index: 229,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
          },
        },
      ],
      [
        'doc(chart.chartid',
        { _index: 441, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'doc(chartid',
        {
          _index: 447,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'controllers/RenderController.html': {},
          },
        },
      ],
      [
        'doc(firestore',
        { _index: 257, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      ['docid', { _index: 1058, title: {}, body: { 'injectables/NotificationsService.html': {} } }],
      ['docker', { _index: 1877, title: {}, body: { 'index.html': {} } }],
      [
        'document',
        {
          _index: 54,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'documentreference',
        {
          _index: 402,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'controllers/RenderController.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      ['doesnt', { _index: 190, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      [
        'dom',
        {
          _index: 169,
          title: {},
          body: { 'interfaces/AppRoutes.html': {}, 'dependencies.html': {} },
        },
      ],
      ["don't", { _index: 1719, title: {}, body: { 'injectables/ValidationService.html': {} } }],
      [
        'dotfiles',
        {
          _index: 1023,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      ['driven', { _index: 1832, title: {}, body: { 'index.html': {} } }],
      ['dropzone', { _index: 1789, title: {}, body: { 'dependencies.html': {} } }],
      [
        'dtos',
        {
          _index: 680,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/RenderController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/TransactionController.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'dynamicmodule',
        {
          _index: 629,
          title: {},
          body: {
            'modules/DatabaseModule.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'interfaces/IFeatureModel.html': {},
          },
        },
      ],
      [
        'e',
        {
          _index: 319,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      ['e.code', { _index: 1296, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'e.message',
        {
          _index: 323,
          title: {},
          body: { 'interfaces/CallOptions.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      ['e.response?.data', { _index: 326, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        'e.response?.status',
        { _index: 324, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      ['e0e0e0', { _index: 1336, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      [
        'e?.message',
        { _index: 927, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['each', { _index: 1921, title: {}, body: { 'index.html': {} } }],
      ['ease', { _index: 1444, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['element', { _index: 182, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      [
        'email',
        {
          _index: 1224,
          title: {},
          body: {
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'emailalreadyinuse',
        { _index: 1295, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      ['emotion/react', { _index: 1730, title: {}, body: { 'dependencies.html': {} } }],
      [
        'emotion/styled',
        {
          _index: 333,
          title: {},
          body: {
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['enables', { _index: 1895, title: {}, body: { 'index.html': {} } }],
      ['enabling', { _index: 1919, title: {}, body: { 'index.html': {} } }],
      [
        'endpoint',
        {
          _index: 1536,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      ['enough', { _index: 1404, title: {}, body: { 'injectables/TransactionService.html': {} } }],
      ['env', { _index: 944, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      ['environment', { _index: 1905, title: {}, body: { 'index.html': {} } }],
      ['errmsg', { _index: 1216, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } }],
      [
        'errmsg.maxpasswordlength',
        { _index: 1221, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } },
      ],
      [
        'errmsg.minpasswordlength',
        { _index: 1219, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } },
      ],
      [
        'errmsg.passwordsdontmatch',
        { _index: 1228, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } },
      ],
      [
        'error',
        {
          _index: 269,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'injectables/NotificationsService.html': {},
            'injectables/RenderService.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      ["error('firebase", { _index: 967, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        "error('vite_public_firebase_config",
        { _index: 952, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'error(json.stringify(error',
        { _index: 1582, title: {}, body: { 'interfaces/UseReactMutation.html': {} } },
      ],
      [
        'error.message',
        { _index: 1678, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'error_msg',
        { _index: 894, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'error_msg.unauthenticated',
        { _index: 928, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['errordisplay', { _index: 1301, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'errormessage',
        { _index: 501, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      ['errorobj', { _index: 320, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        'erroroption',
        { _index: 1553, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      [
        'errors',
        {
          _index: 803,
          title: {},
          body: { 'injectables/DatafilesService.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        'eslint',
        {
          _index: 682,
          title: {},
          body: { 'controllers/DatafilesController.html': {}, 'interfaces/UserDocument.html': {} },
        },
      ],
      [
        'eslint/no',
        {
          _index: 686,
          title: {},
          body: { 'controllers/DatafilesController.html': {}, 'interfaces/UserDocument.html': {} },
        },
      ],
      [
        'event',
        {
          _index: 249,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'event.preventdefault',
        { _index: 254, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'event.target.value',
        { _index: 355, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      ['events', { _index: 1923, title: {}, body: { 'index.html': {} } }],
      [
        'example',
        { _index: 1521, title: {}, body: { 'interfaces/UploadFileSchemaOptions.html': {} } },
      ],
      [
        'exclude',
        {
          _index: 1548,
          title: {},
          body: {
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'executed',
        { _index: 1362, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      ['executes', { _index: 195, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      ['execution', { _index: 1924, title: {}, body: { 'index.html': {} } }],
      ['explicit', { _index: 1586, title: {}, body: { 'interfaces/UserDocument.html': {} } }],
      [
        'export',
        {
          _index: 27,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'modules/RenderModule.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'modules/ServerNestClusterModule.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'exports',
        {
          _index: 127,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'interfaces/IFeatureModel.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'express',
        {
          _index: 206,
          title: {},
          body: {
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'express.multer.file',
        {
          _index: 655,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
          },
        },
      ],
      [
        'extendapi',
        {
          _index: 576,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/I18nStreamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'extendapi(create',
        {
          _index: 593,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'extendapi(i18nstreamschema',
        { _index: 1002, title: {}, body: { 'classes/I18nStreamDto.html': {} } },
      ],
      [
        'extendapi(list',
        {
          _index: 588,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'extendapi(retrieve',
        {
          _index: 585,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'extendapi(update',
        {
          _index: 596,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'extends',
        {
          _index: 200,
          title: {},
          body: {
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'classes/CreateUserDto.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/I18nStreamDto.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'classes/TransactionRequestDto.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
          },
        },
      ],
      ['extname', { _index: 819, title: {}, body: { 'injectables/FilenameService.html': {} } }],
      [
        'extname(filename).replace',
        { _index: 823, title: {}, body: { 'injectables/FilenameService.html': {} } },
      ],
      [
        'extralanguages',
        { _index: 1973, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['f8f8f8', { _index: 1330, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      [
        'failed',
        {
          _index: 270,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'false',
        {
          _index: 71,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserRepository.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      ['fastmode', { _index: 799, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      ['fc', { _index: 485, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      ['fccomponent', { _index: 175, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      ['fff', { _index: 1427, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        'fields',
        {
          _index: 1206,
          title: {},
          body: { 'interfaces/SignUpFormSpecs.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      ['fieldspec', { _index: 1974, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'file',
        {
          _index: 5,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'modules/RenderModule.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'modules/ServerNestClusterModule.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
            'index.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'file(`${path}/${metadata.uid}/${metadata.chartid}/${filename',
        { _index: 807, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'file.mimetype',
        { _index: 773, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'filebuffer',
        {
          _index: 755,
          title: {},
          body: {
            'injectables/DatafilesService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'fileextension',
        { _index: 822, title: {}, body: { 'injectables/FilenameService.html': {} } },
      ],
      [
        'fileid',
        {
          _index: 706,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'injectables/FilenameService.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'fileinterceptor',
        { _index: 669, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'filelist',
        {
          _index: 1528,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'filename',
        {
          _index: 759,
          title: {},
          body: {
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'injectables/I18nStreamService.html': {},
          },
        },
      ],
      [
        'filenameservice',
        {
          _index: 673,
          title: { 'injectables/FilenameService.html': {} },
          body: {
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/FilenameService.html': {},
            'overview.html': {},
          },
        },
      ],
      ['filepath', { _index: 751, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      ['fileref', { _index: 770, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      [
        'fileref.createreadstream',
        { _index: 778, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'fileref.delete',
        { _index: 793, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'fileref.getmetadata',
        { _index: 775, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'fileref.save(buffer',
        { _index: 808, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'fileref.save(file.buffer',
        { _index: 772, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'files',
        {
          _index: 1483,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'files_destination',
        { _index: 696, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'filetype',
        { _index: 703, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'filetypevalidator',
        { _index: 665, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'filterquery',
        {
          _index: 59,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      ['finally', { _index: 512, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      [
        'find',
        {
          _index: 39,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'find(filterquery',
        {
          _index: 58,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'findone',
        {
          _index: 40,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'findone(filterquery',
        {
          _index: 62,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'findoneandupdate',
        {
          _index: 41,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'findoneandupdate(filterquery',
        {
          _index: 64,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'fireandforget',
        {
          _index: 1108,
          title: {},
          body: {
            'controllers/RenderController.html': {},
            'controllers/ValidationController.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'fireandforget(async',
        {
          _index: 1123,
          title: {},
          body: {
            'controllers/RenderController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'fireandforget(fn',
        { _index: 1823, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'firebase',
        {
          _index: 164,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/DatafilesService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/TransactionService.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      ['firebase.auth', { _index: 974, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      ['firebase.firestore', { _index: 975, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      ['firebase.projectid', { _index: 976, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'firebase/app',
        {
          _index: 946,
          title: {},
          body: { 'classes/FirebaseWeb.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        'firebase/auth',
        {
          _index: 948,
          title: {},
          body: {
            'classes/FirebaseWeb.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/SignUpProps.html': {},
          },
        },
      ],
      [
        'firebase/firestore',
        {
          _index: 232,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'classes/FirebaseWeb.html': {},
          },
        },
      ],
      [
        'firebaseadmin',
        {
          _index: 825,
          title: { 'classes/FirebaseAdmin.html': {} },
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'firebaseadmin.app',
        {
          _index: 857,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'firebaseadmin.auth',
        {
          _index: 873,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'firebaseadmin.firestore',
        {
          _index: 871,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'firebaseadmin.projectid',
        {
          _index: 861,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'firebaseadmin.storage',
        {
          _index: 869,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'firebaseadminconstructorconfig',
        {
          _index: 831,
          title: { 'interfaces/FirebaseAdminConstructorConfig.html': {} },
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      ['firebaseapp', { _index: 937, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'firebaseauthmiddleware',
        {
          _index: 146,
          title: { 'injectables/FirebaseAuthMiddleware.html': {} },
          body: { 'modules/AppModule.html': {}, 'injectables/FirebaseAuthMiddleware.html': {} },
        },
      ],
      ['firebaseerror', { _index: 1246, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'firebaseoptions',
        {
          _index: 935,
          title: {},
          body: { 'classes/FirebaseWeb.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'firebaseweb',
        {
          _index: 929,
          title: { 'classes/FirebaseWeb.html': {} },
          body: { 'classes/FirebaseWeb.html': {} },
        },
      ],
      [
        'firebaseweb(env.vite_public_firebase_config',
        { _index: 973, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'firestore',
        {
          _index: 228,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'classes/FirebaseWeb.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/TransactionService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'firestore.doc',
        { _index: 1385, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'firestore.runtransaction(async',
        { _index: 1389, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      ['first', { _index: 1850, title: {}, body: { 'index.html': {} } }],
      ['flags', { _index: 343, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } }],
      [
        'flags[key',
        { _index: 359, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'flex',
        {
          _index: 1269,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      ['flexcontainer', { _index: 1267, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'flexdirection',
        {
          _index: 1270,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      [
        'fn',
        {
          _index: 552,
          title: {},
          body: { 'injectables/ClusterModule.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      ['fns', { _index: 1766, title: {}, body: { 'dependencies.html': {} } }],
      ['follow', { _index: 1918, title: {}, body: { 'index.html': {} } }],
      [
        'following',
        {
          _index: 275,
          title: {},
          body: { 'interfaces/BuyCreditsFormProps.html': {}, 'index.html': {} },
        },
      ],
      ['follows', { _index: 1897, title: {}, body: { 'index.html': {} } }],
      ['fontsource/inter', { _index: 1733, title: {}, body: { 'dependencies.html': {} } }],
      ['forbidden', { _index: 213, title: {}, body: { 'interfaces/AuthResponse.html': {} } }],
      [
        'forbiddenexception',
        {
          _index: 891,
          title: {},
          body: {
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        "forbiddenexception('not",
        { _index: 1403, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'forbiddenexception(error_msg.insufficient_permissions',
        { _index: 923, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'forbiddenexception(error_msg.user_disabled',
        { _index: 920, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['forfeature', { _index: 624, title: {}, body: { 'modules/DatabaseModule.html': {} } }],
      [
        'forfeature(...models',
        {
          _index: 634,
          title: {},
          body: { 'modules/DatabaseModule.html': {}, 'interfaces/IFeatureModel.html': {} },
        },
      ],
      [
        'forfeature(models',
        { _index: 625, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      ['forget.util.ts', { _index: 1813, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      ['fork', { _index: 548, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      ['fork(fn', { _index: 550, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      [
        'form',
        {
          _index: 1259,
          title: {},
          body: {
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['formats', { _index: 1840, title: {}, body: { 'index.html': {} } }],
      ['formcontainer', { _index: 1255, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'formcontrol',
        { _index: 222, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'formcontrollabel',
        {
          _index: 223,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
          },
        },
      ],
      [
        'formdata',
        {
          _index: 1526,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'formevent',
        {
          _index: 1532,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'formlabel',
        {
          _index: 224,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
          },
        },
      ],
      [
        'formmetadata',
        {
          _index: 1533,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'formprovider',
        { _index: 1470, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      ['formspec', { _index: 1281, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'formstate',
        { _index: 1495, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'forroot',
        {
          _index: 1008,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'forroot(undefined',
        { _index: 1009, title: {}, body: { 'modules/I18nStreamModule.html': {} } },
      ],
      [
        'found',
        {
          _index: 87,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      ['framework', { _index: 1855, title: {}, body: { 'index.html': {} } }],
      ['friendly', { _index: 1894, title: {}, body: { 'index.html': {} } }],
      ['fs', { _index: 1039, title: {}, body: { 'injectables/I18nStreamService.html': {} } }],
      ['fullsize', { _index: 414, title: {}, body: { 'injectables/ChartConfigService.html': {} } }],
      [
        'function',
        {
          _index: 553,
          title: {},
          body: {
            'injectables/ClusterModule.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      [
        'functions',
        {
          _index: 1771,
          title: { 'miscellaneous/functions.html': {} },
          body: {
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'gap',
        {
          _index: 1272,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      [
        'generatechartconfig',
        { _index: 369, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'generatechartconfig(charttitle',
        { _index: 376, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'generated',
        { _index: 1672, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'generatefileinfo',
        { _index: 814, title: {}, body: { 'injectables/FilenameService.html': {} } },
      ],
      [
        'generatefileinfo(filename',
        { _index: 815, title: {}, body: { 'injectables/FilenameService.html': {} } },
      ],
      [
        'generatemultiaxislineoptions',
        { _index: 370, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'generatemultiaxislineoptions(chartconfig',
        { _index: 382, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      ['generating', { _index: 1913, title: {}, body: { 'index.html': {} } }],
      ['generation', { _index: 1849, title: {}, body: { 'index.html': {} } }],
      [
        "get(':id",
        {
          _index: 1186,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        "get(':id')@apicreatedresponse({type",
        { _index: 1613, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        "get(':lng",
        { _index: 983, title: {}, body: { 'controllers/I18nStreamController.html': {} } },
      ],
      [
        'get()@apicreatedresponse({type',
        { _index: 1607, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      ['getapp', { _index: 838, title: {}, body: { 'classes/FirebaseAdmin.html': {} } }],
      [
        'getauth',
        {
          _index: 844,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'classes/FirebaseWeb.html': {},
          },
        },
      ],
      [
        'getauth(firebaseadmin.app',
        {
          _index: 874,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      ['getauth(this.app', { _index: 958, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'geterrormessages',
        {
          _index: 1210,
          title: {},
          body: { 'interfaces/SignUpFormSpecs.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        'geterrormessages(t',
        {
          _index: 1217,
          title: {},
          body: { 'interfaces/SignUpFormSpecs.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        'getfirestore',
        {
          _index: 842,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'classes/FirebaseWeb.html': {},
          },
        },
      ],
      [
        'getfirestore(firebaseadmin.app',
        {
          _index: 872,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'getfirestore(this.app',
        { _index: 960, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      ['geti18nstreamz', { _index: 1001, title: {}, body: { 'classes/I18nStreamDto.html': {} } }],
      [
        'getlanguage',
        { _index: 981, title: {}, body: { 'controllers/I18nStreamController.html': {} } },
      ],
      [
        "getlanguage(@param('lng",
        { _index: 995, title: {}, body: { 'controllers/I18nStreamController.html': {} } },
      ],
      [
        'getlanguage(lng',
        { _index: 982, title: {}, body: { 'controllers/I18nStreamController.html': {} } },
      ],
      [
        'getpasswordschema',
        {
          _index: 1214,
          title: {},
          body: { 'interfaces/SignUpFormSpecs.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        'getpasswordschema(t',
        { _index: 1280, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      ['getprojectid', { _index: 846, title: {}, body: { 'classes/FirebaseAdmin.html': {} } }],
      [
        'getsignupformschema',
        {
          _index: 1222,
          title: {},
          body: { 'interfaces/SignUpFormSpecs.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        'getsignupformschema(t',
        { _index: 1279, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'getstorage',
        {
          _index: 840,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'getstorage(firebaseadmin.app',
        {
          _index: 870,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'getstream',
        { _index: 1032, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      [
        'getstream(filename',
        { _index: 1035, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      ['getting', { _index: 1828, title: { 'index.html': {} }, body: {} }],
      ['getusers', { _index: 104, title: {}, body: { 'classes/ApiSDK.html': {} } }],
      [
        'getusersdto',
        {
          _index: 600,
          title: { 'classes/GetUsersDto.html': {} },
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/ResourceDeleted.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'getusersz',
        {
          _index: 587,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      ['goal', { _index: 1893, title: {}, body: { 'index.html': {} } }],
      ['google', { _index: 1870, title: {}, body: { 'index.html': {} } }],
      [
        'googleauthprovider',
        { _index: 1249, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      ['graph', { _index: 1939, title: {}, body: { 'modules.html': {} } }],
      ['grid', { _index: 1742, title: {}, body: { 'dependencies.html': {} } }],
      [
        'handlechange',
        { _index: 353, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'handleformsubmit',
        { _index: 252, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'handleformsubmit(e',
        { _index: 272, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'handleoptionchange',
        { _index: 248, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      ['handler', { _index: 1460, title: {}, body: { 'interfaces/UiHeaderProps.html': {} } }],
      [
        'handleselection',
        { _index: 503, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'handleselection(chartpreviewactions.abort',
        { _index: 538, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'handleselection(chartpreviewactions.verify',
        { _index: 540, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      ['handling', { _index: 1916, title: {}, body: { 'index.html': {} } }],
      ['header', { _index: 800, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      ['headerlink', { _index: 1979, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'headers',
        {
          _index: 283,
          title: {},
          body: { 'interfaces/CallOptions.html': {}, 'interfaces/UseReactMutation.html': {} },
        },
      ],
      [
        'height',
        {
          _index: 1090,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/ToolbarProps.html': {},
            'interfaces/UiHeaderProps.html': {},
          },
        },
      ],
      [
        'hidden',
        {
          _index: 1437,
          title: {},
          body: { 'interfaces/UiCardProps.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'hideactionbuttons',
        { _index: 463, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'hoist',
        {
          _index: 1251,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'dependencies.html': {} },
        },
      ],
      ['hoiststatics', { _index: 1250, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'hook',
        {
          _index: 1258,
          title: {},
          body: {
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['hookform/resolvers', { _index: 1735, title: {}, body: { 'dependencies.html': {} } }],
      [
        'hookform/resolvers/zod',
        {
          _index: 1236,
          title: {},
          body: {
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UseHookFormProps.html': {},
          },
        },
      ],
      ['hooks', { _index: 1791, title: {}, body: { 'dependencies.html': {} } }],
      [
        'hooks/auth',
        {
          _index: 165,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/JwtCustomClaims.html': {},
          },
        },
      ],
      ['hosting', { _index: 1875, title: {}, body: { 'index.html': {} } }],
      ['hover', { _index: 1445, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        'html',
        {
          _index: 1080,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'http',
        {
          _index: 1557,
          title: {},
          body: { 'interfaces/UseHookFormProps.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'http://${localhost}:${env.vite_public_auth_emulator_port',
        { _index: 971, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'httpaction',
        {
          _index: 607,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'httpcode',
        {
          _index: 668,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/TransactionController.html': {},
          },
        },
      ],
      [
        'httpcode(200',
        { _index: 1357, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'httpcode(204',
        { _index: 733, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      ['httpconfig', { _index: 1546, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } }],
      [
        'httpmethod',
        {
          _index: 289,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'httpmethod.delete',
        {
          _index: 309,
          title: {},
          body: { 'interfaces/CallOptions.html': {}, 'interfaces/UseReactMutation.html': {} },
        },
      ],
      ['httpmethod.get', { _index: 308, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        'httpmethod.post',
        {
          _index: 299,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      [
        'https://developer.mozilla.org/en',
        {
          _index: 1530,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'httpstatus',
        { _index: 667, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'httpstatus.ok',
        { _index: 730, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'i18n',
        {
          _index: 349,
          title: {},
          body: {
            'interfaces/ChangeLanguageProps.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'i18n.changelanguage(newlanguage',
        { _index: 357, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'i18next',
        {
          _index: 342,
          title: {},
          body: {
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'i18nstreamcontroller',
        {
          _index: 977,
          title: { 'controllers/I18nStreamController.html': {} },
          body: {
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'i18nstreamdto',
        {
          _index: 991,
          title: { 'classes/I18nStreamDto.html': {} },
          body: { 'controllers/I18nStreamController.html': {}, 'classes/I18nStreamDto.html': {} },
        },
      ],
      [
        'i18nstreammodule',
        {
          _index: 1004,
          title: { 'modules/I18nStreamModule.html': {} },
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'i18nstreammoduleoptions',
        {
          _index: 1010,
          title: { 'interfaces/I18nStreamModuleOptions.html': {} },
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      ['i18nstreamschema', { _index: 999, title: {}, body: { 'classes/I18nStreamDto.html': {} } }],
      [
        'i18nstreamservice',
        {
          _index: 988,
          title: { 'injectables/I18nStreamService.html': {} },
          body: {
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'id',
        {
          _index: 615,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'idtoken',
        { _index: 910, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'ifeaturemodel',
        {
          _index: 626,
          title: { 'interfaces/IFeatureModel.html': {} },
          body: { 'modules/DatabaseModule.html': {}, 'interfaces/IFeatureModel.html': {} },
        },
      ],
      [
        'ignore',
        {
          _index: 614,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      [
        'ignorenotfound',
        { _index: 794, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'ihtmlinputtypeattribute',
        { _index: 1983, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['image', { _index: 2040, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'image/png',
        {
          _index: 1085,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'image/svg+xml',
        {
          _index: 1084,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      ['image_png', { _index: 1154, title: {}, body: { 'injectables/RenderService.html': {} } }],
      [
        'image_svg_xml',
        { _index: 1152, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'immutable',
        {
          _index: 1028,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'implements',
        {
          _index: 152,
          title: {},
          body: { 'modules/AppModule.html': {}, 'injectables/FirebaseAuthMiddleware.html': {} },
        },
      ],
      [
        'import',
        {
          _index: 20,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'modules/RenderModule.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'modules/ServerNestClusterModule.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'import(`../pages/${page}/index.tsx',
        { _index: 197, title: {}, body: { 'interfaces/AppRoutes.html': {} } },
      ],
      ['import.meta.env.dev', { _index: 964, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'imports',
        {
          _index: 136,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'interfaces/IFeatureModel.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      ['includes', { _index: 1909, title: {}, body: { 'index.html': {} } }],
      ['including', { _index: 1871, title: {}, body: { 'index.html': {} } }],
      [
        'increment',
        { _index: 231, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'increment(number(selectedoption',
        { _index: 261, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'index',
        {
          _index: 7,
          title: { 'index.html': {} },
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'indexable',
        {
          _index: 156,
          title: {},
          body: { 'interfaces/AppRoutes.html': {}, 'interfaces/Resource.html': {} },
        },
      ],
      [
        'info',
        {
          _index: 3,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'modules/RenderModule.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'modules/ServerNestClusterModule.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      ['inherit', { _index: 2028, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['inherited', { _index: 1596, title: {}, body: { 'classes/UserRepository.html': {} } }],
      [
        'init',
        {
          _index: 829,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'initializeapp',
        {
          _index: 848,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'classes/FirebaseWeb.html': {},
          },
        },
      ],
      [
        'initializeapp(this.config',
        { _index: 966, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'initialized',
        {
          _index: 860,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'initializefirebaseadmin',
        {
          _index: 878,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'initializefirebasewebapp',
        { _index: 933, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'initializing',
        {
          _index: 865,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'inject',
        {
          _index: 640,
          title: {},
          body: {
            'modules/DatabaseModule.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
          },
        },
      ],
      [
        'injectable',
        {
          _index: 361,
          title: {
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/I18nStreamService.html': {},
            'injectables/NotificationsService.html': {},
            'injectables/RenderService.html': {},
            'injectables/TransactionService.html': {},
            'injectables/UsersService.html': {},
            'injectables/ValidationService.html': {},
          },
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/I18nStreamService.html': {},
            'injectables/NotificationsService.html': {},
            'injectables/RenderService.html': {},
            'injectables/TransactionService.html': {},
            'injectables/UsersService.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'injectables',
        {
          _index: 363,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/I18nStreamService.html': {},
            'injectables/NotificationsService.html': {},
            'injectables/RenderService.html': {},
            'injectables/TransactionService.html': {},
            'injectables/UsersService.html': {},
            'injectables/ValidationService.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'injectiontoken',
        {
          _index: 1012,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      ['injectmodel', { _index: 1635, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'instance',
        {
          _index: 314,
          title: {},
          body: { 'interfaces/CallOptions.html': {}, 'interfaces/UseReactMutation.html': {} },
        },
      ],
      [
        'instance.request(axiosoptions',
        { _index: 317, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      ['instanceof', { _index: 795, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      [
        'insufficient',
        { _index: 901, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'insufficient_permissions',
        { _index: 899, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['integrate', { _index: 1927, title: {}, body: { 'index.html': {} } }],
      ['integrations', { _index: 1853, title: {}, body: { 'index.html': {} } }],
      ['interactive', { _index: 1837, title: {}, body: { 'index.html': {} } }],
      [
        'interface',
        {
          _index: 112,
          title: {
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
          },
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'controllers/UsersController.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'interfaces',
        {
          _index: 111,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'index.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'interfaces/src/lib/resources/constants.ts',
        { _index: 2060, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'interfaces/src/lib/resources/index.ts',
        { _index: 2020, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'interfaces/src/lib/resources/utils.ts',
        {
          _index: 606,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      [
        'interfaces/src/lib/resources/utils.ts:28',
        { _index: 1178, title: {}, body: { 'interfaces/Resource.html': {} } },
      ],
      [
        'interfaces/src/lib/services/constants.ts',
        { _index: 2062, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'interfaces/src/lib/services/index.ts',
        { _index: 2063, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'internalservererrorexception',
        {
          _index: 395,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'injectables/RenderService.html': {} },
        },
      ],
      [
        'internalservererrorexception("couldn\'t',
        { _index: 1177, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        "internalservererrorexception('chart",
        { _index: 444, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        "internalservererrorexception('no",
        { _index: 452, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'intersect',
        { _index: 423, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'invalid',
        {
          _index: 802,
          title: {},
          body: {
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
          },
        },
      ],
      [
        'invalid_token',
        { _index: 895, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['isbutton', { _index: 1459, title: {}, body: { 'interfaces/UiHeaderProps.html': {} } }],
      [
        'ischartdata',
        {
          _index: 1706,
          title: {},
          body: { 'injectables/ValidationService.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'ischartdata(object',
        { _index: 1825, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'ischartdata(transformeddata',
        { _index: 1717, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      ['isdevmode', { _index: 963, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      ['isdone', { _index: 1313, title: {}, body: { 'interfaces/SpinnerButtonProps.html': {} } }],
      [
        'iserror',
        {
          _index: 1560,
          title: {},
          body: { 'interfaces/UseHookFormProps.html': {}, 'interfaces/UseReactMutation.html': {} },
        },
      ],
      ['isguarded', { _index: 172, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      [
        'isloading',
        {
          _index: 1314,
          title: {},
          body: {
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      [
        'ismultiaxis',
        { _index: 1696, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'issuccess',
        {
          _index: 1561,
          title: {},
          body: { 'interfaces/UseHookFormProps.html': {}, 'interfaces/UseReactMutation.html': {} },
        },
      ],
      ["it's", { _index: 1843, title: {}, body: { 'index.html': {} } }],
      ['javascript', { _index: 1862, title: {}, body: { 'index.html': {} } }],
      ['join', { _index: 1040, title: {}, body: { 'injectables/I18nStreamService.html': {} } }],
      [
        'justifycontent',
        {
          _index: 1274,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      ['jwt', { _index: 905, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } }],
      [
        "jwt.split('bearer",
        { _index: 911, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        "jwt?.startswith('bearer",
        { _index: 907, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['jwtclaims', { _index: 1047, title: {}, body: { 'interfaces/JwtCustomClaims.html': {} } }],
      [
        'jwtcustomclaims',
        {
          _index: 1044,
          title: { 'interfaces/JwtCustomClaims.html': {} },
          body: { 'interfaces/JwtCustomClaims.html': {} },
        },
      ],
      ['jwttoken', { _index: 1984, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'k',
        {
          _index: 1551,
          title: {},
          body: { 'interfaces/UseHookFormProps.html': {}, 'interfaces/UseReactMutation.html': {} },
        },
      ],
      [
        'key',
        {
          _index: 157,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      ['keyof', { _index: 1231, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } }],
      ['keyprefix', { _index: 1308, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['label', { _index: 1458, title: {}, body: { 'interfaces/UiHeaderProps.html': {} } }],
      [
        'label={charttypelabels[type',
        { _index: 1510, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'label={value.tostring',
        { _index: 277, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      ['langs', { _index: 330, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } }],
      [
        'langs.map((key',
        { _index: 358, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'language/src/lib/constants.ts',
        { _index: 2053, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'language/src/lib/index.tsx',
        { _index: 329, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      ['languagedetector', { _index: 1776, title: {}, body: { 'dependencies.html': {} } }],
      [
        'languageicon',
        { _index: 334, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'languages',
        {
          _index: 331,
          title: {},
          body: { 'interfaces/ChangeLanguageProps.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'languages[key',
        { _index: 360, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      ['lazy', { _index: 188, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      ['lean', { _index: 85, title: {}, body: { 'classes/AbstractRepository.html': {} } }],
      [
        'left',
        {
          _index: 434,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        'leftaxisexists',
        { _index: 425, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'legend',
        {
          _index: 123,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/ChartConfigService.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'length',
        {
          _index: 420,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
          },
        },
      ],
      ['library', { _index: 1863, title: {}, body: { 'index.html': {} } }],
      [
        'libs/.../chart',
        { _index: 1987, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../chart.type.ts',
        { _index: 1961, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../chartdata.type.ts',
        { _index: 1959, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../charttype.const.ts',
        { _index: 1964, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../constants.ts',
        { _index: 1986, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../contenttype.const.ts',
        { _index: 1966, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../datafile.type.ts',
        { _index: 1970, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../fieldspec.type.ts',
        { _index: 1975, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['libs/.../fire', { _index: 1812, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'libs/.../firebase',
        { _index: 1976, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../getnextstep.util.ts',
        { _index: 1989, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../httpaction.const.ts',
        { _index: 1981, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../httpmethod.const.ts',
        { _index: 1982, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../index.ts',
        { _index: 1954, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../index.tsx',
        {
          _index: 1815,
          title: {},
          body: { 'miscellaneous/functions.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'libs/.../ischartdata.ts',
        { _index: 1814, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'libs/.../notificationtype.const.ts',
        { _index: 1990, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../quota.const.ts',
        { _index: 1995, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../render.constants.ts',
        { _index: 1968, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../resourceendpoint.type.ts',
        { _index: 1998, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../schema.ts',
        { _index: 2001, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../translationkeys.const.ts',
        { _index: 2006, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../types.ts',
        { _index: 1978, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../usejwt.hook.ts',
        { _index: 1985, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../user.type.ts',
        { _index: 2009, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../userattributes.schema.ts',
        { _index: 2011, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../usercustomclaims.schema.ts',
        { _index: 2012, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../usernotification.type.ts',
        { _index: 2014, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../userquota.schema.ts',
        { _index: 2016, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../userrole.const.ts',
        { _index: 2017, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../userroles.schema.ts',
        { _index: 2019, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/.../utils.ts',
        { _index: 1811, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'libs/server/firebase',
        {
          _index: 826,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'libs/server/nest/chart',
        {
          _index: 364,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'libs/server/nest/cluster/src/lib/server',
        {
          _index: 543,
          title: {},
          body: {
            'injectables/ClusterModule.html': {},
            'modules/ServerNestClusterModule.html': {},
          },
        },
      ],
      [
        'libs/server/nest/database/src/lib/abstract.repository.ts',
        { _index: 32, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'libs/server/nest/database/src/lib/abstract.repository.ts:11',
        { _index: 53, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'libs/server/nest/database/src/lib/abstract.repository.ts:16',
        { _index: 63, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'libs/server/nest/database/src/lib/abstract.repository.ts:27',
        { _index: 68, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'libs/server/nest/database/src/lib/abstract.repository.ts:46',
        { _index: 60, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'libs/server/nest/database/src/lib/abstract.repository.ts:7',
        { _index: 45, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'libs/server/nest/database/src/lib/abstract.schema.ts',
        { _index: 6, title: {}, body: { 'classes/AbstractDocument.html': {} } },
      ],
      [
        'libs/server/nest/database/src/lib/abstract.schema.ts:7',
        { _index: 19, title: {}, body: { 'classes/AbstractDocument.html': {} } },
      ],
      [
        'libs/server/nest/database/src/lib/database.module.ts',
        {
          _index: 623,
          title: {},
          body: { 'modules/DatabaseModule.html': {}, 'interfaces/IFeatureModel.html': {} },
        },
      ],
      [
        'libs/server/nest/database/src/lib/database.module.ts:13',
        { _index: 627, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.controller.ts',
        { _index: 643, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.controller.ts:121',
        { _index: 653, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.controller.ts:55',
        { _index: 658, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.module.ts',
        { _index: 740, title: {}, body: { 'modules/DatafilesModule.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.service.ts',
        { _index: 742, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.service.ts:11',
        { _index: 764, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.service.ts:29',
        { _index: 757, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.service.ts:41',
        { _index: 750, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.service.ts:60',
        { _index: 754, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.service.ts:72',
        { _index: 761, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'libs/server/nest/datafiles/src/lib/datafiles.service.ts:9',
        { _index: 766, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'libs/server/nest/filename/src/lib/filename.service.ts',
        { _index: 813, title: {}, body: { 'injectables/FilenameService.html': {} } },
      ],
      [
        'libs/server/nest/filename/src/lib/filename.service.ts:8',
        { _index: 816, title: {}, body: { 'injectables/FilenameService.html': {} } },
      ],
      [
        'libs/server/nest/firebase',
        { _index: 880, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'libs/server/nest/i18n',
        {
          _index: 978,
          title: {},
          body: {
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
          },
        },
      ],
      [
        'libs/server/nest/notifications/src/lib/notifications.service.ts',
        { _index: 1054, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'libs/server/nest/notifications/src/lib/notifications.service.ts:10',
        { _index: 1064, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'libs/server/nest/notifications/src/lib/notifications.service.ts:11',
        { _index: 1060, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'libs/server/nest/notifications/src/lib/notifications.service.ts:9',
        { _index: 1062, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'libs/server/nest/render/src/lib/render.constants.ts',
        { _index: 2033, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/server/nest/render/src/lib/render.controller.ts',
        { _index: 1101, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'libs/server/nest/render/src/lib/render.controller.ts:33',
        { _index: 1106, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'libs/server/nest/render/src/lib/render.module.ts',
        { _index: 1143, title: {}, body: { 'modules/RenderModule.html': {} } },
      ],
      [
        'libs/server/nest/render/src/lib/render.service.ts',
        { _index: 1145, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'libs/server/nest/render/src/lib/render.service.ts:13',
        { _index: 1149, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'libs/server/nest/render/src/lib/render.service.ts:15',
        { _index: 1147, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'libs/server/nest/transaction/src/lib/transaction.controller.ts',
        { _index: 1342, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'libs/server/nest/transaction/src/lib/transaction.controller.ts:21',
        { _index: 1352, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'libs/server/nest/transaction/src/lib/transaction.controller.ts:33',
        { _index: 1349, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'libs/server/nest/transaction/src/lib/transaction.module.ts',
        { _index: 1369, title: {}, body: { 'modules/TransactionModule.html': {} } },
      ],
      [
        'libs/server/nest/transaction/src/lib/transaction.service.ts',
        { _index: 1374, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'libs/server/nest/transaction/src/lib/transaction.service.ts:10',
        { _index: 1379, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'libs/server/nest/transaction/src/lib/transaction.service.ts:11',
        { _index: 1381, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'libs/server/nest/transaction/src/lib/transaction.service.ts:13',
        { _index: 1378, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'libs/server/nest/transaction/src/lib/transaction.service.ts:9',
        { _index: 1383, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/user.schema.ts',
        { _index: 1584, title: {}, body: { 'interfaces/UserDocument.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.controller.ts',
        {
          _index: 1180,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'libs/server/nest/users/src/lib/users.controller.ts:23',
        { _index: 1608, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.controller.ts:31',
        { _index: 1614, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.controller.ts:39',
        { _index: 1606, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.controller.ts:47',
        { _index: 1617, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.controller.ts:55',
        { _index: 1611, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.module.ts',
        { _index: 1622, title: {}, body: { 'modules/UsersModule.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.repository.ts',
        { _index: 1594, title: {}, body: { 'classes/UserRepository.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.repository.ts:7',
        { _index: 1595, title: {}, body: { 'classes/UserRepository.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.service.ts',
        { _index: 1626, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.service.ts:12',
        { _index: 1628, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.service.ts:19',
        { _index: 1631, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.service.ts:23',
        { _index: 1633, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.service.ts:27',
        { _index: 1630, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.service.ts:31',
        { _index: 1634, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'libs/server/nest/users/src/lib/users.service.ts:35',
        { _index: 1632, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'libs/server/nest/utils/src/lib/fire',
        { _index: 1822, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'libs/server/nest/validation/src/lib/validation.controller.ts',
        { _index: 1653, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'libs/server/nest/validation/src/lib/validation.controller.ts:24',
        { _index: 1658, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'libs/server/nest/validation/src/lib/validation.module.ts',
        { _index: 1682, title: {}, body: { 'modules/ValidationModule.html': {} } },
      ],
      [
        'libs/server/nest/validation/src/lib/validation.service.ts',
        { _index: 1684, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'libs/server/nest/validation/src/lib/validation.service.ts:28',
        { _index: 1697, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'libs/server/nest/validation/src/lib/validation.service.ts:38',
        { _index: 1703, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'libs/server/nest/validation/src/lib/validation.service.ts:48',
        { _index: 1692, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'libs/server/nest/validation/src/lib/validation.service.ts:57',
        { _index: 1699, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'libs/server/nest/validation/src/lib/validation.service.ts:67',
        { _index: 1701, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'libs/server/nest/validation/src/lib/validation.service.ts:9',
        { _index: 1694, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'libs/shared/api',
        {
          _index: 94,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'libs/shared/call/src/lib/index.ts',
        { _index: 280, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      [
        'libs/shared/consts/src/lib/charttype.const.ts',
        { _index: 2030, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/consts/src/lib/contenttype.const.ts',
        { _index: 2032, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/consts/src/lib/httpaction.const.ts',
        { _index: 2050, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/consts/src/lib/httpmethod.const.ts',
        { _index: 2051, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/consts/src/lib/notificationtype.const.ts',
        { _index: 2055, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/consts/src/lib/quota.const.ts',
        { _index: 2058, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/consts/src/lib/translationkeys.const.ts',
        { _index: 2065, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/consts/src/lib/userrole.const.ts',
        { _index: 2071, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/dtos/src/lib/dtos/abort',
        { _index: 1371, title: {}, body: { 'classes/TransactionRequestDto.html': {} } },
      ],
      [
        'libs/shared/dtos/src/lib/dtos/delete',
        {
          _index: 809,
          title: {},
          body: {
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'libs/shared/dtos/src/lib/dtos/i18n',
        { _index: 997, title: {}, body: { 'classes/I18nStreamDto.html': {} } },
      ],
      [
        'libs/shared/dtos/src/lib/dtos/render',
        { _index: 1097, title: {}, body: { 'classes/RenderChartConfigRequestDto.html': {} } },
      ],
      [
        'libs/shared/dtos/src/lib/dtos/upload',
        {
          _index: 1511,
          title: {},
          body: {
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'libs/shared/dtos/src/lib/dtos/user.dto.ts',
        {
          _index: 572,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'libs/shared/dtos/src/lib/dtos/validate',
        {
          _index: 1646,
          title: {},
          body: {
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'libs/shared/dtos/src/lib/utils.ts',
        { _index: 1820, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'libs/shared/schemas/src/lib/internal/userattributes.schema.ts',
        { _index: 2067, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/schemas/src/lib/internal/usercustomclaims.schema.ts',
        { _index: 2068, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/schemas/src/lib/internal/userquota.schema.ts',
        { _index: 2070, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/schemas/src/lib/internal/userroles.schema.ts',
        { _index: 2072, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/schemas/src/lib/resources/index.ts',
        { _index: 2061, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/types/src/lib/types/authrequest.type.ts',
        { _index: 199, title: {}, body: { 'interfaces/AuthRequest.html': {} } },
      ],
      [
        'libs/shared/types/src/lib/types/authresponse.type.ts',
        { _index: 209, title: {}, body: { 'interfaces/AuthResponse.html': {} } },
      ],
      [
        'libs/shared/types/src/lib/types/chart.type.ts',
        { _index: 2029, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/types/src/lib/types/chartdata.type.ts',
        { _index: 2023, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/types/src/lib/types/datafile.type.ts',
        { _index: 2034, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/types/src/lib/types/fieldspec.type.ts',
        { _index: 2036, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/types/src/lib/types/render.type.ts',
        {
          _index: 1067,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'libs/shared/types/src/lib/types/resourceendpoint.type.ts',
        { _index: 2059, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/types/src/lib/types/uploadfileschemaoptions.type.ts',
        { _index: 1515, title: {}, body: { 'interfaces/UploadFileSchemaOptions.html': {} } },
      ],
      [
        'libs/shared/types/src/lib/types/user.type.ts',
        { _index: 2066, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/types/src/lib/types/usernotification.type.ts',
        { _index: 2069, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/shared/utils/src/lib/ischartdata.ts',
        { _index: 1824, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'libs/web/env/src/lib/firebase',
        { _index: 2048, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/web/env/src/lib/index.ts',
        { _index: 2057, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/web/features/change',
        {
          _index: 328,
          title: {},
          body: { 'interfaces/ChangeLanguageProps.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'libs/web/features/signup/src/lib/index.tsx',
        { _index: 1234, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'libs/web/features/signup/src/lib/schema.ts',
        {
          _index: 1204,
          title: {},
          body: { 'interfaces/SignUpFormSpecs.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'libs/web/features/upload',
        {
          _index: 1524,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'libs/web/firebase/src/lib/index.ts',
        { _index: 930, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'libs/web/firebase/src/lib/index.ts:10',
        { _index: 941, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'libs/web/firebase/src/lib/index.ts:11',
        { _index: 936, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'libs/web/firebase/src/lib/index.ts:29',
        { _index: 943, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'libs/web/firebase/src/lib/index.ts:37',
        { _index: 942, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'libs/web/firebase/src/lib/index.ts:7',
        { _index: 940, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'libs/web/firebase/src/lib/index.ts:8',
        { _index: 938, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'libs/web/firebase/src/lib/index.ts:9',
        { _index: 939, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'libs/web/hooks/src/lib/usehookform.hook.ts',
        { _index: 1545, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      [
        'libs/web/hooks/src/lib/usejwt.hook.ts',
        { _index: 2052, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'libs/web/hooks/src/lib/usejwtclaims.hook.ts',
        { _index: 1045, title: {}, body: { 'interfaces/JwtCustomClaims.html': {} } },
      ],
      [
        'libs/web/hooks/src/lib/usereactmutation.hook.ts',
        { _index: 1569, title: {}, body: { 'interfaces/UseReactMutation.html': {} } },
      ],
      [
        'libs/web/hooks/src/lib/useroutes.hook.ts',
        { _index: 155, title: {}, body: { 'interfaces/AppRoutes.html': {} } },
      ],
      [
        'libs/web/hooks/src/lib/useroutes.hook.ts:6',
        { _index: 159, title: {}, body: { 'interfaces/AppRoutes.html': {} } },
      ],
      [
        'libs/web/ui/button/src/lib/types.ts',
        {
          _index: 1405,
          title: {},
          body: { 'interfaces/UiButtonProps.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'libs/web/ui/card/src/lib/index.tsx',
        { _index: 1418, title: {}, body: { 'interfaces/UiCardProps.html': {} } },
      ],
      [
        'libs/web/ui/header/src/lib/types.ts',
        { _index: 1454, title: {}, body: { 'interfaces/UiHeaderProps.html': {} } },
      ],
      [
        'libs/web/ui/spinner',
        {
          _index: 1310,
          title: {},
          body: { 'interfaces/SpinnerButtonProps.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'libs/web/ui/toast/src/lib/index.tsx',
        {
          _index: 1316,
          title: {},
          body: { 'interfaces/ToastMessageProps.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'libs/web/ui/toolbar/src/lib/index.tsx',
        { _index: 1319, title: {}, body: { 'interfaces/ToolbarProps.html': {} } },
      ],
      ['license', { _index: 1950, title: {}, body: { 'properties.html': {} } }],
      [
        'line',
        {
          _index: 408,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'controllers/DatafilesController.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UserDocument.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      ['linear', { _index: 431, title: {}, body: { 'injectables/ChartConfigService.html': {} } }],
      [
        'linechartdataset',
        {
          _index: 407,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'linechartdatatype',
        { _index: 1988, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['link', { _index: 456, title: {}, body: { 'injectables/ChartConfigService.html': {} } }],
      [
        'links',
        {
          _index: 460,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'interfaces/UiHeaderProps.html': {} },
        },
      ],
      [
        'list',
        {
          _index: 582,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'list${resourcename}s',
        {
          _index: 589,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'literal',
        {
          _index: 158,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/UiHeaderProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['lng', { _index: 985, title: {}, body: { 'controllers/I18nStreamController.html': {} } }],
      [
        'loading',
        {
          _index: 189,
          title: {},
          body: { 'interfaces/AppRoutes.html': {}, 'interfaces/ChartPreviewProps.html': {} },
        },
      ],
      ['local', { _index: 2039, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['localhost', { _index: 969, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'logger',
        {
          _index: 35,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'injectables/TransactionService.html': {},
            'classes/UserRepository.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'logger(datafilescontroller.name',
        { _index: 695, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'logger(firebaseauthmiddleware.name',
        { _index: 888, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'logger(notificationsservice.name',
        { _index: 1061, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'logger(rendercontroller.name',
        { _index: 1116, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'logger(renderservice.name',
        { _index: 1148, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'logger(transactionservice.name',
        { _index: 1380, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'logger(validationcontroller.name',
        { _index: 1662, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      ['logic', { _index: 1925, title: {}, body: { 'index.html': {} } }],
      ['loose', { _index: 1899, title: {}, body: { 'index.html': {} } }],
      ['lts.1', { _index: 1782, title: {}, body: { 'dependencies.html': {} } }],
      ['maintainable', { _index: 1858, title: {}, body: { 'index.html': {} } }],
      ['managing', { _index: 1906, title: {}, body: { 'index.html': {} } }],
      ['manual', { _index: 1299, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['margin', { _index: 1440, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['match', { _index: 1720, title: {}, body: { 'injectables/ValidationService.html': {} } }],
      [
        'matching',
        {
          _index: 30,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'modules/RenderModule.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'modules/ServerNestClusterModule.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['material', { _index: 1737, title: {}, body: { 'dependencies.html': {} } }],
      [
        'material/language',
        { _index: 336, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'material/sentimentverydissatisfied',
        { _index: 465, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'material/shoppingcart',
        { _index: 467, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'max(max_password_length',
        { _index: 1220, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } },
      ],
      [
        'max_file_size',
        { _index: 1471, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'max_file_size_kb',
        { _index: 690, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'max_password_length',
        { _index: 1211, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } },
      ],
      [
        'maxage',
        {
          _index: 1026,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'maxfilesize',
        {
          _index: 1517,
          title: {},
          body: {
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'maxfilesizevalidator',
        { _index: 664, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'maximum',
        { _index: 1518, title: {}, body: { 'interfaces/UploadFileSchemaOptions.html': {} } },
      ],
      ['maxsize', { _index: 702, title: {}, body: { 'controllers/DatafilesController.html': {} } }],
      ['maxwidth', { _index: 1265, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'medialink',
        {
          _index: 406,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'medialinks',
        {
          _index: 399,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'medialinks.push',
        { _index: 455, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'medialinksref',
        { _index: 457, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'medialinksref.set',
        { _index: 459, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      ['menuitem', { _index: 337, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } }],
      [
        'merge',
        {
          _index: 262,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'injectables/ChartConfigService.html': {},
          },
        },
      ],
      [
        'message',
        {
          _index: 211,
          title: {},
          body: {
            'interfaces/AuthResponse.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'controllers/RenderController.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'controllers/TransactionController.html': {},
            'controllers/ValidationController.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'meta',
        {
          _index: 731,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'meta.metadata.uid',
        { _index: 792, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'metadata',
        {
          _index: 405,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'injectables/DatafilesService.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'method',
        {
          _index: 284,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      [
        'methods',
        {
          _index: 36,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'modules/AppModule.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'injectables/I18nStreamService.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        "methods.seterror('root",
        { _index: 1568, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      ['microservice', { _index: 1891, title: {}, body: { 'index.html': {} } }],
      ['middleware', { _index: 149, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'middleware/src/lib/firebase',
        { _index: 881, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['middlewareconsumer', { _index: 139, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'mimetype',
        {
          _index: 1539,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      ['min', { _index: 1340, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      [
        'min(min_password_length',
        { _index: 1218, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } },
      ],
      [
        'min_password_length',
        { _index: 1212, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } },
      ],
      [
        'miscellaneous',
        {
          _index: 1808,
          title: { 'miscellaneous/functions.html': {}, 'miscellaneous/typealiases.html': {} },
          body: { 'miscellaneous/functions.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['mit', { _index: 1951, title: {}, body: { 'properties.html': {} } }],
      [
        'mode',
        {
          _index: 306,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UseHookFormProps.html': {},
          },
        },
      ],
      [
        'model',
        {
          _index: 44,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/UserRepository.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['models', { _index: 628, title: {}, body: { 'modules/DatabaseModule.html': {} } }],
      [
        'module',
        {
          _index: 119,
          title: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
          },
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'interfaces/IFeatureModel.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'modules',
        {
          _index: 121,
          title: { 'modules.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['mongodb', { _index: 1888, title: {}, body: { 'index.html': {} } }],
      [
        'mongoose',
        {
          _index: 26,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'modules/DatabaseModule.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserRepository.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'mongoosemodule',
        {
          _index: 633,
          title: {},
          body: { 'modules/DatabaseModule.html': {}, 'interfaces/IFeatureModel.html': {} },
        },
      ],
      [
        'mongoosemodule.forfeature(models',
        {
          _index: 635,
          title: {},
          body: { 'modules/DatabaseModule.html': {}, 'interfaces/IFeatureModel.html': {} },
        },
      ],
      [
        'mongoosemodule.forrootasync',
        {
          _index: 636,
          title: {},
          body: { 'modules/DatabaseModule.html': {}, 'interfaces/IFeatureModel.html': {} },
        },
      ],
      ['monorepo', { _index: 1830, title: {}, body: { 'index.html': {} } }],
      ['month', { _index: 2041, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'mouseeventhandler',
        {
          _index: 1409,
          title: {},
          body: { 'interfaces/UiButtonProps.html': {}, 'interfaces/UiHeaderProps.html': {} },
        },
      ],
      [
        'mui',
        {
          _index: 1260,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'mui/icons',
        {
          _index: 335,
          title: {},
          body: {
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'mui/material',
        {
          _index: 227,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'mui/material/box',
        { _index: 469, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'mui/material/card',
        { _index: 1422, title: {}, body: { 'interfaces/UiCardProps.html': {} } },
      ],
      [
        'mui/material/menuitem',
        { _index: 338, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'mui/material/select',
        { _index: 340, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'mui/material/styles',
        { _index: 1420, title: {}, body: { 'interfaces/UiCardProps.html': {} } },
      ],
      [
        'mui/material/typography',
        { _index: 1317, title: {}, body: { 'interfaces/ToastMessageProps.html': {} } },
      ],
      ['mui/system', { _index: 1740, title: {}, body: { 'dependencies.html': {} } }],
      ['mui/x', { _index: 1741, title: {}, body: { 'dependencies.html': {} } }],
      ['muiappbar', { _index: 1323, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      [
        'muibuttonprops',
        { _index: 1414, title: {}, body: { 'interfaces/UiButtonProps.html': {} } },
      ],
      ['muitoolbar', { _index: 1325, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      [
        'multer',
        {
          _index: 689,
          title: {},
          body: { 'controllers/DatafilesController.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'multi',
        { _index: 1487, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'multiaxisline',
        {
          _index: 415,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'multipart',
        {
          _index: 1527,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      ['multiple', { _index: 1907, title: {}, body: { 'index.html': {} } }],
      [
        'mutate',
        {
          _index: 1559,
          title: {},
          body: { 'interfaces/UseHookFormProps.html': {}, 'interfaces/UseReactMutation.html': {} },
        },
      ],
      [
        'mutate(data',
        { _index: 1567, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      ['mutation', { _index: 1563, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } }],
      [
        'n',
        {
          _index: 864,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'n\\n',
        {
          _index: 863,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'name',
        {
          _index: 47,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'modules/AppModule.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'needed',
        {
          _index: 1016,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'nest',
        {
          _index: 544,
          title: {},
          body: {
            'injectables/ClusterModule.html': {},
            'modules/ServerNestClusterModule.html': {},
          },
        },
      ],
      ['nest.js', { _index: 1854, title: {}, body: { 'index.html': {} } }],
      [
        'nestjs',
        {
          _index: 575,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'controllers/DatafilesController.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/TransactionController.html': {},
            'classes/TransactionRequestDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/common',
        {
          _index: 73,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'modules/AppModule.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'modules/RenderModule.html': {},
            'injectables/RenderService.html': {},
            'interfaces/ResourceDeleted.html': {},
            'modules/ServerNestClusterModule.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'injectables/TransactionService.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/config',
        {
          _index: 632,
          title: {},
          body: {
            'modules/DatabaseModule.html': {},
            'modules/DatafilesModule.html': {},
            'interfaces/IFeatureModel.html': {},
            'controllers/RenderController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['nestjs/core', { _index: 1747, title: {}, body: { 'dependencies.html': {} } }],
      ['nestjs/mapped', { _index: 1748, title: {}, body: { 'dependencies.html': {} } }],
      ['nestjs/microservices', { _index: 1750, title: {}, body: { 'dependencies.html': {} } }],
      [
        'nestjs/mongoose',
        {
          _index: 23,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'modules/DatabaseModule.html': {},
            'interfaces/IFeatureModel.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/platform',
        {
          _index: 670,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/serve',
        {
          _index: 1015,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/swagger',
        {
          _index: 672,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/I18nStreamController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/UsersController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['nestjs/throttler', { _index: 1754, title: {}, body: { 'dependencies.html': {} } }],
      [
        'nestmiddleware',
        { _index: 890, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['nestmodule', { _index: 143, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['never', { _index: 194, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      [
        'new',
        {
          _index: 78,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'injectables/ChartConfigService.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'controllers/I18nStreamController.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'interfaces/SignUpProps.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'newfilename',
        {
          _index: 707,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'injectables/FilenameService.html': {},
          },
        },
      ],
      [
        'newlanguage',
        { _index: 354, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'next',
        {
          _index: 684,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'interfaces/UserDocument.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'nextfunction',
        { _index: 886, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'nextstep',
        {
          _index: 714,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'no_next_step',
        {
          _index: 1095,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'non',
        {
          _index: 1252,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'dependencies.html': {} },
        },
      ],
      ['nosql', { _index: 1872, title: {}, body: { 'index.html': {} } }],
      [
        'notfoundexception',
        {
          _index: 72,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        "notfoundexception('document",
        { _index: 89, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'notfoundexception(`user',
        { _index: 1395, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'notification',
        {
          _index: 533,
          title: {},
          body: {
            'interfaces/ChartPreviewProps.html': {},
            'injectables/NotificationsService.html': {},
          },
        },
      ],
      [
        'notification.type',
        { _index: 535, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'notifications_collection_path',
        { _index: 1055, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'notificationsquery',
        { _index: 517, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'notificationsref',
        { _index: 515, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'notificationsservice',
        {
          _index: 675,
          title: { 'injectables/NotificationsService.html': {} },
          body: {
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'notificationtype',
        {
          _index: 677,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/ValidationController.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'notificationtype.error',
        { _index: 1677, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'notificationtype.success',
        {
          _index: 723,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'notimplementedexception',
        { _index: 1704, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        "notimplementedexception('cannot",
        { _index: 1712, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      ['now', { _index: 1676, title: {}, body: { 'controllers/ValidationController.html': {} } }],
      [
        'ntua',
        {
          _index: 107,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'modules/RenderModule.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'null',
        {
          _index: 325,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseReactMutation.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'number',
        {
          _index: 290,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'injectables/ClusterModule.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'number(env.vite_public_firestore_emulator_port',
        { _index: 972, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        "number(process.env['api_call_timeout",
        { _index: 300, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      ['nx', { _index: 1842, title: {}, body: { 'index.html': {} } }],
      [
        'object',
        {
          _index: 1083,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'object.keys(chartconfig.options',
        { _index: 419, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'object.keys(customclaims',
        { _index: 917, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'object.keys(headers).length',
        { _index: 1579, title: {}, body: { 'interfaces/UseReactMutation.html': {} } },
      ],
      [
        'object.keys(this.config).length',
        { _index: 951, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'object.values(approutes).map((value',
        { _index: 181, title: {}, body: { 'interfaces/AppRoutes.html': {} } },
      ],
      [
        'object.values(charttype).map((type',
        { _index: 1509, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'omit',
        {
          _index: 50,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'interfaces/UiButtonProps.html': {},
            'classes/UserRepository.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['onblur', { _index: 1549, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } }],
      [
        'onchange',
        {
          _index: 1287,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'interfaces/UseHookFormProps.html': {} },
        },
      ],
      ['onclick', { _index: 1406, title: {}, body: { 'interfaces/UiButtonProps.html': {} } }],
      ['one', { _index: 274, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      ['onerror', { _index: 1293, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['onerror(error', { _index: 1290, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['ongooglesignin', { _index: 1291, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['onsnapshot', { _index: 483, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      [
        'onsnapshot(chartref',
        { _index: 521, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'onsnapshot(notificationsquery',
        { _index: 529, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'onsubmit',
        {
          _index: 1543,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
          },
        },
      ],
      ['ontouched', { _index: 1550, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } }],
      [
        'openapi',
        {
          _index: 577,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/I18nStreamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['openapi3', { _index: 1783, title: {}, body: { 'dependencies.html': {} } }],
      [
        'operation',
        {
          _index: 1071,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      ['option', { _index: 247, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      [
        'optional',
        {
          _index: 48,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'modules/AppModule.html': {},
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'options',
        {
          _index: 51,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'classes/UserRepository.html': {},
          },
        },
      ],
      ['organized', { _index: 1902, title: {}, body: { 'index.html': {} } }],
      [
        'originalfilename',
        { _index: 820, title: {}, body: { 'injectables/FilenameService.html': {} } },
      ],
      [
        'originalfilename}__${fileid}__${charttype}.${fileextension',
        { _index: 824, title: {}, body: { 'injectables/FilenameService.html': {} } },
      ],
      ['os', { _index: 556, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      [
        'out',
        {
          _index: 134,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
      ['outlined', { _index: 1411, title: {}, body: { 'interfaces/UiButtonProps.html': {} } }],
      ['overflow', { _index: 1436, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      ['overview', { _index: 1941, title: { 'overview.html': {} }, body: { 'overview.html': {} } }],
      [
        'owns',
        {
          _index: 1094,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'package',
        {
          _index: 1725,
          title: { 'dependencies.html': {}, 'properties.html': {} },
          body: { 'index.html': {} },
        },
      ],
      ['packages', { _index: 1932, title: {}, body: { 'index.html': {} } }],
      ['packaging', { _index: 1881, title: {}, body: { 'index.html': {} } }],
      [
        'padding',
        {
          _index: 1339,
          title: {},
          body: { 'interfaces/ToolbarProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      ['page', { _index: 171, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      ['pages', { _index: 1991, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'pairs',
        {
          _index: 1541,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'papaparse',
        {
          _index: 769,
          title: {},
          body: {
            'injectables/DatafilesService.html': {},
            'injectables/ValidationService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'param',
        {
          _index: 987,
          title: {},
          body: {
            'controllers/I18nStreamController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'parameters',
        {
          _index: 46,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'modules/AppModule.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'injectables/I18nStreamService.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'parse',
        {
          _index: 768,
          title: {},
          body: { 'injectables/DatafilesService.html': {}, 'injectables/FilenameService.html': {} },
        },
      ],
      [
        'parse(filebuffer.tostring',
        { _index: 798, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'parse(filename).name',
        { _index: 821, title: {}, body: { 'injectables/FilenameService.html': {} } },
      ],
      ['parsecsv', { _index: 745, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      [
        'parsecsv(filebuffer',
        { _index: 752, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'parsedfile',
        {
          _index: 797,
          title: {},
          body: {
            'injectables/DatafilesService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'parsedfile.errors',
        { _index: 804, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'parsedfile.errors.length',
        { _index: 801, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      ['parsedtoken', { _index: 1046, title: {}, body: { 'interfaces/JwtCustomClaims.html': {} } }],
      [
        'parsefilepipe',
        { _index: 663, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'parseresult',
        { _index: 1691, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'partial',
        {
          _index: 203,
          title: {},
          body: {
            'interfaces/AuthRequest.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      [
        'password',
        {
          _index: 1223,
          title: {},
          body: {
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'passwordrepeat',
        { _index: 1226, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } },
      ],
      [
        'patch',
        {
          _index: 609,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "patch(':id",
        {
          _index: 1191,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        "patch(':id')@apicreatedresponse({type",
        { _index: 1616, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'path',
        {
          _index: 170,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      [
        'pdf',
        {
          _index: 1078,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'permissions',
        { _index: 902, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['pickers', { _index: 1744, title: {}, body: { 'dependencies.html': {} } }],
      ['pid', { _index: 562, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      ['platform', { _index: 1879, title: {}, body: { 'index.html': {} } }],
      ['plugins', { _index: 410, title: {}, body: { 'injectables/ChartConfigService.html': {} } }],
      [
        'png',
        {
          _index: 1079,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      ['png|svg|pdf|html', { _index: 1839, title: {}, body: { 'index.html': {} } }],
      ['pnpm', { _index: 1934, title: {}, body: { 'index.html': {} } }],
      [
        'polar',
        {
          _index: 1489,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'polararea',
        {
          _index: 1476,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'polarareachartdatatype',
        { _index: 1993, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['popular', { _index: 1889, title: {}, body: { 'index.html': {} } }],
      ['position', { _index: 432, title: {}, body: { 'injectables/ChartConfigService.html': {} } }],
      [
        'post',
        {
          _index: 608,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'controllers/RenderController.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'controllers/TransactionController.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/UsersController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        "post('abort",
        { _index: 1363, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        "post('abort')@usepipes(zodvalidationpipe)@httpcode(200",
        { _index: 1348, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        "post('render",
        { _index: 1104, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        "post('validate",
        { _index: 1656, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        "post('verify",
        { _index: 1356, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        "post('verify')@usepipes(zodvalidationpipe)@httpcode(200",
        { _index: 1351, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'post()@apicreatedresponse({type',
        { _index: 1605, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        "post()@usepipes(zodvalidationpipe)@useinterceptors(undefined)@apiconsumes('multipart/form",
        { _index: 657, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      ['powerful', { _index: 1852, title: {}, body: { 'index.html': {} } }],
      [
        'prefix',
        {
          _index: 644,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/I18nStreamController.html': {},
            'controllers/RenderController.html': {},
            'controllers/TransactionController.html': {},
            'controllers/UsersController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'prettier',
        {
          _index: 613,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      [
        'prev',
        { _index: 1502, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'preview',
        { _index: 1675, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      ['primary', { _index: 2027, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'private',
        {
          _index: 96,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/I18nStreamService.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      ['process', { _index: 561, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      [
        'process.env.gcloud_project',
        {
          _index: 875,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        "process.env['sdk_api_key",
        {
          _index: 114,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/CallOptions.html': {},
          },
        },
      ],
      [
        "process.env['sdk_sandbox_mode",
        {
          _index: 117,
          title: {},
          body: { 'classes/ApiSDK.html': {}, 'interfaces/ApiSDKConfig.html': {} },
        },
      ],
      [
        "process.env['sdk_sandox_mode",
        { _index: 304, title: {}, body: { 'interfaces/CallOptions.html': {} } },
      ],
      ['process.pid', { _index: 563, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      [
        'process.stdout.write(`killing',
        { _index: 565, title: {}, body: { 'injectables/ClusterModule.html': {} } },
      ],
      [
        'process.stdout.write(`main',
        { _index: 560, title: {}, body: { 'injectables/ClusterModule.html': {} } },
      ],
      ['processenv', { _index: 1994, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['processing', { _index: 1917, title: {}, body: { 'index.html': {} } }],
      [
        'progress',
        { _index: 728, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      ['project', { _index: 1831, title: {}, body: { 'index.html': {} } }],
      [
        'projectid',
        {
          _index: 830,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'classes/FirebaseWeb.html': {},
          },
        },
      ],
      [
        'projectid}.appspot.com',
        {
          _index: 868,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      ['projects', { _index: 1908, title: {}, body: { 'index.html': {} } }],
      [
        'promise',
        {
          _index: 57,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'promise((resolve',
        {
          _index: 781,
          title: {},
          body: { 'injectables/DatafilesService.html': {}, 'injectables/RenderService.html': {} },
        },
      ],
      [
        'promise.all',
        { _index: 1130, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      ['prop', { _index: 21, title: {}, body: { 'classes/AbstractDocument.html': {} } }],
      ['prop({type', { _index: 15, title: {}, body: { 'classes/AbstractDocument.html': {} } }],
      [
        'properties',
        {
          _index: 8,
          title: { 'properties.html': {} },
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'injectables/DatafilesService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'classes/UserRepository.html': {},
            'injectables/UsersService.html': {},
            'properties.html': {},
          },
        },
      ],
      [
        'protected',
        {
          _index: 33,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'provide',
        {
          _index: 1029,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'index.html': {},
          },
        },
      ],
      ['provided', { _index: 1869, title: {}, body: { 'index.html': {} } }],
      [
        'providers',
        {
          _index: 126,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
      ['provides', { _index: 1903, title: {}, body: { 'index.html': {} } }],
      [
        'public',
        {
          _index: 774,
          title: {},
          body: {
            'injectables/DatafilesService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      ['purchase', { _index: 264, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      [
        'query',
        {
          _index: 484,
          title: {},
          body: {
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'query(notificationsref',
        { _index: 518, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'quota',
        {
          _index: 259,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'injectables/TransactionService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'quota.creditsperchart',
        { _index: 1398, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'radar',
        {
          _index: 1477,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'radarchartdatatype',
        { _index: 1996, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'radio',
        {
          _index: 225,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'radiogroup',
        {
          _index: 226,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
          },
        },
      ],
      ['randomuuid', { _index: 817, title: {}, body: { 'injectables/FilenameService.html': {} } }],
      ['range', { _index: 2042, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'react',
        {
          _index: 161,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'react.changeevent',
        { _index: 250, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'react.dispatch',
        { _index: 219, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'react.fc',
        {
          _index: 176,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
          },
        },
      ],
      [
        'react.formevent',
        { _index: 253, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'react.reactnode',
        {
          _index: 1321,
          title: {},
          body: {
            'interfaces/ToolbarProps.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
          },
        },
      ],
      [
        'react.setstateaction',
        { _index: 1491, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'readonly',
        {
          _index: 34,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/AppRoutes.html': {},
            'injectables/ChartConfigService.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'controllers/I18nStreamController.html': {},
            'injectables/I18nStreamService.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'readstream',
        { _index: 1037, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      [
        'reasons',
        {
          _index: 1017,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'record',
        {
          _index: 311,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'modules/DatabaseModule.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/UserDocument.html': {},
          },
        },
      ],
      ['redirect', { _index: 167, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      ['redirectto', { _index: 184, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      ['refine', { _index: 1227, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } }],
      ['reflect', { _index: 1801, title: {}, body: { 'dependencies.html': {} } }],
      [
        'reject',
        {
          _index: 782,
          title: {},
          body: { 'injectables/DatafilesService.html': {}, 'injectables/RenderService.html': {} },
        },
      ],
      ['reject(error', { _index: 1176, title: {}, body: { 'injectables/RenderService.html': {} } }],
      ['reject(new', { _index: 787, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      ['related', { _index: 1890, title: {}, body: { 'index.html': {} } }],
      [
        'remove',
        {
          _index: 611,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        "remove(@param('id",
        {
          _index: 1195,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'remove(id',
        {
          _index: 1609,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      ['remove_body', { _index: 307, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        'removecreditsandclaimchart',
        { _index: 1376, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'removecreditsandclaimchart(uid',
        { _index: 1377, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'render',
        {
          _index: 537,
          title: { 'interfaces/Render.html': {} },
          body: {
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
          },
        },
      ],
      [
        'render(undefined',
        { _index: 1146, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'render.buffer',
        { _index: 1169, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'render.constants',
        {
          _index: 1111,
          title: {},
          body: { 'controllers/RenderController.html': {}, 'injectables/RenderService.html': {} },
        },
      ],
      ['render.controller', { _index: 1144, title: {}, body: { 'modules/RenderModule.html': {} } }],
      [
        'render.service',
        {
          _index: 1113,
          title: {},
          body: { 'controllers/RenderController.html': {}, 'modules/RenderModule.html': {} },
        },
      ],
      [
        'renderchartconfig',
        { _index: 1102, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'renderchartconfig(@body',
        { _index: 1117, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'renderchartconfig(body',
        { _index: 1103, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'renderchartconfigrequestdto',
        {
          _index: 1096,
          title: { 'classes/RenderChartConfigRequestDto.html': {} },
          body: {
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
          },
        },
      ],
      [
        'rendercontroller',
        {
          _index: 1100,
          title: { 'controllers/RenderController.html': {} },
          body: { 'controllers/RenderController.html': {}, 'modules/RenderModule.html': {} },
        },
      ],
      [
        'rendered',
        {
          _index: 1073,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'rendering',
        {
          _index: 1070,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'rendermapperconfig',
        {
          _index: 1110,
          title: {},
          body: { 'controllers/RenderController.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'rendermapperconfig.map',
        { _index: 1126, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'rendermetadata',
        {
          _index: 1093,
          title: { 'interfaces/RenderMetadata.html': {} },
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'rendermodule',
        {
          _index: 1140,
          title: { 'modules/RenderModule.html': {} },
          body: { 'modules/RenderModule.html': {}, 'modules.html': {}, 'overview.html': {} },
        },
      ],
      [
        'renderparams',
        {
          _index: 1082,
          title: { 'interfaces/RenderParams.html': {} },
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        "renderparams['options']['contenttype",
        {
          _index: 1091,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'renderparamsarray',
        { _index: 1124, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'renderparamsarray.map((params',
        { _index: 1131, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      ['renders', { _index: 1129, title: {}, body: { 'controllers/RenderController.html': {} } }],
      [
        'renders.map',
        { _index: 1133, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'renderservice',
        {
          _index: 1112,
          title: { 'injectables/RenderService.html': {} },
          body: {
            'controllers/RenderController.html': {},
            'modules/RenderModule.html': {},
            'injectables/RenderService.html': {},
            'overview.html': {},
          },
        },
      ],
      ['rendertype', { _index: 1157, title: {}, body: { 'injectables/RenderService.html': {} } }],
      [
        'represents',
        {
          _index: 1068,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'repsponsible',
        {
          _index: 1537,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'req',
        {
          _index: 650,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'controllers/TransactionController.html': {},
          },
        },
      ],
      [
        'req.headers.authorization',
        { _index: 906, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'req.user',
        {
          _index: 705,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/TransactionController.html': {},
          },
        },
      ],
      [
        'req.user.uid',
        {
          _index: 735,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/TransactionController.html': {},
          },
        },
      ],
      [
        "req['customclaims",
        { _index: 916, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        "req['user",
        { _index: 914, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'request',
        {
          _index: 201,
          title: {},
          body: { 'interfaces/AuthRequest.html': {}, 'interfaces/AuthResponse.html': {} },
        },
      ],
      [
        'requestconfig',
        { _index: 1578, title: {}, body: { 'interfaces/UseReactMutation.html': {} } },
      ],
      [
        'required',
        {
          _index: 1081,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'res',
        {
          _index: 316,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/UseReactMutation.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'res.$isdeleted',
        { _index: 1644, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      ['res.data', { _index: 318, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      ['res?.data', { _index: 1581, title: {}, body: { 'interfaces/UseReactMutation.html': {} } }],
      [
        'reset',
        {
          _index: 133,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'resolution',
        {
          _index: 1088,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
          },
        },
      ],
      [
        'resolve(buffer.concat(chunks',
        { _index: 790, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'resolve(render',
        { _index: 1175, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'resolver',
        {
          _index: 1284,
          title: {},
          body: {
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UseHookFormProps.html': {},
          },
        },
      ],
      [
        'resource',
        {
          _index: 618,
          title: { 'interfaces/Resource.html': {} },
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'resourcedeleted',
        {
          _index: 1179,
          title: { 'interfaces/ResourceDeleted.html': {} },
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'resourceendpoint',
        { _index: 1997, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'resourcegen',
        {
          _index: 621,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      [
        'resourcegenconfig',
        {
          _index: 620,
          title: { 'interfaces/ResourceGenConfig.html': {} },
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      [
        'resourcename',
        {
          _index: 580,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'resourcename}s',
        {
          _index: 590,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'resourcepath',
        {
          _index: 578,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'resourcepath}/${id',
        {
          _index: 616,
          title: {},
          body: {
            'interfaces/CrudResourceGenConfig.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
          },
        },
      ],
      [
        'resourcesschemas',
        {
          _index: 579,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'resourcesschemas[resourcepath[resourcepath',
        {
          _index: 583,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'response',
        {
          _index: 210,
          title: {},
          body: {
            'interfaces/AuthResponse.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/UseHookFormProps.html': {},
          },
        },
      ],
      ['responsible', { _index: 1915, title: {}, body: { 'index.html': {} } }],
      [
        'responsive',
        { _index: 409, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      ['rest', { _index: 1452, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        'result',
        {
          _index: 1069,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'results',
        {
          _index: 29,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'modules/RenderModule.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'modules/ServerNestClusterModule.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'retrieve',
        {
          _index: 581,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        "retrieve(@param('id",
        {
          _index: 1187,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'retrieve(id',
        {
          _index: 1612,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'return',
        {
          _index: 80,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'returns',
        {
          _index: 56,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'modules/AppModule.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      ['right', { _index: 433, title: {}, body: { 'injectables/ChartConfigService.html': {} } }],
      ['rn', { _index: 192, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      [
        'root_path',
        {
          _index: 1020,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'rootpath',
        {
          _index: 1019,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
          },
        },
      ],
      ['routeobject', { _index: 166, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      [
        'router',
        {
          _index: 168,
          title: {},
          body: { 'interfaces/AppRoutes.html': {}, 'dependencies.html': {} },
        },
      ],
      ['routes', { _index: 180, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      ['run', { _index: 1884, title: {}, body: { 'index.html': {} } }],
      ['rxjs', { _index: 1803, title: {}, body: { 'dependencies.html': {} } }],
      [
        'saas',
        {
          _index: 108,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'modules/RenderModule.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
            'index.html': {},
          },
        },
      ],
      ['sandbox', { _index: 305, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        'savechartconfig',
        { _index: 371, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'savechartconfig(uid',
        { _index: 385, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'savechartsmedialinks',
        { _index: 372, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'savechartsmedialinks(uploadsmetadata',
        { _index: 388, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      ['saved', { _index: 446, title: {}, body: { 'injectables/ChartConfigService.html': {} } }],
      [
        'savenotificationtofirestore',
        { _index: 1056, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'savenotificationtofirestore(uid',
        { _index: 1057, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'saveoptions',
        {
          _index: 52,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      ['scalability', { _index: 1901, title: {}, body: { 'index.html': {} } }],
      ['scalable', { _index: 1857, title: {}, body: { 'index.html': {} } }],
      [
        'scatter',
        {
          _index: 1478,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'scatterchartdatatype',
        { _index: 1999, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'scheduled',
        {
          _index: 1139,
          title: {},
          body: {
            'controllers/RenderController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'schema',
        {
          _index: 22,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'modules/DatabaseModule.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UserDocument.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'schemas',
        {
          _index: 205,
          title: {},
          body: {
            'interfaces/AuthRequest.html': {},
            'classes/CreateUserDto.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/I18nStreamDto.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'classes/TransactionRequestDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'classes/UserDto.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'schemas.resourcesschemas.renders.create',
        { _index: 1099, title: {}, body: { 'classes/RenderChartConfigRequestDto.html': {} } },
      ],
      [
        'schemas.servicesschemas',
        { _index: 1000, title: {}, body: { 'classes/I18nStreamDto.html': {} } },
      ],
      [
        'schemas.servicesschemas.transactionschema',
        { _index: 1373, title: {}, body: { 'classes/TransactionRequestDto.html': {} } },
      ],
      ['schematypes', { _index: 24, title: {}, body: { 'classes/AbstractDocument.html': {} } }],
      [
        'schematypes.objectid',
        { _index: 28, title: {}, body: { 'classes/AbstractDocument.html': {} } },
      ],
      ['sdk', { _index: 303, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        'sdk/src/lib/index.ts',
        {
          _index: 95,
          title: {},
          body: { 'classes/ApiSDK.html': {}, 'interfaces/ApiSDKConfig.html': {} },
        },
      ],
      ['sdk/src/lib/index.ts:20', { _index: 105, title: {}, body: { 'classes/ApiSDK.html': {} } }],
      ['sdk/src/lib/index.ts:8', { _index: 102, title: {}, body: { 'classes/ApiSDK.html': {} } }],
      ['search', { _index: 2043, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'see',
        {
          _index: 1529,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'select',
        {
          _index: 273,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
          },
        },
      ],
      [
        'selectchangeevent',
        { _index: 339, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      ['selected', { _index: 245, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      [
        'selectedlanguage',
        { _index: 350, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'selectedoption',
        { _index: 242, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      ['selection', { _index: 497, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      [
        'sentimentverydissatisfiedicon',
        { _index: 464, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      ['serve', { _index: 1935, title: {}, body: { 'index.html': {} } }],
      [
        'server',
        {
          _index: 1201,
          title: {},
          body: { 'modules/ServerNestClusterModule.html': {}, 'index.html': {} },
        },
      ],
      ['serverless', { _index: 1874, title: {}, body: { 'index.html': {} } }],
      [
        'servernestclustermodule',
        {
          _index: 1197,
          title: { 'modules/ServerNestClusterModule.html': {} },
          body: {
            'modules/ServerNestClusterModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'servestaticmodule',
        {
          _index: 1014,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'servestaticmodule.forroot',
        {
          _index: 1021,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'servestaticoptions',
        {
          _index: 1022,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'service/src/main.ts',
        { _index: 1817, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      ['servicepaths', { _index: 2000, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'services',
        {
          _index: 1868,
          title: {},
          body: { 'index.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['set', { _index: 954, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'setactivestep',
        { _index: 1463, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'setactivestep((prev',
        { _index: 1501, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'setchartconfig',
        { _index: 495, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'setchartconfig(configdata.chartconfig',
        { _index: 526, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'setchartconfig(null',
        { _index: 527, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      ['setdoc', { _index: 230, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      [
        'seterrormessage',
        { _index: 502, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        "seterrormessage('your",
        { _index: 510, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'seterrormessage(notification.data.message',
        { _index: 536, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'setfileid',
        { _index: 1464, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'setfileid(wizardref.current?.fileid',
        { _index: 1503, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'setjwtclaims',
        { _index: 1050, title: {}, body: { 'interfaces/JwtCustomClaims.html': {} } },
      ],
      [
        'setjwtclaims(null',
        { _index: 1053, title: {}, body: { 'interfaces/JwtCustomClaims.html': {} } },
      ],
      [
        'setjwtclaims(tokenresult.claims',
        { _index: 1052, title: {}, body: { 'interfaces/JwtCustomClaims.html': {} } },
      ],
      ['setloading', { _index: 499, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      [
        'setloading(false',
        { _index: 513, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'setloading(true',
        { _index: 506, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'setopendialog',
        { _index: 217, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'setopendialog(false',
        { _index: 267, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'setselectedlanguage',
        { _index: 351, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'setselectedlanguage(newlanguage',
        { _index: 356, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'setselectedoption',
        { _index: 243, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'setselectedoption(event.target.value',
        { _index: 251, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'setselection',
        { _index: 498, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'setselection(action',
        { _index: 505, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      ['shared', { _index: 1928, title: {}, body: { 'index.html': {} } }],
      [
        'shoppingcarticon',
        { _index: 466, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      ['side', { _index: 1859, title: {}, body: { 'index.html': {} } }],
      ['signal}\\n', { _index: 569, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      ['signinwithpopup', { _index: 1248, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'signinwithpopup(auth',
        { _index: 1292, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      ['signup', { _index: 1277, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['signupform', { _index: 1302, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'signupformdata',
        {
          _index: 1207,
          title: {},
          body: {
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'signupformfields',
        {
          _index: 1230,
          title: {},
          body: { 'interfaces/SignUpFormSpecs.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'signupformschema',
        { _index: 1278, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'signupformspecs',
        {
          _index: 1203,
          title: { 'interfaces/SignUpFormSpecs.html': {} },
          body: { 'interfaces/SignUpFormSpecs.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        'signupprops',
        {
          _index: 1233,
          title: { 'interfaces/SignUpProps.html': {} },
          body: { 'interfaces/SignUpProps.html': {} },
        },
      ],
      ['signupwithemail', { _index: 1288, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['simondotm/nx', { _index: 1756, title: {}, body: { 'dependencies.html': {} } }],
      [
        'size',
        { _index: 1519, title: {}, body: { 'interfaces/UploadFileSchemaOptions.html': {} } },
      ],
      ['snapshot', { _index: 522, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      [
        'snapshot.data',
        { _index: 525, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'snapshot.docchanges().foreach((change',
        { _index: 530, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'snapshot.exists',
        { _index: 523, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'solid',
        {
          _index: 1335,
          title: {},
          body: { 'interfaces/ToolbarProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      [
        'source',
        {
          _index: 4,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'modules/DatafilesModule.html': {},
            'injectables/DatafilesService.html': {},
            'classes/DeleteDatafileRequestDto.html': {},
            'classes/DeleteDatafileResponseDto.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'classes/I18nStreamDto.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'classes/RenderChartConfigRequestDto.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'modules/RenderModule.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'modules/ServerNestClusterModule.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'classes/TransactionRequestDto.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'specified',
        { _index: 1714, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      ['specs/signup', { _index: 1283, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'spinner',
        {
          _index: 474,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        'spinnerbuttonprops',
        {
          _index: 1309,
          title: { 'interfaces/SpinnerButtonProps.html': {} },
          body: { 'interfaces/SpinnerButtonProps.html': {} },
        },
      ],
      ['src', { _index: 1457, title: {}, body: { 'interfaces/UiHeaderProps.html': {} } }],
      [
        'stack',
        {
          _index: 1238,
          title: {},
          body: {
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
          },
        },
      ],
      ['standardized', { _index: 1882, title: {}, body: { 'index.html': {} } }],
      ['started', { _index: 1829, title: { 'index.html': {} }, body: {} }],
      ['state', { _index: 244, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } }],
      [
        'static',
        {
          _index: 546,
          title: {},
          body: {
            'injectables/ClusterModule.html': {},
            'modules/DatabaseModule.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'interfaces/IFeatureModel.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'statics',
        {
          _index: 1253,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'status',
        {
          _index: 186,
          title: {},
          body: { 'interfaces/AppRoutes.html': {}, 'interfaces/CallOptions.html': {} },
        },
      ],
      [
        'statuscode',
        {
          _index: 729,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/RenderController.html': {},
            'controllers/TransactionController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'stepper',
        { _index: 1474, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'stepperactions',
        {
          _index: 1473,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'storage',
        {
          _index: 743,
          title: {},
          body: {
            'injectables/DatafilesService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'storagebucket',
        {
          _index: 867,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'storagepaths',
        {
          _index: 681,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/RenderController.html': {},
          },
        },
      ],
      [
        'storagepaths.files_destination',
        { _index: 697, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'storagepaths.renders_destination',
        { _index: 1135, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      ['stream', { _index: 777, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      [
        'stream.controller',
        {
          _index: 1013,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'stream.controller.ts',
        { _index: 980, title: {}, body: { 'controllers/I18nStreamController.html': {} } },
      ],
      [
        'stream.controller.ts:16',
        { _index: 984, title: {}, body: { 'controllers/I18nStreamController.html': {} } },
      ],
      ['stream.dto.ts', { _index: 998, title: {}, body: { 'classes/I18nStreamDto.html': {} } }],
      [
        'stream.module.ts',
        {
          _index: 1007,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'stream.module.ts:23',
        { _index: 1011, title: {}, body: { 'modules/I18nStreamModule.html': {} } },
      ],
      [
        "stream.on('data",
        { _index: 783, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        "stream.on('end",
        { _index: 789, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        "stream.on('error",
        { _index: 786, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'stream.service',
        {
          _index: 989,
          title: {},
          body: {
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      [
        'stream.service.ts',
        { _index: 1031, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      [
        'stream.service.ts:13',
        { _index: 1036, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      [
        'stream.service.ts:7',
        { _index: 1034, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      [
        'stream/src/lib/i18n',
        {
          _index: 979,
          title: {},
          body: {
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
          },
        },
      ],
      [
        'streamablefile',
        { _index: 986, title: {}, body: { 'controllers/I18nStreamController.html': {} } },
      ],
      [
        'streamablefile(this.i18nstreamservice.getstream(`${lng}.json',
        { _index: 996, title: {}, body: { 'controllers/I18nStreamController.html': {} } },
      ],
      [
        'streamfromstorage',
        { _index: 746, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'streamfromstorage(name',
        { _index: 756, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      ['strict', { _index: 1589, title: {}, body: { 'interfaces/UserDocument.html': {} } }],
      [
        'string',
        {
          _index: 103,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'classes/FirebaseWeb.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'styled',
        {
          _index: 332,
          title: {},
          body: {
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'interfaces/UiCardProps.html': {},
          },
        },
      ],
      ['styled(card', { _index: 1424, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        'styled(muiappbar',
        { _index: 1327, title: {}, body: { 'interfaces/ToolbarProps.html': {} } },
      ],
      [
        'styled(muitoolbar',
        { _index: 1338, title: {}, body: { 'interfaces/ToolbarProps.html': {} } },
      ],
      [
        'styled(select)(styles',
        { _index: 347, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      ['styled(uicard', { _index: 1264, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['styled.div', { _index: 1268, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['styledappbar', { _index: 1326, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      ['styledcard', { _index: 1423, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        'styledselect',
        { _index: 346, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      ['styledtoolbar', { _index: 1337, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      ['styleduicard', { _index: 1263, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ['styles', { _index: 345, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } }],
      ['submit', { _index: 2044, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['submitfn', { _index: 1566, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } }],
      [
        'success',
        {
          _index: 266,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'successful',
        {
          _index: 265,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'successfully',
        {
          _index: 726,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/TransactionController.html': {},
          },
        },
      ],
      ['such', { _index: 1926, title: {}, body: { 'index.html': {} } }],
      ['suite', { _index: 1865, title: {}, body: { 'index.html': {} } }],
      ['super(model', { _index: 1603, title: {}, body: { 'classes/UserRepository.html': {} } }],
      ['support', { _index: 1851, title: {}, body: { 'index.html': {}, 'modules.html': {} } }],
      [
        'supportedcontenttype',
        { _index: 2002, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'supportedlanguages',
        { _index: 2003, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'svg',
        {
          _index: 1077,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'modules.html': {},
          },
        },
      ],
      [
        'switch',
        {
          _index: 1167,
          title: {},
          body: {
            'injectables/RenderService.html': {},
            'interfaces/SignUpProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      ['system', { _index: 1845, title: {}, body: { 'index.html': {} } }],
      [
        't',
        {
          _index: 287,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      [
        't(translationkeys.auth.or',
        { _index: 1305, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        't(translationkeys.auth.signupwithemail',
        { _index: 1303, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        't(translationkeys.auth.signupwithgoogle',
        { _index: 1304, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'tanstack/react',
        {
          _index: 1571,
          title: {},
          body: { 'interfaces/UseReactMutation.html': {}, 'dependencies.html': {} },
        },
      ],
      ['tdocument', { _index: 83, title: {}, body: { 'classes/AbstractRepository.html': {} } }],
      ['technologies', { _index: 1847, title: {}, body: { 'index.html': {} } }],
      ['tel', { _index: 2045, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'text',
        {
          _index: 413,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/UiButtonProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'text/html',
        {
          _index: 1087,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      [
        'text/plain',
        {
          _index: 1538,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      ['text_html', { _index: 1155, title: {}, body: { 'injectables/RenderService.html': {} } }],
      [
        'textfieldelement',
        { _index: 1256, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'tfunction',
        {
          _index: 1213,
          title: {},
          body: { 'interfaces/SignUpFormSpecs.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      ['theme', { _index: 1425, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        'theme.palette.grey[400',
        { _index: 1434, title: {}, body: { 'interfaces/UiCardProps.html': {} } },
      ],
      [
        'theme.palette.secondary.main',
        { _index: 1451, title: {}, body: { 'interfaces/UiCardProps.html': {} } },
      ],
      [
        'theme.palette.text.secondary',
        { _index: 1435, title: {}, body: { 'interfaces/UiCardProps.html': {} } },
      ],
      [
        'this.apikey',
        {
          _index: 115,
          title: {},
          body: { 'classes/ApiSDK.html': {}, 'interfaces/ApiSDKConfig.html': {} },
        },
      ],
      ['this.app', { _index: 955, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      ['this.auth', { _index: 957, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'this.chartconfigservice.deletechartconfig(uid',
        { _index: 1365, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'this.chartconfigservice.generatechartconfig',
        { _index: 1670, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'this.chartconfigservice.savechartconfig(uid',
        { _index: 1673, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'this.chartconfigservice.savechartsmedialinks(uploadsmetadata',
        { _index: 1137, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        "this.charts_collection_path.replace('{uid",
        { _index: 1387, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      ['this.config', { _index: 950, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'this.config.projectid',
        { _index: 962, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'this.connectemulators',
        { _index: 965, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'this.datafilesservice.deletefile(uploadeddatafilepath',
        {
          _index: 734,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/TransactionController.html': {},
          },
        },
      ],
      [
        'this.datafilesservice.parsecsv(filebuffer',
        { _index: 1667, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'this.datafilesservice.streamfromstorage(body.object.name',
        { _index: 1666, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'this.datafilesservice.uploadrender',
        { _index: 1134, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'this.datafilesservice.uploadtostorage',
        { _index: 711, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'this.filenameservice.generatefileinfo',
        { _index: 708, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'this.files_destination',
        { _index: 712, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      ['this.firestore', { _index: 959, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'this.generatemultiaxislineoptions(chartconfig',
        { _index: 416, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'this.init',
        {
          _index: 853,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      [
        'this.initializefirebasewebapp',
        { _index: 956, title: {}, body: { 'classes/FirebaseWeb.html': {} } },
      ],
      [
        'this.logger',
        { _index: 1115, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'this.logger.error(error',
        {
          _index: 924,
          title: {},
          body: {
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/NotificationsService.html': {},
            'injectables/RenderService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'this.logger.error(error_msg.insufficient_permissions',
        { _index: 922, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'this.logger.error(error_msg.invalid_token',
        { _index: 908, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'this.logger.error(error_msg.user_disabled',
        { _index: 919, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'this.logger.log(`chart',
        { _index: 1671, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'this.logger.log(`deleted',
        { _index: 736, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'this.logger.log(`removing',
        { _index: 1390, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'this.logger.log(`rendering',
        { _index: 1159, title: {}, body: { 'injectables/RenderService.html': {} } },
      ],
      [
        'this.logger.log(`uploaded',
        { _index: 719, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'this.logger.log(`user',
        { _index: 1402, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        "this.logger.warn('document",
        { _index: 86, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'this.logger.warn(`document',
        { _index: 91, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'this.model(document',
        { _index: 79, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'this.model.find(filterquery',
        { _index: 92, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'this.model.findone(filterquery',
        { _index: 84, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'this.model.findoneandupdate(filterquery',
        { _index: 90, title: {}, body: { 'classes/AbstractRepository.html': {} } },
      ],
      [
        'this.notificationsservice.savenotificationtofirestore(req.user.uid',
        { _index: 722, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'this.notificationsservice.savenotificationtofirestore(uid',
        { _index: 1674, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      ['this.projectid', { _index: 961, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      [
        'this.renderservice.render(params',
        { _index: 1132, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'this.rootpath',
        { _index: 1042, title: {}, body: { 'injectables/I18nStreamService.html': {} } },
      ],
      [
        'this.storage',
        { _index: 805, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'this.storage.bucket().file(`${path}/${metadata.uid}/${filename',
        { _index: 771, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'this.storage.bucket().file(filepath',
        { _index: 791, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'this.storage.bucket().file(name',
        { _index: 776, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'this.threads}\\n',
        { _index: 564, title: {}, body: { 'injectables/ClusterModule.html': {} } },
      ],
      [
        'this.transactionservice.removecreditsandclaimchart(req.user.uid',
        { _index: 1359, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'this.userrepository',
        { _index: 1638, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userrepository.create(createuserdto',
        { _index: 1642, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userrepository.find',
        { _index: 1640, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userrepository.findone',
        { _index: 1641, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userrepository.findoneandupdate',
        { _index: 1643, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.users_collection_path}/${uid',
        { _index: 1386, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'this.usersservice.create(createuserdto',
        {
          _index: 1190,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.list',
        {
          _index: 1185,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.remove(id',
        {
          _index: 1196,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.retrieve(id',
        {
          _index: 1188,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.update(id',
        {
          _index: 1193,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.validatebubble(parsedfile',
        { _index: 1709, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'this.validateline(parsedfile',
        { _index: 1707, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'this.validatepolararea(parsedfile',
        { _index: 1710, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'this.validateradar(parsedfile',
        { _index: 1711, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'this.validatescatter(parsedfile',
        { _index: 1708, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'this.validationservice.validatedatafile(parsedfile',
        { _index: 1669, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      ['threads', { _index: 547, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      ['through', { _index: 1922, title: {}, body: { 'index.html': {} } }],
      [
        'throw',
        {
          _index: 88,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'injectables/RenderService.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UseReactMutation.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      ['time', { _index: 2046, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['timeout', { _index: 285, title: {}, body: { 'interfaces/CallOptions.html': {} } }],
      [
        'timestamp',
        {
          _index: 1075,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
          },
        },
      ],
      ['timestamps', { _index: 1588, title: {}, body: { 'interfaces/UserDocument.html': {} } }],
      [
        'title',
        {
          _index: 411,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatafilesController.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/ToastMessageProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'classes/UserDto.html': {},
            'controllers/ValidationController.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'toast',
        {
          _index: 234,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
          },
        },
      ],
      [
        "toast('your",
        { _index: 263, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'toastify',
        {
          _index: 235,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'toastmessage',
        {
          _index: 477,
          title: {},
          body: {
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'toastmessage(__namedparameters',
        { _index: 1827, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'toastmessageprops',
        {
          _index: 1315,
          title: { 'interfaces/ToastMessageProps.html': {} },
          body: { 'interfaces/ToastMessageProps.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'token',
        { _index: 896, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['toolbar', { _index: 1324, title: {}, body: { 'interfaces/ToolbarProps.html': {} } }],
      [
        'toolbarprops',
        {
          _index: 1318,
          title: { 'interfaces/ToolbarProps.html': {} },
          body: { 'interfaces/ToolbarProps.html': {} },
        },
      ],
      ['tools', { _index: 1867, title: {}, body: { 'index.html': {} } }],
      [
        'transaction',
        {
          _index: 1343,
          title: {},
          body: {
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
          },
        },
      ],
      [
        'transaction.controller',
        { _index: 1370, title: {}, body: { 'modules/TransactionModule.html': {} } },
      ],
      [
        'transaction.dto.ts',
        { _index: 1372, title: {}, body: { 'classes/TransactionRequestDto.html': {} } },
      ],
      [
        'transaction.get(userref',
        { _index: 1393, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'transaction.service',
        {
          _index: 1354,
          title: {},
          body: {
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
          },
        },
      ],
      [
        'transaction.update(chartref',
        { _index: 1401, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'transaction.update(userref',
        { _index: 1399, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'transactioncontroller',
        {
          _index: 150,
          title: { 'controllers/TransactionController.html': {} },
          body: {
            'modules/AppModule.html': {},
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
          },
        },
      ],
      [
        'transactionmodule',
        {
          _index: 131,
          title: { 'modules/TransactionModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/TransactionModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'transactionrequestdto',
        {
          _index: 1347,
          title: { 'classes/TransactionRequestDto.html': {} },
          body: {
            'controllers/TransactionController.html': {},
            'classes/TransactionRequestDto.html': {},
          },
        },
      ],
      [
        'transactionservice',
        {
          _index: 1353,
          title: { 'injectables/TransactionService.html': {} },
          body: {
            'controllers/TransactionController.html': {},
            'modules/TransactionModule.html': {},
            'injectables/TransactionService.html': {},
            'overview.html': {},
          },
        },
      ],
      ['transform', { _index: 1446, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        'transformeddata',
        { _index: 1715, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'transformmapper',
        { _index: 1705, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        "transformmapper['bubble'](parsedfile",
        { _index: 1722, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        "transformmapper['line'](parsedfile",
        { _index: 1716, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        "transformmapper['polararea'](parsedfile",
        { _index: 1723, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        "transformmapper['radar'](parsedfile",
        { _index: 1724, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        "transformmapper['scatter'](parsedfile",
        { _index: 1721, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      ['transition', { _index: 1442, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        'translatenamespace',
        { _index: 2004, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'translateprefix',
        { _index: 2005, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['translatey', { _index: 1447, title: {}, body: { 'interfaces/UiCardProps.html': {} } }],
      [
        'translation_key_prefix',
        { _index: 1262, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'translationkeys',
        {
          _index: 1240,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'translationkeys.auth',
        { _index: 1294, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'triggers/src/lib/utils/getnextstep.util.ts',
        { _index: 2054, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'true',
        {
          _index: 17,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UserDocument.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'try',
        {
          _index: 255,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'injectables/NotificationsService.html': {},
            'injectables/RenderService.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      ['ts', { _index: 1784, title: {}, body: { 'dependencies.html': {} } }],
      ['tslib', { _index: 1805, title: {}, body: { 'dependencies.html': {} } }],
      [
        'type',
        {
          _index: 10,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'classes/AbstractRepository.html': {},
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'modules/AppModule.html': {},
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/AuthResponse.html': {},
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/CallOptions.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'injectables/ClusterModule.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FilenameService.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/FirebaseWeb.html': {},
            'classes/GetUsersDto.html': {},
            'controllers/I18nStreamController.html': {},
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
            'injectables/I18nStreamService.html': {},
            'interfaces/IFeatureModel.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/SpinnerButtonProps.html': {},
            'interfaces/ToastMessageProps.html': {},
            'interfaces/ToolbarProps.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UiButtonProps.html': {},
            'interfaces/UiCardProps.html': {},
            'interfaces/UiHeaderProps.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseHookFormProps.html': {},
            'interfaces/UseReactMutation.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['typealiases', { _index: 1952, title: { 'miscellaneous/typealiases.html': {} }, body: {} }],
      [
        'typeof',
        {
          _index: 491,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'interfaces/UiButtonProps.html': {} },
        },
      ],
      [
        'types',
        {
          _index: 25,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'injectables/NotificationsService.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'interfaces/ResourceDeleted.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UserDocument.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'types.authrequest',
        { _index: 651, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'types.chart',
        { _index: 1122, title: {}, body: { 'controllers/RenderController.html': {} } },
      ],
      [
        'types.chartdatatype',
        { _index: 1826, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'types.datafilemetadata',
        { _index: 763, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'types.fieldspec',
        { _index: 1232, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } },
      ],
      ['types.objectid', { _index: 12, title: {}, body: { 'classes/AbstractDocument.html': {} } }],
      ['types.render', { _index: 1165, title: {}, body: { 'injectables/RenderService.html': {} } }],
      [
        'types.rendermetadata',
        { _index: 760, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'types.renderparams',
        {
          _index: 1125,
          title: {},
          body: { 'controllers/RenderController.html': {}, 'injectables/RenderService.html': {} },
        },
      ],
      [
        'types.usernotification',
        { _index: 1059, title: {}, body: { 'injectables/NotificationsService.html': {} } },
      ],
      [
        'typescript',
        {
          _index: 685,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'interfaces/UserDocument.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'typography',
        {
          _index: 468,
          title: {},
          body: {
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/ToastMessageProps.html': {},
          },
        },
      ],
      ['ui', { _index: 1796, title: {}, body: { 'dependencies.html': {} } }],
      ['uibutton', { _index: 1242, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'uibuttoncolor',
        {
          _index: 1408,
          title: {},
          body: { 'interfaces/UiButtonProps.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'uibuttoncolor)[keyof',
        { _index: 1416, title: {}, body: { 'interfaces/UiButtonProps.html': {} } },
      ],
      [
        'uibuttonprops',
        {
          _index: 1312,
          title: { 'interfaces/UiButtonProps.html': {} },
          body: { 'interfaces/SpinnerButtonProps.html': {}, 'interfaces/UiButtonProps.html': {} },
        },
      ],
      [
        'uibuttontype',
        {
          _index: 1410,
          title: {},
          body: { 'interfaces/UiButtonProps.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'uibuttontype)[number',
        { _index: 1415, title: {}, body: { 'interfaces/UiButtonProps.html': {} } },
      ],
      [
        'uicard',
        {
          _index: 1244,
          title: {},
          body: { 'interfaces/SignUpProps.html': {}, 'interfaces/UiCardProps.html': {} },
        },
      ],
      [
        'uicardprops',
        {
          _index: 1417,
          title: { 'interfaces/UiCardProps.html': {} },
          body: { 'interfaces/UiCardProps.html': {} },
        },
      ],
      [
        'uid',
        {
          _index: 218,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'injectables/ChartConfigService.html': {},
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/NotificationsService.html': {},
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'controllers/TransactionController.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UserDocument.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'uid)}/${chartid',
        { _index: 1388, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'uiheaderprops',
        {
          _index: 1453,
          title: { 'interfaces/UiHeaderProps.html': {} },
          body: { 'interfaces/UiHeaderProps.html': {} },
        },
      ],
      ['uint8array', { _index: 780, title: {}, body: { 'injectables/DatafilesService.html': {} } }],
      [
        'uiprogressspinner',
        {
          _index: 472,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'interfaces/SignUpProps.html': {} },
        },
      ],
      [
        'uispinnerbutton',
        {
          _index: 475,
          title: {},
          body: {
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
          },
        },
      ],
      [
        'unauthenticated',
        { _index: 903, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      ['unauthorized', { _index: 212, title: {}, body: { 'interfaces/AuthResponse.html': {} } }],
      [
        'unauthorizedexception',
        {
          _index: 767,
          title: {},
          body: {
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
          },
        },
      ],
      [
        'unauthorizedexception(error_msg.unauthenticated',
        { _index: 925, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'undefined',
        {
          _index: 13,
          title: {},
          body: {
            'classes/AbstractDocument.html': {},
            'interfaces/CallOptions.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'interfaces/UiHeaderProps.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      ['unique', { _index: 1592, title: {}, body: { 'interfaces/UserDocument.html': {} } }],
      ['units', { _index: 1883, title: {}, body: { 'index.html': {} } }],
      [
        'unknown',
        {
          _index: 61,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'injectables/DatafilesService.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'controllers/RenderController.html': {},
            'injectables/RenderService.html': {},
            'interfaces/SignUpProps.html': {},
            'controllers/TransactionController.html': {},
            'interfaces/UseHookFormProps.html': {},
            'classes/UserRepository.html': {},
          },
        },
      ],
      [
        'unsubscribechart',
        { _index: 520, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'unsubscribenotifications',
        { _index: 528, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      ['untitled', { _index: 429, title: {}, body: { 'injectables/ChartConfigService.html': {} } }],
      ['unused', { _index: 687, title: {}, body: { 'controllers/DatafilesController.html': {} } }],
      [
        'update',
        {
          _index: 65,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'classes/UserRepository.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'update${resourcename',
        {
          _index: 597,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        "update(@param('id",
        {
          _index: 1192,
          title: {},
          body: { 'interfaces/ResourceDeleted.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'update(id',
        {
          _index: 1615,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'updatedquota',
        { _index: 1396, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'updatequery',
        {
          _index: 66,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'updateuserdto',
        {
          _index: 603,
          title: { 'classes/UpdateUserDto.html': {} },
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/ResourceDeleted.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'updateuserz',
        {
          _index: 595,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      [
        'upload',
        {
          _index: 1507,
          title: {},
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'uploadchartconfig',
        {
          _index: 389,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        "uploadchartconfig['metadata",
        { _index: 454, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'uploadcsvchartfile',
        { _index: 1492, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'uploadcsvchartfileprops',
        {
          _index: 1461,
          title: { 'interfaces/UploadCsvChartFileProps.html': {} },
          body: { 'interfaces/UploadCsvChartFileProps.html': {} },
        },
      ],
      [
        'uploadcsvchartformschema',
        { _index: 1479, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'uploaddatafile',
        { _index: 647, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'uploaddatafile(datafile',
        { _index: 654, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'uploaddatafilerequest',
        { _index: 2007, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'uploaddatafilerequestdto',
        {
          _index: 656,
          title: { 'classes/UploadDatafileRequestDto.html': {} },
          body: {
            'controllers/DatafilesController.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'uploaddatafileresponse',
        { _index: 2008, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'uploaddatafileresponsedto',
        {
          _index: 678,
          title: { 'classes/UploadDatafileResponseDto.html': {} },
          body: {
            'controllers/DatafilesController.html': {},
            'classes/UploadDatafileRequestDto.html': {},
            'classes/UploadDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'uploaded',
        {
          _index: 725,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'interfaces/UploadFileSchemaOptions.html': {},
          },
        },
      ],
      [
        'uploadeddatafilepath',
        {
          _index: 437,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'controllers/DatafilesController.html': {},
            'controllers/TransactionController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'uploadedfile',
        { _index: 662, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'uploadfileschemaoptions',
        {
          _index: 1514,
          title: { 'interfaces/UploadFileSchemaOptions.html': {} },
          body: { 'interfaces/UploadFileSchemaOptions.html': {} },
        },
      ],
      ['uploading', { _index: 1911, title: {}, body: { 'index.html': {} } }],
      [
        'uploadmetadata',
        { _index: 710, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'uploadmetadata.medialink',
        { _index: 721, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'uploadmetadata.name',
        { _index: 720, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'uploadmetadata.timecreated',
        { _index: 732, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'uploadrender',
        { _index: 747, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'uploadrender(buffer',
        { _index: 758, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'uploads',
        {
          _index: 453,
          title: {},
          body: { 'injectables/ChartConfigService.html': {}, 'index.html': {} },
        },
      ],
      [
        'uploadsmetadata',
        {
          _index: 391,
          title: {},
          body: {
            'injectables/ChartConfigService.html': {},
            'controllers/RenderController.html': {},
          },
        },
      ],
      [
        'uploadsmetadata[0]?.metadata',
        { _index: 451, title: {}, body: { 'injectables/ChartConfigService.html': {} } },
      ],
      [
        'uploadtostorage',
        { _index: 748, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'uploadtostorage(file',
        { _index: 762, title: {}, body: { 'injectables/DatafilesService.html': {} } },
      ],
      [
        'uploadwizard',
        { _index: 1465, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'uploadwizardformdata',
        {
          _index: 1485,
          title: { 'interfaces/UploadWizardFormData.html': {} },
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'uploadwizardprops',
        {
          _index: 1535,
          title: { 'interfaces/UploadWizardProps.html': {} },
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'uploadwizardref',
        {
          _index: 1466,
          title: { 'interfaces/UploadWizardRef.html': {} },
          body: {
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'upsert',
        {
          _index: 67,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      [
        'uri',
        {
          _index: 638,
          title: {},
          body: { 'modules/DatabaseModule.html': {}, 'interfaces/IFeatureModel.html': {} },
        },
      ],
      [
        'url',
        {
          _index: 286,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/CrudResourceGenConfig.html': {},
            'controllers/DatafilesController.html': {},
            'interfaces/Resource.html': {},
            'interfaces/ResourceGenConfig.html': {},
            'interfaces/UseReactMutation.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'us/docs/web/api/filelist',
        {
          _index: 1531,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
          },
        },
      ],
      [
        'use',
        {
          _index: 883,
          title: {},
          body: {
            'injectables/FirebaseAuthMiddleware.html': {},
            'interfaces/SignUpProps.html': {},
          },
        },
      ],
      [
        'use(req',
        { _index: 884, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'useauthstate',
        {
          _index: 163,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/JwtCustomClaims.html': {},
          },
        },
      ],
      [
        'useauthstate(auth',
        {
          _index: 179,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/JwtCustomClaims.html': {},
          },
        },
      ],
      [
        'useaxios',
        {
          _index: 470,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'interfaces/UseReactMutation.html': {} },
        },
      ],
      [
        'useaxios(config',
        { _index: 1577, title: {}, body: { 'interfaces/UseReactMutation.html': {} } },
      ],
      [
        'useaxios.hook',
        { _index: 1574, title: {}, body: { 'interfaces/UseReactMutation.html': {} } },
      ],
      ['used', { _index: 1848, title: {}, body: { 'index.html': {} } }],
      [
        'useeffect',
        {
          _index: 486,
          title: {},
          body: {
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
          },
        },
      ],
      [
        'usefactory',
        {
          _index: 637,
          title: {},
          body: { 'modules/DatabaseModule.html': {}, 'interfaces/IFeatureModel.html': {} },
        },
      ],
      [
        'useform',
        {
          _index: 1257,
          title: {},
          body: {
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UseHookFormProps.html': {},
          },
        },
      ],
      ['usefsdoc', { _index: 1241, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      ["usefsdoc('form", { _index: 1282, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'usehookform',
        { _index: 1562, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      [
        'usehookformprops',
        {
          _index: 1544,
          title: { 'interfaces/UseHookFormProps.html': {} },
          body: { 'interfaces/UseHookFormProps.html': {} },
        },
      ],
      [
        'useinterceptors',
        { _index: 661, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        "useinterceptors(fileinterceptor('datafile",
        { _index: 699, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'usejwtclaims',
        { _index: 1049, title: {}, body: { 'interfaces/JwtCustomClaims.html': {} } },
      ],
      ['usememo', { _index: 1254, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        'usemutation',
        { _index: 1570, title: {}, body: { 'interfaces/UseReactMutation.html': {} } },
      ],
      [
        'usepipes',
        {
          _index: 666,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/I18nStreamController.html': {},
            'controllers/RenderController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/TransactionController.html': {},
            'controllers/UsersController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'usepipes(zodvalidationpipe',
        {
          _index: 698,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/I18nStreamController.html': {},
            'controllers/RenderController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/TransactionController.html': {},
            'controllers/UsersController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'user',
        {
          _index: 178,
          title: {},
          body: {
            'interfaces/AppRoutes.html': {},
            'interfaces/AuthRequest.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/JwtCustomClaims.html': {},
            'interfaces/Render.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'interfaces/ResourceDeleted.html': {},
            'injectables/TransactionService.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'controllers/ValidationController.html': {},
            'index.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'user.customclaims.quota?.current',
        { _index: 1397, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'user.getidtokenresult().then((tokenresult',
        { _index: 1051, title: {}, body: { 'interfaces/JwtCustomClaims.html': {} } },
      ],
      [
        'user.schema',
        {
          _index: 1602,
          title: {},
          body: {
            'classes/UserRepository.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'user_disabled',
        { _index: 897, title: {}, body: { 'injectables/FirebaseAuthMiddleware.html': {} } },
      ],
      [
        'userattributes',
        { _index: 2010, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'usercustomclaims',
        {
          _index: 893,
          title: {},
          body: {
            'injectables/FirebaseAuthMiddleware.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['userdoc', { _index: 1392, title: {}, body: { 'injectables/TransactionService.html': {} } }],
      [
        'userdoc.data',
        { _index: 1394, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'userdocref',
        { _index: 256, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'userdocument',
        {
          _index: 1583,
          title: { 'interfaces/UserDocument.html': {} },
          body: {
            'interfaces/UserDocument.html': {},
            'classes/UserRepository.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'userdto',
        {
          _index: 598,
          title: { 'classes/UserDto.html': {} },
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'interfaces/ResourceDeleted.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'usereactmutation',
        {
          _index: 1555,
          title: { 'interfaces/UseReactMutation.html': {} },
          body: { 'interfaces/UseHookFormProps.html': {}, 'interfaces/UseReactMutation.html': {} },
        },
      ],
      [
        'usereactmutation(path',
        { _index: 1564, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      [
        'usereactmutation.hook',
        { _index: 1556, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      [
        'useref',
        { _index: 1469, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'useref(null',
        { _index: 1498, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      ['usermodel', { _index: 1629, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'usernotification',
        { _index: 2013, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      ['useroutes', { _index: 177, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      ['userquota', { _index: 2015, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['userref', { _index: 1384, title: {}, body: { 'injectables/TransactionService.html': {} } }],
      [
        'userrepository',
        {
          _index: 1593,
          title: { 'classes/UserRepository.html': {} },
          body: { 'classes/UserRepository.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'userrepository(usermodel',
        { _index: 1639, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'userrole',
        {
          _index: 892,
          title: {},
          body: {
            'injectables/FirebaseAuthMiddleware.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'userrolestype',
        { _index: 2018, title: {}, body: { 'miscellaneous/typealiases.html': {} } },
      ],
      [
        'users',
        {
          _index: 99,
          title: {},
          body: {
            'classes/ApiSDK.html': {},
            'interfaces/ApiSDKConfig.html': {},
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'interfaces/UserDocument.html': {},
            'classes/UserDto.html': {},
            'controllers/UsersController.html': {},
            'index.html': {},
          },
        },
      ],
      ['users.controller', { _index: 1623, title: {}, body: { 'modules/UsersModule.html': {} } }],
      [
        'users.repository',
        { _index: 1636, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'users.service',
        {
          _index: 1182,
          title: {},
          body: {
            'interfaces/ResourceDeleted.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'users/${uid',
        { _index: 258, title: {}, body: { 'interfaces/BuyCreditsFormProps.html': {} } },
      ],
      [
        'users/${user?.uid}/charts/${chartid',
        { _index: 514, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'users/${user?.uid}/notifications',
        { _index: 516, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'users_collection_path',
        { _index: 1375, title: {}, body: { 'injectables/TransactionService.html': {} } },
      ],
      [
        'userschema',
        {
          _index: 1587,
          title: {},
          body: { 'interfaces/UserDocument.html': {}, 'modules/UsersModule.html': {} },
        },
      ],
      [
        'userschema.index',
        { _index: 1591, title: {}, body: { 'interfaces/UserDocument.html': {} } },
      ],
      [
        'userscontroller',
        {
          _index: 1184,
          title: { 'controllers/UsersController.html': {} },
          body: {
            'interfaces/ResourceDeleted.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'usersmodule',
        {
          _index: 1618,
          title: { 'modules/UsersModule.html': {} },
          body: { 'modules/UsersModule.html': {}, 'modules.html': {}, 'overview.html': {} },
        },
      ],
      [
        'usersservice',
        {
          _index: 1181,
          title: { 'injectables/UsersService.html': {} },
          body: {
            'interfaces/ResourceDeleted.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'overview.html': {},
          },
        },
      ],
      ['usersservice.name', { _index: 1625, title: {}, body: { 'modules/UsersModule.html': {} } }],
      [
        'userz',
        {
          _index: 584,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GetUsersDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserDto.html': {},
          },
        },
      ],
      ['uses', { _index: 1841, title: {}, body: { 'index.html': {} } }],
      [
        'usestate',
        {
          _index: 233,
          title: {},
          body: {
            'interfaces/BuyCreditsFormProps.html': {},
            'interfaces/ChangeLanguageProps.html': {},
            'interfaces/ChartPreviewProps.html': {},
            'interfaces/JwtCustomClaims.html': {},
          },
        },
      ],
      [
        'usestate(false',
        { _index: 500, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'usestate(i18n.language',
        { _index: 352, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'usestate(null',
        {
          _index: 496,
          title: {},
          body: { 'interfaces/ChartPreviewProps.html': {}, 'interfaces/JwtCustomClaims.html': {} },
        },
      ],
      [
        'usetranslation',
        { _index: 341, title: {}, body: { 'interfaces/ChangeLanguageProps.html': {} } },
      ],
      [
        'usevalue',
        {
          _index: 1030,
          title: {},
          body: {
            'modules/I18nStreamModule.html': {},
            'interfaces/I18nStreamModuleOptions.html': {},
          },
        },
      ],
      ['using', { _index: 1861, title: {}, body: { 'index.html': {} } }],
      ['utf', { _index: 717, title: {}, body: { 'controllers/DatafilesController.html': {} } }],
      ['utilities', { _index: 1930, title: {}, body: { 'index.html': {} } }],
      [
        'utils',
        {
          _index: 297,
          title: {},
          body: {
            'interfaces/CallOptions.html': {},
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/SignUpProps.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'validate',
        {
          _index: 715,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'validatebeforesave',
        { _index: 1590, title: {}, body: { 'interfaces/UserDocument.html': {} } },
      ],
      [
        'validatebubble',
        { _index: 1685, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validatebubble(parsedfile',
        { _index: 1690, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validatedatafile',
        {
          _index: 1654,
          title: {},
          body: {
            'controllers/ValidationController.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      [
        'validatedatafile(body',
        { _index: 1655, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'validatedatafile(parsedfile',
        { _index: 1693, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validatedatafilerequestdto',
        {
          _index: 1645,
          title: { 'classes/ValidateDatafileRequestDto.html': {} },
          body: {
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'validatedatafilerequestschema',
        {
          _index: 1647,
          title: {},
          body: {
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'validatedatafileresponsedto',
        {
          _index: 1650,
          title: { 'classes/ValidateDatafileResponseDto.html': {} },
          body: {
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'validatedatafileresponseschema',
        {
          _index: 1648,
          title: {},
          body: {
            'classes/ValidateDatafileRequestDto.html': {},
            'classes/ValidateDatafileResponseDto.html': {},
          },
        },
      ],
      [
        'validateddata',
        { _index: 1668, title: {}, body: { 'controllers/ValidationController.html': {} } },
      ],
      [
        'validateline',
        { _index: 1686, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validateline(parsedfile',
        { _index: 1695, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validatepolararea',
        { _index: 1687, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validatepolararea(parsedfile',
        { _index: 1698, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validateradar',
        { _index: 1688, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validateradar(parsedfile',
        { _index: 1700, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validatescatter',
        { _index: 1689, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validatescatter(parsedfile',
        { _index: 1702, title: {}, body: { 'injectables/ValidationService.html': {} } },
      ],
      [
        'validation',
        {
          _index: 727,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'injectables/DatafilesService.html': {},
            'interfaces/UseHookFormProps.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'validation.controller',
        { _index: 1683, title: {}, body: { 'modules/ValidationModule.html': {} } },
      ],
      [
        'validation.service',
        {
          _index: 1660,
          title: {},
          body: {
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
          },
        },
      ],
      [
        'validationcontroller',
        {
          _index: 1652,
          title: { 'controllers/ValidationController.html': {} },
          body: {
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
          },
        },
      ],
      [
        'validationmodule',
        {
          _index: 1679,
          title: { 'modules/ValidationModule.html': {} },
          body: { 'modules/ValidationModule.html': {}, 'modules.html': {}, 'overview.html': {} },
        },
      ],
      [
        'validationservice',
        {
          _index: 1659,
          title: { 'injectables/ValidationService.html': {} },
          body: {
            'controllers/ValidationController.html': {},
            'modules/ValidationModule.html': {},
            'injectables/ValidationService.html': {},
            'overview.html': {},
          },
        },
      ],
      ['validator', { _index: 1762, title: {}, body: { 'dependencies.html': {} } }],
      [
        'validators',
        { _index: 701, title: {}, body: { 'controllers/DatafilesController.html': {} } },
      ],
      [
        'value',
        {
          _index: 70,
          title: {},
          body: {
            'classes/AbstractRepository.html': {},
            'interfaces/AppRoutes.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/DatafilesService.html': {},
            'classes/FirebaseAdmin.html': {},
            'injectables/FirebaseAuthMiddleware.html': {},
            'injectables/NotificationsService.html': {},
            'injectables/RenderService.html': {},
            'injectables/TransactionService.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'classes/UserRepository.html': {},
            'injectables/ValidationService.html': {},
          },
        },
      ],
      ['values', { _index: 1558, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } }],
      ['var', { _index: 953, title: {}, body: { 'classes/FirebaseWeb.html': {} } }],
      ['variant', { _index: 1407, title: {}, body: { 'interfaces/UiButtonProps.html': {} } }],
      ['vars', { _index: 688, title: {}, body: { 'controllers/DatafilesController.html': {} } }],
      ['verify', { _index: 490, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } }],
      [
        'verifytransaction',
        { _index: 1345, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'verifytransaction(@body',
        { _index: 1358, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      [
        'verifytransaction(body',
        { _index: 1350, title: {}, body: { 'controllers/TransactionController.html': {} } },
      ],
      ['version', { _index: 1948, title: {}, body: { 'properties.html': {} } }],
      ['visualizing', { _index: 1912, title: {}, body: { 'index.html': {} } }],
      [
        'void',
        {
          _index: 142,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/ChartConfigService.html': {},
            'injectables/ClusterModule.html': {},
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
            'classes/FirebaseWeb.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'interfaces/UseReactMutation.html': {},
          },
        },
      ],
      [
        'watch',
        { _index: 1496, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        "watch('charttype",
        { _index: 1499, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'web',
        { _index: 968, title: {}, body: { 'classes/FirebaseWeb.html': {}, 'index.html': {} } },
      ],
      ['week', { _index: 2047, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        "where('chartid",
        { _index: 519, title: {}, body: { 'interfaces/ChartPreviewProps.html': {} } },
      ],
      [
        'width',
        {
          _index: 1089,
          title: {},
          body: {
            'interfaces/Render.html': {},
            'controllers/RenderController.html': {},
            'interfaces/RenderMetadata.html': {},
            'interfaces/RenderParams.html': {},
            'injectables/RenderService.html': {},
            'interfaces/UiHeaderProps.html': {},
          },
        },
      ],
      ['within', { _index: 1933, title: {}, body: { 'index.html': {} } }],
      [
        'without',
        {
          _index: 856,
          title: {},
          body: {
            'classes/FirebaseAdmin.html': {},
            'interfaces/FirebaseAdminConstructorConfig.html': {},
          },
        },
      ],
      ['withtranslation', { _index: 1261, title: {}, body: { 'interfaces/SignUpProps.html': {} } }],
      [
        "withtranslation('translation",
        { _index: 1307, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'wizard',
        { _index: 1468, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'wizard/src/lib/types.ts',
        {
          _index: 1525,
          title: {},
          body: {
            'interfaces/UploadWizardFormData.html': {},
            'interfaces/UploadWizardProps.html': {},
            'interfaces/UploadWizardRef.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'wizardref',
        { _index: 1497, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'wizardref.current.meta',
        { _index: 1505, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'wizardref.current?.fileid',
        { _index: 1500, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'wizardref.current?.meta',
        { _index: 1504, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'wizardref.current?.onsubmit(e',
        { _index: 1506, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      ['work', { _index: 191, title: {}, body: { 'interfaces/AppRoutes.html': {} } }],
      ['worker', { _index: 566, title: {}, body: { 'injectables/ClusterModule.html': {} } }],
      [
        'worker.process.pid',
        { _index: 567, title: {}, body: { 'injectables/ClusterModule.html': {} } },
      ],
      ['xlabels', { _index: 2024, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['yaxisid', { _index: 428, title: {}, body: { 'injectables/ChartConfigService.html': {} } }],
      [
        'yes',
        {
          _index: 55,
          title: {},
          body: { 'classes/AbstractRepository.html': {}, 'classes/UserRepository.html': {} },
        },
      ],
      ['ylabels', { _index: 2025, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'z',
        {
          _index: 1208,
          title: {},
          body: {
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UseHookFormProps.html': {},
          },
        },
      ],
      [
        'z.array(z.instanceof(file',
        { _index: 1484, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'z.infer',
        {
          _index: 1229,
          title: {},
          body: {
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'z.nativeenum(charttype',
        { _index: 1482, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'z.object',
        { _index: 1480, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        "z.string().default('default",
        { _index: 1481, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'z.string().email(errmsg.invalidemail',
        { _index: 1225, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } },
      ],
      [
        'z.zodobject',
        { _index: 1552, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      ['z.zodstring', { _index: 1215, title: {}, body: { 'interfaces/SignUpFormSpecs.html': {} } }],
      [
        'zod',
        {
          _index: 1209,
          title: {},
          body: {
            'interfaces/SignUpFormSpecs.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UseHookFormProps.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'zodrawshape',
        { _index: 1554, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      [
        'zodresolver',
        {
          _index: 1235,
          title: {},
          body: {
            'interfaces/SignUpProps.html': {},
            'interfaces/UploadCsvChartFileProps.html': {},
            'interfaces/UseHookFormProps.html': {},
          },
        },
      ],
      [
        'zodresolver(schema',
        { _index: 1565, title: {}, body: { 'interfaces/UseHookFormProps.html': {} } },
      ],
      [
        'zodresolver(signupformschema',
        { _index: 1285, title: {}, body: { 'interfaces/SignUpProps.html': {} } },
      ],
      [
        'zodresolver(uploadcsvchartformschema',
        { _index: 1493, title: {}, body: { 'interfaces/UploadCsvChartFileProps.html': {} } },
      ],
      [
        'zodvalidationpipe',
        {
          _index: 660,
          title: {},
          body: {
            'controllers/DatafilesController.html': {},
            'controllers/I18nStreamController.html': {},
            'controllers/RenderController.html': {},
            'interfaces/ResourceDeleted.html': {},
            'controllers/TransactionController.html': {},
            'controllers/UsersController.html': {},
            'controllers/ValidationController.html': {},
          },
        },
      ],
      [
        'zoom',
        {
          _index: 132,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatafilesModule.html': {},
            'modules/I18nStreamModule.html': {},
            'modules/RenderModule.html': {},
            'modules/ServerNestClusterModule.html': {},
            'modules/TransactionModule.html': {},
            'modules/UsersModule.html': {},
            'modules/ValidationModule.html': {},
            'overview.html': {},
          },
        },
      ],
    ],
    pipeline: ['stemmer'],
  },
  store: {
    'classes/AbstractDocument.html': {
      url: 'classes/AbstractDocument.html',
      title: 'class - AbstractDocument',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/database/src/lib/abstract.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, auto: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/database/src/lib/abstract.schema.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema } from \'@nestjs/mongoose\';\nimport { SchemaTypes, Types } from \'mongoose\';\n\n@Schema()\nexport class AbstractDocument {\n  @Prop({ type: SchemaTypes.ObjectId, auto: true })\n  _id: Types.ObjectId | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/AbstractRepository.html': {
      url: 'classes/AbstractRepository.html',
      title: 'class - AbstractRepository',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/database/src/lib/abstract.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in libs/server/nest/database/src/lib/abstract.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/database/src/lib/abstract.repository.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: Omit, options?: SaveOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/database/src/lib/abstract.repository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            Omit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            SaveOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/database/src/lib/abstract.repository.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/database/src/lib/abstract.repository.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndUpdate(filterQuery: FilterQuery, update: UpdateQuery>, upsert)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/database/src/lib/abstract.repository.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    update\n                                    \n                                            UpdateQuery>\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    upsert\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger, NotFoundException } from '@nestjs/common';\nimport type { FilterQuery, Model, UpdateQuery, SaveOptions } from 'mongoose';\n\nimport type { AbstractDocument } from './abstract.schema';\n\nexport class AbstractRepository {\n  protected readonly logger!: Logger;\n\n  constructor(protected readonly model: Model) {}\n\n  async create(document: Omit, options?: SaveOptions): Promise {\n    const createdDocument = new this.model(document);\n    return (await createdDocument.save(options)).toJSON() as unknown as TDocument;\n  }\n\n  async findOne(filterQuery: FilterQuery): Promise {\n    const document = await this.model.findOne(filterQuery, {}, { lean: true });\n\n    if (!document) {\n      this.logger.warn('Document not found with filterQuery', filterQuery);\n      throw new NotFoundException('Document not found.');\n    }\n\n    return document;\n  }\n\n  async findOneAndUpdate(\n    filterQuery: FilterQuery,\n    update: UpdateQuery>,\n    upsert = false,\n  ) {\n    const document = await this.model.findOneAndUpdate(filterQuery, update, {\n      upsert,\n      lean: true,\n      new: true,\n    });\n\n    if (!document) {\n      this.logger.warn(`Document not found with filterQuery:`, filterQuery);\n      throw new NotFoundException('Document not found.');\n    }\n\n    return document;\n  }\n\n  async find(filterQuery: FilterQuery) {\n    return this.model.find(filterQuery, {}, { lean: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ApiSDK.html': {
      url: 'classes/ApiSDK.html',
      title: 'class - ApiSDK',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiSDK\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/api-sdk/src/lib/index.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    users\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: ApiSDKConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/api-sdk/src/lib/index.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        ApiSDKConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/shared/api-sdk/src/lib/index.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        users\n                    \n                \n\n                \n                    \n                        getusers()\n                    \n                \n                            \n                                \n                                    Defined in libs/shared/api-sdk/src/lib/index.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiResources } from '@ntua-saas-10/shared-api-interfaces';\n\ninterface ApiSDKConfig {\n  apiKey: string;\n}\n\nexport class ApiSDK {\n  private readonly apiKey!: string;\n  constructor({ apiKey }: ApiSDKConfig) {\n    const apiKeyExistsInEnv = process.env['SDK_API_KEY'] || this.apiKey || false;\n    if (apiKeyExistsInEnv === false) {\n      this.apiKey = apiKey;\n      process.env['SDK_API_KEY'] = apiKey;\n      if (apiKey.startsWith('sdk_test_')) {\n        process.env['SDK_SANDBOX_MODE'] = 'true';\n      }\n    }\n  }\n\n  get users() {\n    return ApiResources['users'];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/ApiSDKConfig.html': {
      url: 'interfaces/ApiSDKConfig.html',
      title: 'interface - ApiSDKConfig',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiSDKConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/api-sdk/src/lib/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiResources } from '@ntua-saas-10/shared-api-interfaces';\n\ninterface ApiSDKConfig {\n  apiKey: string;\n}\n\nexport class ApiSDK {\n  private readonly apiKey!: string;\n  constructor({ apiKey }: ApiSDKConfig) {\n    const apiKeyExistsInEnv = process.env['SDK_API_KEY'] || this.apiKey || false;\n    if (apiKeyExistsInEnv === false) {\n      this.apiKey = apiKey;\n      process.env['SDK_API_KEY'] = apiKey;\n      if (apiKey.startsWith('sdk_test_')) {\n        process.env['SDK_SANDBOX_MODE'] = 'true';\n      }\n    }\n  }\n\n  get users() {\n    return ApiResources['users'];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AppModule.html': {
      url: 'modules/AppModule.html',
      title: 'module - AppModule',
      body: "\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nDatafilesModule\n\nDatafilesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatafilesModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatafilesModule\n                        \n                        \n                            TransactionModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/app.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { type MiddlewareConsumer, type NestModule, Module } from '@nestjs/common';\nimport { DatafilesModule, DatafilesController } from '@ntua-saas-10/server/nest/datafiles';\nimport { FirebaseAuthMiddleware } from '@ntua-saas-10/server/nest/firebase-auth-middleware';\nimport { TransactionController, TransactionModule } from '@ntua-saas-10/server/nest/transaction';\n\n@Module({\n  imports: [DatafilesModule, TransactionModule],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(FirebaseAuthMiddleware).forRoutes(DatafilesController, TransactionController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/AppRoutes.html': {
      url: 'interfaces/AppRoutes.html',
      title: 'interface - AppRoutes',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppRoutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/hooks/src/lib/useRoutes.hook.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in libs/web/hooks/src/lib/useRoutes.hook.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { auth } from '@ntua-saas-10/web/firebase';\nimport React, { createElement } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { RouteObject, redirect } from 'react-router-dom';\n\ninterface AppRoutes {\n  [key: string]: {\n    path: string;\n    page: string;\n    isGuarded: boolean;\n    claims: readonly string[];\n    FcComponent?: React.FC;\n  };\n}\n\nexport const useRoutes = (appRoutes: AppRoutes) => {\n  const [user] = useAuthState(auth);\n\n  const routes: RouteObject[] = Object.values(appRoutes).map((value) => {\n    const { path, isGuarded, /* claims, */ page, FcComponent } = value;\n\n    if (FcComponent && !isGuarded) {\n      return {\n        path,\n        element: createElement(FcComponent),\n        redirectTo: '/',\n      };\n    }\n    if (FcComponent && isGuarded && user) {\n      return {\n        path,\n        element: createElement(FcComponent),\n      };\n    }\n    if (FcComponent && isGuarded && !user) {\n      console.log('render');\n      redirect('/', { status: 404 });\n      return {\n        path,\n        element: createElement(FcComponent),\n      };\n    }\n\n    // Lazy loading doesnt work rn\n    // this if block never executes\n    if (!FcComponent && isGuarded && user) {\n      return {\n        path,\n        element: createElement(React.lazy(() => import(`../pages/${page}/index.tsx`))),\n      };\n    }\n\n    return {\n      path,\n      redirectTo: '/',\n    };\n  });\n\n  return routes;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/AuthRequest.html': {
      url: 'interfaces/AuthRequest.html',
      title: 'interface - AuthRequest',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/types/src/lib/types/AuthRequest.type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            customClaims\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customClaims\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customClaims:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     DecodedIdToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DecodedIdToken\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Schemas } from '@ntua-saas-10/shared-schemas';\nimport type { Request } from 'express';\nimport type { DecodedIdToken } from 'firebase-admin/auth';\n\nexport interface AuthRequest extends Request {\n  user: DecodedIdToken;\n  customClaims: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/AuthResponse.html': {
      url: 'interfaces/AuthResponse.html',
      title: 'interface - AuthResponse',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/types/src/lib/types/AuthResponse.type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Response\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     "UNAUTHORIZED" | "FORBIDDEN" | "BAD REQUEST"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     "UNAUTHORIZED" | "FORBIDDEN" | "BAD REQUEST"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Response } from \'express\';\n\nexport interface AuthResponse extends Response {\n  message: \'UNAUTHORIZED\' | \'FORBIDDEN\' | \'BAD REQUEST\';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/BuyCreditsFormProps.html': {
      url: 'interfaces/BuyCreditsFormProps.html',
      title: 'interface - BuyCreditsFormProps',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuyCreditsFormProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/web/src/app/components/BuyCreditsForm/index.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            setOpenDialog\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        setOpenDialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setOpenDialog:     React.Dispatch>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     React.Dispatch>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Box,\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n} from '@mui/material';\nimport { firestore } from '@ntua-saas-10/web/firebase';\nimport { doc, setDoc, increment } from 'firebase/firestore';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\ninterface BuyCreditsFormProps {\n  uid: string;\n  setOpenDialog: React.Dispatch>;\n}\n\nconst credits = [5, 10, 20, 50];\n\nconst BuyCreditsForm: React.FC = ({ uid, setOpenDialog }) => {\n  const [selectedOption, setSelectedOption] = useState(''); // State for selected credit option\n\n  const handleOptionChange = (event: React.ChangeEvent) => {\n    setSelectedOption(event.target.value);\n  };\n\n  const handleFormSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (selectedOption) {\n      try {\n        const userDocRef = doc(firestore, `users/${uid}`);\n        await setDoc(\n          userDocRef,\n          {\n            customClaims: {\n              quota: { current: increment(Number(selectedOption)) },\n            },\n          },\n          { merge: true },\n        );\n        toast('Your purchase was successful', { type: 'success' });\n        setOpenDialog(false);\n      } catch (error) {\n        toast('Your purchase failed to complete', { type: 'error' });\n        setOpenDialog(false);\n      }\n    }\n  };\n\n  return (\n     handleFormSubmit(e)}>\n      \n        Select one of the following options\n        \n          {credits.map((value) => (\n            }\n              label={value.toString() + ` Credits`}\n            />\n          ))}\n        \n      \n      \n        \n          \n            Buy Credits\n          \n        \n      \n    \n  );\n};\n\nexport default BuyCreditsForm;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/CallOptions.html': {
      url: 'interfaces/CallOptions.html',
      title: 'interface - CallOptions',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CallOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/call/src/lib/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            baseUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            method\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeout\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         AxiosRequestHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxiosRequestHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         HttpMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpMethod\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpMethod } from '@ntua-saas-10/shared-consts';\nimport axios, { type AxiosRequestHeaders, type AxiosError, type AxiosRequestConfig } from 'axios';\n\nimport { appendQueryParams, appendHeaders } from './utils';\n\ninterface CallOptions {\n  url: string;\n  data?: T;\n  method?: HttpMethod;\n  headers?: AxiosRequestHeaders;\n  baseUrl?: string;\n  timeout?: number;\n}\n\nexport const call = async ({\n  url,\n  data,\n  method = HttpMethod.POST,\n  headers,\n  baseUrl,\n  timeout = Number(process.env['API_CALL_TIMEOUT']) || 10000,\n}: CallOptions): Promise => {\n  axios.defaults.headers.common['X-SDK-API-KEY'] = process.env['SDK_API_KEY'];\n  if (process.env['SDK_SANDOX_MODE']) {\n    axios.defaults.headers.common['X-SDK-SANDBOX-MODE'] = process.env['SDK_SANDOX_MODE'];\n  }\n\n  const REMOVE_BODY = data && (method === HttpMethod.GET || method === HttpMethod.DELETE);\n  if (REMOVE_BODY) {\n    url = appendQueryParams(url, data as Record);\n    data = undefined;\n  }\n\n  const axiosOptions: AxiosRequestConfig = {\n    method,\n    url,\n    data,\n    headers: appendHeaders(headers),\n  };\n\n  const instance = axios.create({\n    timeout,\n    baseURL: baseUrl,\n  });\n\n  try {\n    const res = await instance.request(axiosOptions);\n    return res.data;\n  } catch (error) {\n    const e = error as AxiosError;\n    const errorObj = {\n      url: axiosOptions.url,\n      method: axiosOptions.method,\n      message: e.message,\n      status: e.response?.status || null,\n      response: e.response?.data || null,\n    };\n    throw errorObj;\n  }\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/ChangeLanguageProps.html': {
      url: 'interfaces/ChangeLanguageProps.html',
      title: 'interface - ChangeLanguageProps',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChangeLanguageProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/features/change-language/src/lib/index.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            langs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:         Languages[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Languages[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import styled from '@emotion/styled';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { type SelectChangeEvent } from '@mui/material/Select';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { type Languages, LANGUAGES, FLAGS } from './constants';\n\nimport { styles } from './styles';\n\nconst StyledSelect = styled(Select)(styles);\n\nexport interface ChangeLanguageProps {\n  langs: Languages[];\n}\n\nexport const ChangeLanguage: React.FC = ({ langs }) => {\n  const { i18n } = useTranslation();\n  const [selectedLanguage, setSelectedLanguage] = useState(i18n.language as Languages);\n\n  const handleChange = (event: SelectChangeEvent) => {\n    const newLanguage = event.target.value as Languages;\n    setSelectedLanguage(newLanguage);\n    i18n.changeLanguage(newLanguage);\n  };\n\n  return (\n    \n      {langs.map((key) => (\n        \n          {`${FLAGS[key]} ${LANGUAGES[key as Languages]}`}\n        \n      ))}\n    \n  );\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ChartConfigService.html': {
      url: 'injectables/ChartConfigService.html',
      title: 'injectable - ChartConfigService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChartConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/chart-config/src/lib/chart-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                CHARTS_COLLECTION_PATH\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteChartConfig\n                            \n                            \n                                generateChartConfig\n                            \n                            \n                                    Private\n                                generateMultiAxisLineOptions\n                            \n                            \n                                    Async\n                                saveChartConfig\n                            \n                            \n                                    Async\n                                saveChartsMediaLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteChartConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteChartConfig(uid: string, chartId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/chart-config/src/lib/chart-config.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateChartConfig\n                        \n                    \n                \n            \n            \n                \ngenerateChartConfig(chartTitle: string, chartType: ChartType, data: ChartData)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/chart-config/src/lib/chart-config.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartType\n                                    \n                                                ChartType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                ChartData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ChartConfiguration\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateMultiAxisLineOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateMultiAxisLineOptions(chartConfig: ChartConfiguration, data: ChartData)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/chart-config/src/lib/chart-config.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartConfig\n                                    \n                                                ChartConfiguration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                ChartData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveChartConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveChartConfig(uid: string, chart: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/chart-config/src/lib/chart-config.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chart\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveChartsMediaLinks\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveChartsMediaLinks(uploadsMetadata: UploadChartConfig[])\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/chart-config/src/lib/chart-config.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    uploadsMetadata\n                                    \n                                            UploadChartConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CHARTS_COLLECTION_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CollectionsPaths.CHARTS_COLLECTION_PATH\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/chart-config/src/lib/chart-config.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { firestore } from '@ntua-saas-10/server-firebase-admin';\n\nimport type { ChartType, ContentType } from '@ntua-saas-10/shared-consts';\nimport type { Chart, MediaLinks } from '@ntua-saas-10/shared-types';\nimport type { ChartConfiguration, ChartData, ChartDataset } from 'chart.js';\nimport type { DocumentReference } from 'firebase-admin/firestore';\n\nimport { CollectionsPaths } from '@ntua-saas-10/shared-consts';\n\ntype UploadChartConfig = {\n  metadata: {\n    uid: string;\n    chartId: string;\n  };\n  name: string;\n  contentType: ContentType;\n  mediaLink: string;\n};\ntype LineChartDataset = ChartDataset;\n\n@Injectable()\nexport class ChartConfigService {\n  private readonly CHARTS_COLLECTION_PATH = CollectionsPaths.CHARTS_COLLECTION_PATH;\n\n  generateChartConfig(\n    chartTitle: string,\n    chartType: ChartType,\n    data: ChartData,\n  ): ChartConfiguration {\n    const chartConfig: ChartConfiguration = {\n      type: 'line',\n      data: data,\n      options: {\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: chartTitle,\n          },\n          legend: {\n            display: true,\n            fullSize: true,\n          },\n        },\n      },\n    };\n\n    if (chartType === 'multiAxisLine') {\n      this.generateMultiAxisLineOptions(chartConfig, data);\n    } else {\n      chartConfig.type = chartType;\n    }\n\n    return chartConfig;\n  }\n\n  private generateMultiAxisLineOptions(chartConfig: ChartConfiguration, data: ChartData) {\n    if (!chartConfig.options || Object.keys(chartConfig.options || {}).length === 0)\n      chartConfig.options = {};\n    chartConfig.options.interaction = { mode: 'index', intersect: false };\n    chartConfig.options.scales = {};\n\n    let leftAxisExists = false;\n    for (const dataset of data.datasets as LineChartDataset[]) {\n      const { yAxisID = 'Untitled' } = dataset;\n\n      if (chartConfig.options.scales) {\n        chartConfig.options.scales[yAxisID] = {\n          type: 'linear',\n          display: true,\n          title: {\n            text: yAxisID,\n            display: true,\n          },\n          position: leftAxisExists ? 'right' : 'left',\n        };\n      }\n\n      leftAxisExists = true;\n    }\n  }\n\n  async saveChartConfig(\n    uid: string,\n    chart: {\n      chartTitle: string;\n      chartConfig: ChartConfiguration;\n      chartId: string;\n      chartType: ChartType;\n      createdAt: Date;\n      uploadedDatafilePath: string;\n      claimed?: boolean;\n    },\n  ) {\n    try {\n      const chartRef = firestore\n        .collection(this.CHARTS_COLLECTION_PATH.replace('{uid}', uid))\n        .doc(chart.chartId) as DocumentReference;\n\n      await chartRef.set({\n        ...chart,\n        uid,\n        claimed: !!chart.claimed,\n      });\n    } catch {\n      throw new InternalServerErrorException('Chart configuration could not be saved');\n    }\n  }\n\n  async deleteChartConfig(uid: string, chartId: string) {\n    try {\n      const chartRef = firestore\n        .collection(this.CHARTS_COLLECTION_PATH.replace('{uid}', uid))\n        .doc(chartId) as DocumentReference;\n\n      await chartRef.delete();\n    } catch {\n      throw new BadRequestException('Chart configuration could not be deleted');\n    }\n  }\n\n  async saveChartsMediaLinks(uploadsMetadata: UploadChartConfig[] = []) {\n    const mediaLinks = [];\n    const metadata = uploadsMetadata[0]?.metadata;\n    if (!metadata) throw new InternalServerErrorException('No uploads metadata');\n\n    const { uid, chartId } = metadata as UploadChartConfig['metadata'];\n    for (const { contentType, mediaLink } of uploadsMetadata) {\n      mediaLinks.push({ contentType, link: mediaLink });\n    }\n\n    const mediaLinksRef = firestore\n      .collection(`users/${uid}/mediaLinks`)\n      .doc(chartId) as DocumentReference;\n\n    await mediaLinksRef.set({ chartId, links: mediaLinks }, { merge: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/ChartPreviewProps.html': {
      url: 'interfaces/ChartPreviewProps.html',
      title: 'interface - ChartPreviewProps',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartPreviewProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/web/src/app/components/ChartPreview/index.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideActionButtons\n                                        \n                                \n                                \n                                        \n                                            uploadedDatafilePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideActionButtons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideActionButtons:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uploadedDatafilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uploadedDatafilePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport { Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport type { Types } from '@ntua-saas-10/shared-types';\nimport { auth, firestore } from '@ntua-saas-10/web/firebase';\nimport { useAxios } from '@ntua-saas-10/web/hooks';\nimport { UiProgressSpinner } from '@ntua-saas-10/web/ui/progress-spinner';\nimport { UiSpinnerButton } from '@ntua-saas-10/web/ui/spinner-button';\nimport { ToastMessage } from '@ntua-saas-10/web/ui/toast';\nimport { AxiosError } from 'axios';\nimport { type ChartConfiguration, Chart as ChartJS } from 'chart.js/auto';\nimport {\n  collection,\n  CollectionReference,\n  doc,\n  DocumentReference,\n  onSnapshot,\n  query,\n  where,\n} from 'firebase/firestore';\nimport type { FC } from 'react';\nimport { useEffect, useState } from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { toast } from 'react-toastify';\n\nexport interface ChartPreviewProps {\n  chartId: string;\n  uploadedDatafilePath: string;\n  hideActionButtons?: boolean;\n}\n\nconst ChartPreviewActions = {\n  Abort: 'abort',\n  Verify: 'verify',\n} as const;\n\ntype ChartPreviewActions = (typeof ChartPreviewActions)[keyof typeof ChartPreviewActions];\n\nexport const ChartPreview: FC = ({\n  chartId,\n  uploadedDatafilePath,\n  hideActionButtons = false,\n}) => {\n  ChartJS.register();\n  const [chartConfig, setChartConfig] = useState(null);\n  const [user] = useAuthState(auth);\n  const axios = useAxios({});\n  const [selection, setSelection] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleSelection = async (action: ChartPreviewActions) => {\n    setSelection(action);\n\n    try {\n      setLoading(true);\n      const response = await axios.post(`/transaction/${action}`, {\n        chartId,\n        uploadedDatafilePath,\n      });\n\n      toast(, {\n        type: action === ChartPreviewActions.Verify ? 'success' : 'info',\n      });\n\n      if (action === ChartPreviewActions.Abort) {\n        setErrorMessage('Your chart has been discarded');\n      }\n    } catch (e) {\n      const error = e as AxiosError;\n      toast(, {\n        type: 'error',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const chartRef = doc(\n      firestore,\n      `users/${user?.uid}/charts/${chartId}`,\n    ) as DocumentReference;\n    const notificationsRef = collection(\n      firestore,\n      `users/${user?.uid}/notifications`,\n    ) as CollectionReference;\n\n    const notificationsQuery = query(notificationsRef, where('chartId', '==', chartId));\n\n    const unsubscribeChart = onSnapshot(chartRef, (snapshot) => {\n      if (snapshot.exists()) {\n        const configData = snapshot.data();\n        setChartConfig(configData.chartConfig);\n      } else {\n        setChartConfig(null);\n      }\n    });\n\n    const unsubscribeNotifications = onSnapshot(notificationsQuery, (snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === 'added') {\n          const notification = change.doc.data();\n          if (notification.type === 'error' || notification.type === 'info') {\n            setErrorMessage(notification.data.message);\n          }\n        }\n      });\n    });\n\n    return () => {\n      unsubscribeChart();\n      unsubscribeNotifications();\n    };\n  }, [user, chartId]);\n\n  if (errorMessage)\n    return (\n      \n        {errorMessage}\n      \n    ); // Render the error message\n  if (!chartConfig) return ;\n\n  return (\n    \n      \n        \n      \n      {!hideActionButtons && (\n        \n           handleSelection(ChartPreviewActions.Abort)}\n            color=\"secondary\"\n          >\n            Abort\n            \n          \n           handleSelection(ChartPreviewActions.Verify)}\n            color=\"primary\"\n          >\n            Verify\n            \n          \n        \n      )}\n    \n  );\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ClusterModule.html': {
      url: 'injectables/ClusterModule.html',
      title: 'injectable - ClusterModule',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClusterModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/cluster/src/lib/server-nest-cluster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                threads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fork\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/server/nest/cluster/src/lib/server-nest-cluster.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fork\n                        \n                    \n                \n            \n            \n                \n                    \n                    fork(fn: () => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/cluster/src/lib/server-nest-cluster.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        threads\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/cluster/src/lib/server-nest-cluster.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import cluster from 'cluster';\n\nimport { cpus } from 'os';\n\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ClusterModule {\n  private static threads: number;\n\n  constructor() {\n    if (!ClusterModule.threads) {\n      ClusterModule.threads = cpus().length;\n    }\n  }\n\n  static fork(fn: () => void): void {\n    if (cluster.isPrimary) {\n      process.stdout.write(`Main Process - PID: ${process.pid} | #Threads: ${this.threads}\\n`);\n      for (let i = 0; i  {\n        process.stdout.write(`Killing worker ${worker.process.pid} - ${code} - ${signal}\\n`);\n        cluster.fork();\n      });\n    } else fn();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateUserDto.html': {
      url: 'classes/CreateUserDto.html',
      title: 'class - CreateUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from '@anatine/zod-nestjs';\nimport { extendApi } from '@anatine/zod-openapi';\nimport { ResourcePath } from '@ntua-saas-10/shared-api-interfaces';\nimport { ResourcesSchemas } from '@ntua-saas-10/shared-schemas';\n\nconst resourceName = 'User';\nconst resourcePath: ResourcePath = 'users';\n\nconst { retrieve, list, create, update } = ResourcesSchemas[ResourcePath[resourcePath]];\n\nexport const UserZ = extendApi(retrieve, {\n  title: resourceName,\n  description: `Retrieve a ${resourceName}`,\n});\nexport const GetUsersZ = extendApi(list, {\n  title: `List${resourceName}s`,\n  description: `List all ${resourceName}s`,\n  type: 'array',\n});\nexport const CreateUserZ = extendApi(create, {\n  title: `Create${resourceName}`,\n  description: `Create a ${resourceName}`,\n});\nexport const UpdateUserZ = extendApi(update, {\n  title: `Update${resourceName}`,\n  description: `Update a ${resourceName}`,\n});\n\nexport class UserDto extends createZodDto(UserZ) {}\nexport class GetUsersDto extends createZodDto(GetUsersZ) {}\nexport class CreateUserDto extends createZodDto(CreateUserZ) {}\nexport class UpdateUserDto extends createZodDto(UpdateUserZ) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/CrudResourceGenConfig.html': {
      url: 'interfaces/CrudResourceGenConfig.html',
      title: 'interface - CrudResourceGenConfig',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CrudResourceGenConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/api-interfaces/src/lib/resources/utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            baseUrl\n                                        \n                                \n                                \n                                        \n                                            resourcePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resourcePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resourcePath:         ResourcePath\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourcePath\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { call } from '@ntua-saas-10/shared-call';\nimport { HttpMethod, HttpAction } from '@ntua-saas-10/shared-consts';\n\nimport { ResourcePath } from './constants';\n\nconst { GET, POST, PATCH, DELETE } = HttpMethod;\nconst { list, retrieve, create, update, remove } = HttpAction;\n\nexport interface CrudResourceGenConfig {\n  resourcePath: ResourcePath;\n  baseUrl?: string;\n}\n\nexport const crudResourceGen = ({ resourcePath, baseUrl }: CrudResourceGenConfig) =>\n  ({\n    [list]: (): Promise> =>\n      call>({ url: resourcePath, method: GET, baseUrl }), // prettier-ignore\n    [retrieve]: (id: string): Promise =>\n      call({ url: `${resourcePath}/${id}`, method: GET, baseUrl }),\n    [create]: (body: T): Promise =>\n      call({ url: resourcePath, method: POST, data: body, baseUrl }),\n    [update]: (id: string, body: Partial): Promise> =>\n      call>({ url: `${resourcePath}/${id}`, method: PATCH, data: body, baseUrl }),\n    [remove]: (id: string): Promise =>\n      call({ url: `${resourcePath}/${id}`, method: DELETE, baseUrl }),\n  } as const);\n\nexport interface Resource {\n  [key: string]: (...args: T[]) => Promise;\n}\nexport interface ResourceGenConfig {\n  baseUrl: string;\n  method: HttpMethod;\n  path: string;\n  data?: T;\n}\n\nexport const resourceGen = ({ baseUrl, method, path, data }: ResourceGenConfig) =>\n  call({ baseUrl, method, url: path, data });\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/DatabaseModule.html': {
      url: 'modules/DatabaseModule.html',
      title: 'module - DatabaseModule',
      body: "\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/server/nest/database/src/lib/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forFeature\n                        \n                    \n                \n            \n            \n                \n                    \n                    forFeature(models: IFeatureModel[])\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/database/src/lib/database.module.ts:13\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    models\n                                    \n                                                IFeatureModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport type { Schema } from 'mongoose';\n\ninterface IFeatureModel {\n  name: string;\n  schema: Schema | Record;\n}\n\n@Module({})\nexport class DatabaseModule {\n  static forFeature(...models: IFeatureModel[]): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        MongooseModule.forFeature(models),\n        MongooseModule.forRootAsync({\n          imports: [ConfigModule],\n          useFactory: (configService: ConfigService) => ({\n            uri: configService.get('MONGODB_URI'),\n          }),\n          inject: [ConfigService],\n        }),\n      ],\n      exports: [MongooseModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/DatafilesController.html': {
      url: 'controllers/DatafilesController.html',
      title: 'controller - DatafilesController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  DatafilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/datafiles/src/lib/datafiles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                datafiles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteDatafile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadDatafile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        deleteDatafile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteDatafile(body: DeleteDatafileRequestDto, req: Types.AuthRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@HttpCode(204)@UsePipes(ZodValidationPipe)\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/datafiles/src/lib/datafiles.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                DeleteDatafileRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                Types.AuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        uploadDatafile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadDatafile(datafile: Express.Multer.File, body: UploadDatafileRequestDto, req: Types.AuthRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ZodValidationPipe)@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/datafiles/src/lib/datafiles.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datafile\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UploadDatafileRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                Types.AuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ZodValidationPipe } from '@anatine/zod-nestjs';\nimport {\n  Controller,\n  Post,\n  UseInterceptors,\n  UploadedFile,\n  Body,\n  Logger,\n  ParseFilePipe,\n  MaxFileSizeValidator,\n  FileTypeValidator,\n  UsePipes,\n  Req,\n  HttpStatus,\n  Delete,\n  HttpCode,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiConsumes } from '@nestjs/swagger';\nimport { FilenameService } from '@ntua-saas-10/server/nest/filename';\nimport { NotificationsService } from '@ntua-saas-10/server/nest/notifications';\nimport { ContentType, NotificationType } from '@ntua-saas-10/shared-consts';\nimport {\n  UploadDatafileRequestDto,\n  UploadDatafileResponseDto,\n  DeleteDatafileRequestDto,\n  DeleteDatafileResponseDto,\n} from '@ntua-saas-10/shared-dtos';\n\nimport { StoragePaths } from '@ntua-saas-10/shared-consts';\n\nimport type { Types } from '@ntua-saas-10/shared-types';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { Multer } from 'multer';\n\nimport { MAX_FILE_SIZE_KB } from './datafiles.constants';\nimport { DatafilesService } from './datafiles.service';\n\n@Controller('datafiles')\nexport class DatafilesController {\n  private readonly logger = new Logger(DatafilesController.name);\n  private readonly FILES_DESTINATION = StoragePaths.FILES_DESTINATION;\n\n  constructor(\n    private readonly datafilesService: DatafilesService,\n    private readonly filenameService: FilenameService,\n    private readonly notificationsService: NotificationsService,\n  ) {}\n\n  @Post()\n  @UsePipes(ZodValidationPipe)\n  @UseInterceptors(FileInterceptor('datafile'))\n  @ApiConsumes('multipart/form-data')\n  async uploadDatafile(\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({ maxSize: MAX_FILE_SIZE_KB }),\n          new FileTypeValidator({ fileType: ContentType.text_csv }),\n        ],\n      }),\n    )\n    datafile: Express.Multer.File,\n    @Body() body: UploadDatafileRequestDto,\n    @Req() req: Types.AuthRequest,\n  ): Promise {\n    const { uid } = req.user;\n    const { chartType, chartTitle } = body;\n\n    const { fileId, newFilename } = this.filenameService.generateFileInfo(\n      datafile.originalname,\n      chartType,\n    );\n    const uploadMetadata = await this.datafilesService.uploadToStorage(\n      datafile,\n      this.FILES_DESTINATION,\n      newFilename,\n      {\n        uid,\n        chartTitle: chartTitle ?? new Date().toLocaleString(),\n        chartType,\n        chartId: fileId,\n        nextStep: 'validate',\n        contentEncoding: 'UTF-8',\n      },\n    );\n\n    this.logger.log(`Uploaded file ${uploadMetadata.name} to ${uploadMetadata.mediaLink}`);\n\n    await this.notificationsService.saveNotificationToFirestore(req.user.uid, fileId, {\n      chartId: fileId,\n      type: NotificationType.success,\n      createdAt: new Date(),\n      delivered: false,\n      data: {\n        title: 'Datafile uploaded successfully',\n        message: 'Validation in progress...',\n      },\n    });\n\n    return {\n      statusCode: HttpStatus.OK,\n      message: 'Datafile uploaded successfully',\n      file: {\n        id: fileId,\n        name: uploadMetadata.name,\n        url: uploadMetadata.mediaLink,\n        meta: {\n          uid,\n          chartType,\n          createdAt: uploadMetadata.timeCreated,\n        },\n      },\n    };\n  }\n\n  @Delete()\n  @HttpCode(204)\n  @UsePipes(ZodValidationPipe)\n  async deleteDatafile(\n    @Body() body: DeleteDatafileRequestDto,\n    @Req() req: Types.AuthRequest,\n  ): Promise {\n    const { uploadedDatafilePath } = body;\n\n    await this.datafilesService.deleteFile(uploadedDatafilePath, req.user.uid);\n\n    this.logger.log(`Deleted file ${uploadedDatafilePath}`);\n\n    return {\n      statusCode: 204,\n      message: 'Datafile deleted successfully',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/DatafilesModule.html': {
      url: 'modules/DatafilesModule.html',
      title: 'module - DatafilesModule',
      body: "\n                   \n\n\n\n\n    Modules\n    DatafilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatafilesModule\n\n\n\ncluster_DatafilesModule_providers\n\n\n\n\nDatafilesService\n\nDatafilesService\n\n\n\nDatafilesModule\n\nDatafilesModule\n\nDatafilesModule -->\n\nDatafilesService->DatafilesModule\n\n\n\n\n\nFilenameService\n\nFilenameService\n\nDatafilesModule -->\n\nFilenameService->DatafilesModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nDatafilesModule -->\n\nNotificationsService->DatafilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/server/nest/datafiles/src/lib/datafiles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatafilesService\n                        \n                        \n                            FilenameService\n                        \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatafilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigModule } from '@nestjs/config';\nimport { FilenameService } from '@ntua-saas-10/server/nest/filename';\n\nimport { NotificationsService } from '@ntua-saas-10/server/nest/notifications';\n\nimport { DatafilesController } from './datafiles.controller';\nimport { DatafilesService } from './datafiles.service';\n\n@Module({\n  imports: [ConfigModule],\n  controllers: [DatafilesController],\n  providers: [DatafilesService, FilenameService, NotificationsService],\n})\nexport class DatafilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/DatafilesService.html': {
      url: 'injectables/DatafilesService.html',
      title: 'injectable - DatafilesService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatafilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/datafiles/src/lib/datafiles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                parseCsv\n                            \n                            \n                                    Async\n                                streamFromStorage\n                            \n                            \n                                    Async\n                                uploadRender\n                            \n                            \n                                    Async\n                                uploadToStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(filePath: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/datafiles/src/lib/datafiles.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseCsv\n                        \n                    \n                \n            \n            \n                \nparseCsv(fileBuffer: Buffer)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/datafiles/src/lib/datafiles.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileBuffer\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        streamFromStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    streamFromStorage(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/datafiles/src/lib/datafiles.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadRender\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadRender(buffer: Buffer, path: string, fileName: string, contentType: ContentType, metadata: Types.RenderMetadata)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/datafiles/src/lib/datafiles.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buffer\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                ContentType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            Types.RenderMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadToStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadToStorage(file: Express.Multer.File, path: string, filename: string, metadata: Types.DatafileMetadata)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/datafiles/src/lib/datafiles.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                Types.DatafileMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : admin.storage\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/datafiles/src/lib/datafiles.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { admin } from '@ntua-saas-10/server-firebase-admin';\nimport type { ContentType } from '@ntua-saas-10/shared-consts';\nimport type { Types } from '@ntua-saas-10/shared-types';\nimport { parse } from 'papaparse';\n\n@Injectable()\nexport class DatafilesService {\n  private storage = admin.storage;\n\n  async uploadToStorage(\n    file: Express.Multer.File,\n    path: string,\n    filename: string,\n    metadata: Types.DatafileMetadata,\n  ) {\n    const fileRef = this.storage.bucket().file(`${path}/${metadata.uid}/${filename}`);\n\n    await fileRef.save(file.buffer, {\n      metadata: { metadata },\n      contentType: file.mimetype,\n      public: true,\n    });\n\n    const [meta] = await fileRef.getMetadata();\n    return meta;\n  }\n\n  async streamFromStorage(name: string): Promise {\n    const fileRef = this.storage.bucket().file(name);\n    const stream = fileRef.createReadStream({ validation: false });\n\n    const chunks: Uint8Array[] = [];\n    return new Promise((resolve, reject) => {\n      stream.on('data', (chunk) => chunks.push(chunk));\n      stream.on('error', (error: Error) => reject(new BadRequestException(error.message)));\n      stream.on('end', () => resolve(Buffer.concat(chunks)));\n    });\n  }\n\n  async deleteFile(filePath: string, uid: string) {\n    try {\n      const fileRef = this.storage.bucket().file(filePath);\n      const [meta] = await fileRef.getMetadata();\n\n      if (meta.metadata.uid !== uid) {\n        throw new UnauthorizedException();\n      }\n\n      await fileRef.delete({ ignoreNotFound: true });\n    } catch (error) {\n      if (error instanceof UnauthorizedException) {\n        throw error;\n      }\n\n      throw new BadRequestException('File could not be deleted');\n    }\n  }\n\n  parseCsv(fileBuffer: Buffer) {\n    const parsedFile = parse(fileBuffer.toString(), {\n      fastMode: true,\n      header: true,\n    });\n\n    if (parsedFile.errors.length > 0)\n      throw new BadRequestException({ message: 'Invalid datafile', errors: parsedFile.errors });\n\n    return parsedFile;\n  }\n\n  async uploadRender(\n    buffer: Buffer,\n    path: string,\n    fileName: string,\n    contentType: ContentType,\n    metadata: Types.RenderMetadata,\n  ) {\n    const fileRef = this.storage\n      .bucket()\n      .file(`${path}/${metadata.uid}/${metadata.chartId}/${fileName}`);\n\n    await fileRef.save(buffer, {\n      contentType,\n      public: true,\n      metadata: { metadata },\n    });\n\n    const [meta] = await fileRef.getMetadata();\n    return meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/DeleteDatafileRequestDto.html': {
      url: 'classes/DeleteDatafileRequestDto.html',
      title: 'class - DeleteDatafileRequestDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteDatafileRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/delete-datafile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from \'@anatine/zod-nestjs\';\nimport { Schemas } from \'@ntua-saas-10/shared-schemas\';\n\nexport class DeleteDatafileRequestDto extends createZodDto(Schemas.DeleteDatafileRequestSchema) {}\n\nexport class DeleteDatafileResponseDto extends createZodDto(Schemas.DeleteDatafileResponseSchema) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/DeleteDatafileResponseDto.html': {
      url: 'classes/DeleteDatafileResponseDto.html',
      title: 'class - DeleteDatafileResponseDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteDatafileResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/delete-datafile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from \'@anatine/zod-nestjs\';\nimport { Schemas } from \'@ntua-saas-10/shared-schemas\';\n\nexport class DeleteDatafileRequestDto extends createZodDto(Schemas.DeleteDatafileRequestSchema) {}\n\nexport class DeleteDatafileResponseDto extends createZodDto(Schemas.DeleteDatafileResponseSchema) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/FilenameService.html': {
      url: 'injectables/FilenameService.html',
      title: 'injectable - FilenameService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilenameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/filename/src/lib/filename.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateFileInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileInfo\n                        \n                    \n                \n            \n            \n                \ngenerateFileInfo(filename: string, chartType: ChartType)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/filename/src/lib/filename.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartType\n                                    \n                                                ChartType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { fileId: any; newFilename: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { randomUUID } from 'crypto';\nimport { parse, extname } from 'path';\nimport type { ChartType } from '@ntua-saas-10/shared-consts';\n\n@Injectable()\nexport class FilenameService {\n  generateFileInfo(filename: string, chartType: ChartType) {\n    const originalFilename = parse(filename).name;\n    const fileExtension = extname(filename).replace('.', '');\n    const fileId = randomUUID();\n    const newFilename = `${originalFilename}__${fileId}__${chartType}.${fileExtension}`;\n    return { fileId, newFilename };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/FirebaseAdmin.html': {
      url: 'classes/FirebaseAdmin.html',
      title: 'class - FirebaseAdmin',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseAdmin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/firebase-admin/src/lib/index.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                app\n                            \n                            \n                                    Private\n                                    Static\n                                auth\n                            \n                            \n                                    Private\n                                    Static\n                                firestore\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Private\n                                    Static\n                                projectId\n                            \n                            \n                                    Private\n                                    Static\n                                storage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    app\n                                \n                                \n                                    storage\n                                \n                                \n                                    firestore\n                                \n                                \n                                    auth\n                                \n                                \n                                    projectId\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: FirebaseAdminConstructorConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/server/firebase-admin/src/lib/index.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        FirebaseAdminConstructorConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :         App\n\n                    \n                \n                    \n                        \n                                Defined in libs/server/firebase-admin/src/lib/index.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Auth\n\n                    \n                \n                    \n                        \n                                Defined in libs/server/firebase-admin/src/lib/index.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in libs/server/firebase-admin/src/lib/index.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/server/firebase-admin/src/lib/index.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in libs/server/firebase-admin/src/lib/index.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in libs/server/firebase-admin/src/lib/index.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        app\n                    \n                \n\n                \n                    \n                        getapp()\n                    \n                \n                            \n                                \n                                    Defined in libs/server/firebase-admin/src/lib/index.ts:50\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        storage\n                    \n                \n\n                \n                    \n                        getstorage()\n                    \n                \n                            \n                                \n                                    Defined in libs/server/firebase-admin/src/lib/index.ts:54\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firestore\n                    \n                \n\n                \n                    \n                        getfirestore()\n                    \n                \n                            \n                                \n                                    Defined in libs/server/firebase-admin/src/lib/index.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        auth\n                    \n                \n\n                \n                    \n                        getauth()\n                    \n                \n                            \n                                \n                                    Defined in libs/server/firebase-admin/src/lib/index.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n\n                \n                    \n                        getprojectId()\n                    \n                \n                            \n                                \n                                    Defined in libs/server/firebase-admin/src/lib/index.ts:66\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { type App, initializeApp, applicationDefault } from 'firebase-admin/app';\nimport { type Storage, getStorage } from 'firebase-admin/storage';\nimport { type Firestore, getFirestore } from 'firebase-admin/firestore';\nimport { type Auth, getAuth } from 'firebase-admin/auth';\n\nconst DEFINE_GCLOUD_PROJECT = 'DEFINE_GCLOUD_PROJECT';\n\ninterface FirebaseAdminConstructorConfig {\n  projectId?: string;\n}\n\nclass FirebaseAdmin {\n  private static app: App;\n  private static storage: Storage;\n  private static firestore: Firestore;\n  private static auth: Auth;\n  private static projectId: string | undefined;\n\n  constructor({ projectId }: FirebaseAdminConstructorConfig) {\n    this.init({ projectId });\n  }\n\n  public init = ({ projectId }: FirebaseAdminConstructorConfig = {}): void => {\n    if (!projectId || projectId === DEFINE_GCLOUD_PROJECT) {\n      console.warn('initializeFirebaseAdmin was called without a projectId');\n      return;\n    }\n\n    if (FirebaseAdmin.app) {\n      console.warn('FirebaseAdmin ALREADY initialized for: ', FirebaseAdmin.projectId);\n    } else {\n      console.warn(\n        '\\n\\n---------------------------\\n',\n        'FirebaseAdmin initializing for projectId: ',\n        projectId,\n        '\\n---------------------------\\n\\n',\n      );\n      FirebaseAdmin.app = initializeApp({\n        projectId,\n        credential: applicationDefault(),\n        storageBucket: `${projectId}.appspot.com`,\n      });\n      FirebaseAdmin.projectId = projectId;\n      FirebaseAdmin.storage = getStorage(FirebaseAdmin.app);\n      FirebaseAdmin.firestore = getFirestore(FirebaseAdmin.app);\n      FirebaseAdmin.auth = getAuth(FirebaseAdmin.app);\n    }\n  };\n\n  public get app(): App {\n    return FirebaseAdmin.app;\n  }\n\n  public get storage(): Storage {\n    return FirebaseAdmin.storage;\n  }\n\n  public get firestore(): Firestore {\n    return FirebaseAdmin.firestore;\n  }\n\n  public get auth(): Auth {\n    return FirebaseAdmin.auth;\n  }\n\n  public get projectId(): string | undefined {\n    return FirebaseAdmin.projectId;\n  }\n}\n\nconst admin = new FirebaseAdmin({\n  projectId: process.env.GCLOUD_PROJECT || DEFINE_GCLOUD_PROJECT,\n});\n\nconst storage = admin.storage;\nconst firestore = admin.firestore;\nconst auth = admin.auth;\nconst initializeFirebaseAdmin = admin.init;\n\nexport default { admin };\nexport { admin, storage, firestore, auth, initializeFirebaseAdmin };\nexport type { Storage, Firestore, Auth };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/FirebaseAdminConstructorConfig.html': {
      url: 'interfaces/FirebaseAdminConstructorConfig.html',
      title: 'interface - FirebaseAdminConstructorConfig',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseAdminConstructorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/firebase-admin/src/lib/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { type App, initializeApp, applicationDefault } from 'firebase-admin/app';\nimport { type Storage, getStorage } from 'firebase-admin/storage';\nimport { type Firestore, getFirestore } from 'firebase-admin/firestore';\nimport { type Auth, getAuth } from 'firebase-admin/auth';\n\nconst DEFINE_GCLOUD_PROJECT = 'DEFINE_GCLOUD_PROJECT';\n\ninterface FirebaseAdminConstructorConfig {\n  projectId?: string;\n}\n\nclass FirebaseAdmin {\n  private static app: App;\n  private static storage: Storage;\n  private static firestore: Firestore;\n  private static auth: Auth;\n  private static projectId: string | undefined;\n\n  constructor({ projectId }: FirebaseAdminConstructorConfig) {\n    this.init({ projectId });\n  }\n\n  public init = ({ projectId }: FirebaseAdminConstructorConfig = {}): void => {\n    if (!projectId || projectId === DEFINE_GCLOUD_PROJECT) {\n      console.warn('initializeFirebaseAdmin was called without a projectId');\n      return;\n    }\n\n    if (FirebaseAdmin.app) {\n      console.warn('FirebaseAdmin ALREADY initialized for: ', FirebaseAdmin.projectId);\n    } else {\n      console.warn(\n        '\\n\\n---------------------------\\n',\n        'FirebaseAdmin initializing for projectId: ',\n        projectId,\n        '\\n---------------------------\\n\\n',\n      );\n      FirebaseAdmin.app = initializeApp({\n        projectId,\n        credential: applicationDefault(),\n        storageBucket: `${projectId}.appspot.com`,\n      });\n      FirebaseAdmin.projectId = projectId;\n      FirebaseAdmin.storage = getStorage(FirebaseAdmin.app);\n      FirebaseAdmin.firestore = getFirestore(FirebaseAdmin.app);\n      FirebaseAdmin.auth = getAuth(FirebaseAdmin.app);\n    }\n  };\n\n  public get app(): App {\n    return FirebaseAdmin.app;\n  }\n\n  public get storage(): Storage {\n    return FirebaseAdmin.storage;\n  }\n\n  public get firestore(): Firestore {\n    return FirebaseAdmin.firestore;\n  }\n\n  public get auth(): Auth {\n    return FirebaseAdmin.auth;\n  }\n\n  public get projectId(): string | undefined {\n    return FirebaseAdmin.projectId;\n  }\n}\n\nconst admin = new FirebaseAdmin({\n  projectId: process.env.GCLOUD_PROJECT || DEFINE_GCLOUD_PROJECT,\n});\n\nconst storage = admin.storage;\nconst firestore = admin.firestore;\nconst auth = admin.auth;\nconst initializeFirebaseAdmin = admin.init;\n\nexport default { admin };\nexport { admin, storage, firestore, auth, initializeFirebaseAdmin };\nexport type { Storage, Firestore, Auth };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/FirebaseAuthMiddleware.html': {
      url: 'injectables/FirebaseAuthMiddleware.html',
      title: 'injectable - FirebaseAuthMiddleware',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/firebase-auth-middleware/src/lib/firebase-auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: AuthRequest, _: AuthResponse, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/firebase-auth-middleware/src/lib/firebase-auth.middleware.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                AuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _\n                                    \n                                                AuthResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(FirebaseAuthMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/firebase-auth-middleware/src/lib/firebase-auth.middleware.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  NestMiddleware,\n  UnauthorizedException,\n  BadRequestException,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { auth } from '@ntua-saas-10/server-firebase-admin';\nimport { UserRole } from '@ntua-saas-10/shared-consts';\n\nimport type { AuthRequest, AuthResponse, UserCustomClaims } from '@ntua-saas-10/shared-types';\nimport type { NextFunction } from 'express';\n\nconst ERROR_MSG = {\n  INVALID_TOKEN: 'Invalid token',\n  USER_DISABLED: 'User is disabled',\n  INSUFFICIENT_PERMISSIONS: 'User Authorization failed - Insufficient permissions',\n  UNAUTHENTICATED: 'User Authentication failed',\n} as const;\n\n@Injectable()\nexport class FirebaseAuthMiddleware implements NestMiddleware {\n  private readonly logger = new Logger(FirebaseAuthMiddleware.name);\n\n  async use(req: AuthRequest, _: AuthResponse, next: NextFunction) {\n    const jwt = req.headers.authorization;\n    if (!jwt?.startsWith('Bearer ')) {\n      this.logger.error(ERROR_MSG.INVALID_TOKEN);\n      throw new BadRequestException(ERROR_MSG.INVALID_TOKEN);\n    }\n\n    const idToken = jwt.split('Bearer ')[1] || '';\n    try {\n      const user = await auth.verifyIdToken(idToken);\n      req['user'] = user;\n\n      // const customClaims = (await auth.getUser(user.uid)).customClaims as UserCustomClaims;\n      // req['customClaims'] = Object.keys(customClaims || {}).length > 0 ? customClaims : {};\n      //\n      // if (customClaims.disabled === true) {\n      //   this.logger.error(ERROR_MSG.USER_DISABLED);\n      //   throw new ForbiddenException(ERROR_MSG.USER_DISABLED);\n      // }\n      //\n      // if (!customClaims.roles?.includes(UserRole.user)) {\n      //   this.logger.error(ERROR_MSG.INSUFFICIENT_PERMISSIONS);\n      //   throw new ForbiddenException(ERROR_MSG.INSUFFICIENT_PERMISSIONS);\n      // }\n      return next();\n    } catch (error) {\n      const e = error as Error;\n      this.logger.error(error);\n      throw new UnauthorizedException(ERROR_MSG.UNAUTHENTICATED, {\n        cause: e,\n        description: e?.message || ERROR_MSG.UNAUTHENTICATED,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/FirebaseWeb.html': {
      url: 'classes/FirebaseWeb.html',
      title: 'class - FirebaseWeb',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseWeb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/firebase/src/lib/index.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                app\n                            \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                firestore\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connectEmulators\n                            \n                            \n                                initializeFirebaseWebApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: FirebaseOptions)\n                    \n                \n                        \n                            \n                                Defined in libs/web/firebase/src/lib/index.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        FirebaseOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseApp\n\n                    \n                \n                    \n                        \n                                Defined in libs/web/firebase/src/lib/index.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Auth\n\n                    \n                \n                    \n                        \n                                Defined in libs/web/firebase/src/lib/index.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseOptions\n\n                    \n                \n                    \n                        \n                                Defined in libs/web/firebase/src/lib/index.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in libs/web/firebase/src/lib/index.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/web/firebase/src/lib/index.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connectEmulators\n                        \n                    \n                \n            \n            \n                \nconnectEmulators()\n                \n            \n\n\n            \n                \n                    Defined in libs/web/firebase/src/lib/index.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeFirebaseWebApp\n                        \n                    \n                \n            \n            \n                \ninitializeFirebaseWebApp()\n                \n            \n\n\n            \n                \n                    Defined in libs/web/firebase/src/lib/index.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FirebaseApp\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { env, type FirebaseOptions } from '@ntua-saas-10/web/env';\nimport { initializeApp, type FirebaseApp } from 'firebase/app';\nimport { getAuth, connectAuthEmulator, type Auth } from 'firebase/auth';\nimport { getFirestore, connectFirestoreEmulator, type Firestore } from 'firebase/firestore';\n\nclass FirebaseWeb {\n  config: FirebaseOptions;\n  app: FirebaseApp;\n  auth: Auth;\n  firestore: Firestore;\n  projectId: string;\n\n  constructor(config: FirebaseOptions) {\n    this.config = config || {};\n    if (Object.keys(this.config).length === 0) {\n      throw new Error('VITE_PUBLIC_FIREBASE_CONFIG env var is not set');\n    }\n    this.app = this.initializeFirebaseWebApp();\n    this.auth = getAuth(this.app);\n    this.firestore = getFirestore(this.app);\n    this.projectId = this.config.projectId;\n\n    const isDevMode = import.meta.env.DEV === true;\n    if (isDevMode) {\n      this.connectEmulators();\n    }\n  }\n\n  initializeFirebaseWebApp(): FirebaseApp {\n    try {\n      return initializeApp(this.config);\n    } catch (error) {\n      throw new Error('Firebase web initializeApp error - @ntua-saas-10/web/firebase');\n    }\n  }\n\n  connectEmulators(): void {\n    const LOCALHOST = 'localhost';\n    connectAuthEmulator(this.auth, `http://${LOCALHOST}:${env.VITE_PUBLIC_AUTH_EMULATOR_PORT}`);\n    connectFirestoreEmulator(\n      this.firestore,\n      LOCALHOST,\n      Number(env.VITE_PUBLIC_FIRESTORE_EMULATOR_PORT),\n    );\n  }\n}\n\nconst firebase = new FirebaseWeb(env.VITE_PUBLIC_FIREBASE_CONFIG);\n\nexport const auth: Auth = firebase.auth;\nexport const firestore: Firestore = firebase.firestore;\nexport const projectId: string = firebase.projectId;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/GetUsersDto.html': {
      url: 'classes/GetUsersDto.html',
      title: 'class - GetUsersDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from '@anatine/zod-nestjs';\nimport { extendApi } from '@anatine/zod-openapi';\nimport { ResourcePath } from '@ntua-saas-10/shared-api-interfaces';\nimport { ResourcesSchemas } from '@ntua-saas-10/shared-schemas';\n\nconst resourceName = 'User';\nconst resourcePath: ResourcePath = 'users';\n\nconst { retrieve, list, create, update } = ResourcesSchemas[ResourcePath[resourcePath]];\n\nexport const UserZ = extendApi(retrieve, {\n  title: resourceName,\n  description: `Retrieve a ${resourceName}`,\n});\nexport const GetUsersZ = extendApi(list, {\n  title: `List${resourceName}s`,\n  description: `List all ${resourceName}s`,\n  type: 'array',\n});\nexport const CreateUserZ = extendApi(create, {\n  title: `Create${resourceName}`,\n  description: `Create a ${resourceName}`,\n});\nexport const UpdateUserZ = extendApi(update, {\n  title: `Update${resourceName}`,\n  description: `Update a ${resourceName}`,\n});\n\nexport class UserDto extends createZodDto(UserZ) {}\nexport class GetUsersDto extends createZodDto(GetUsersZ) {}\nexport class CreateUserDto extends createZodDto(CreateUserZ) {}\nexport class UpdateUserDto extends createZodDto(UpdateUserZ) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/I18nStreamController.html': {
      url: 'controllers/I18nStreamController.html',
      title: 'controller - I18nStreamController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  I18nStreamController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/i18n-stream/src/lib/i18n-stream.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                i18n\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getLanguage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLanguage(lng: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':lng')\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/i18n-stream/src/lib/i18n-stream.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lng\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     StreamableFile\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, StreamableFile, UsePipes } from '@nestjs/common';\nimport { I18nStreamService } from './i18n-stream.service';\nimport { ZodValidationPipe } from '@anatine/zod-nestjs';\n//import { ApiCreatedResponse } from '@nestjs/swagger';\n//import { I18nStreamDto } from '@ntua-saas-10/api-interfaces';\n\n@Controller('i18n')\n@UsePipes(ZodValidationPipe)\nexport class I18nStreamController {\n  constructor(private readonly i18nStreamService: I18nStreamService) {}\n\n  @Get(':lng')\n  /* @ApiCreatedResponse({\n    type: I18nStreamDto,\n  }) */\n  getLanguage(@Param('lng') lng: string): StreamableFile {\n    return new StreamableFile(this.i18nStreamService.getStream(`${lng}.json`));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/I18nStreamDto.html': {
      url: 'classes/I18nStreamDto.html',
      title: 'class - I18nStreamDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18nStreamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/i18n-stream.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from '@anatine/zod-nestjs';\nimport { extendApi } from '@anatine/zod-openapi';\nimport { Schemas } from '@ntua-saas-10/shared-schemas';\n\nexport const { I18nStreamSchema } = Schemas.ServicesSchemas;\nexport const GetI18nStreamZ = extendApi(I18nStreamSchema);\n\nexport class I18nStreamDto extends createZodDto(GetI18nStreamZ) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/I18nStreamModule.html': {
      url: 'modules/I18nStreamModule.html',
      title: 'module - I18nStreamModule',
      body: "\n                   \n\n\n\n\n    Modules\n    I18nStreamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_I18nStreamModule\n\n\n\ncluster_I18nStreamModule_providers\n\n\n\n\nI18nStreamService\n\nI18nStreamService\n\n\n\nI18nStreamModule\n\nI18nStreamModule\n\nI18nStreamModule -->\n\nI18nStreamService->I18nStreamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/server/nest/i18n-stream/src/lib/i18n-stream.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            I18nStreamService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            I18nStreamController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(undefined: I18nStreamModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/i18n-stream/src/lib/i18n-stream.module.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                I18nStreamModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { InjectionToken } from '@nestjs/common';\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { I18nStreamController } from './i18n-stream.controller';\nimport { I18nStreamService } from './i18n-stream.service';\nimport { ServeStaticModule } from '@nestjs/serve-static';\n// needed because of reasons\nimport '@nestjs/platform-express';\n\ninterface I18nStreamModuleOptions {\n  /**\n   * The path to the i18n directory\n   */\n  rootPath: string;\n}\n\nexport const ROOT_PATH: InjectionToken = 'ROOT_PATH';\n\n@Module({\n  controllers: [I18nStreamController],\n  providers: [I18nStreamService],\n})\nexport class I18nStreamModule {\n  static forRoot({ rootPath }: I18nStreamModuleOptions): DynamicModule {\n    return {\n      module: I18nStreamModule,\n      imports: [\n        ServeStaticModule.forRoot({\n          rootPath,\n          serveStaticOptions: {\n            dotfiles: 'deny',\n            cacheControl: true,\n            maxAge: '1d',\n            immutable: true,\n            index: false,\n          },\n        }),\n      ],\n      providers: [\n        {\n          provide: ROOT_PATH,\n          useValue: rootPath,\n        },\n        I18nStreamService,\n      ],\n      exports: [I18nStreamService, ROOT_PATH],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/I18nStreamModuleOptions.html': {
      url: 'interfaces/I18nStreamModuleOptions.html',
      title: 'interface - I18nStreamModuleOptions',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  I18nStreamModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/i18n-stream/src/lib/i18n-stream.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            rootPath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rootPath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rootPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path to the i18n directory\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@nestjs/common';\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { I18nStreamController } from './i18n-stream.controller';\nimport { I18nStreamService } from './i18n-stream.service';\nimport { ServeStaticModule } from '@nestjs/serve-static';\n// needed because of reasons\nimport '@nestjs/platform-express';\n\ninterface I18nStreamModuleOptions {\n  /**\n   * The path to the i18n directory\n   */\n  rootPath: string;\n}\n\nexport const ROOT_PATH: InjectionToken = 'ROOT_PATH';\n\n@Module({\n  controllers: [I18nStreamController],\n  providers: [I18nStreamService],\n})\nexport class I18nStreamModule {\n  static forRoot({ rootPath }: I18nStreamModuleOptions): DynamicModule {\n    return {\n      module: I18nStreamModule,\n      imports: [\n        ServeStaticModule.forRoot({\n          rootPath,\n          serveStaticOptions: {\n            dotfiles: 'deny',\n            cacheControl: true,\n            maxAge: '1d',\n            immutable: true,\n            index: false,\n          },\n        }),\n      ],\n      providers: [\n        {\n          provide: ROOT_PATH,\n          useValue: rootPath,\n        },\n        I18nStreamService,\n      ],\n      exports: [I18nStreamService, ROOT_PATH],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/I18nStreamService.html': {
      url: 'injectables/I18nStreamService.html',
      title: 'injectable - I18nStreamService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  I18nStreamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/i18n-stream/src/lib/i18n-stream.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                rootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rootPath: string)\n                    \n                \n                        \n                            \n                                Defined in libs/server/nest/i18n-stream/src/lib/i18n-stream.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rootPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStream\n                        \n                    \n                \n            \n            \n                \ngetStream(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/i18n-stream/src/lib/i18n-stream.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReadStream\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        rootPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/i18n-stream/src/lib/i18n-stream.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { type ReadStream, createReadStream } from 'fs';\nimport { join } from 'path';\n\n@Injectable()\nexport class I18nStreamService {\n  private readonly rootPath: string;\n\n  constructor(@Inject('ROOT_PATH') rootPath: string) {\n    this.rootPath = rootPath;\n  }\n\n  getStream(filename: string): ReadStream {\n    return createReadStream(join(this.rootPath, filename));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/IFeatureModel.html': {
      url: 'interfaces/IFeatureModel.html',
      title: 'interface - IFeatureModel',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFeatureModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/database/src/lib/database.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            schema\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schema:     Schema | Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema | Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport type { Schema } from 'mongoose';\n\ninterface IFeatureModel {\n  name: string;\n  schema: Schema | Record;\n}\n\n@Module({})\nexport class DatabaseModule {\n  static forFeature(...models: IFeatureModel[]): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        MongooseModule.forFeature(models),\n        MongooseModule.forRootAsync({\n          imports: [ConfigModule],\n          useFactory: (configService: ConfigService) => ({\n            uri: configService.get('MONGODB_URI'),\n          }),\n          inject: [ConfigService],\n        }),\n      ],\n      exports: [MongooseModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/JwtCustomClaims.html': {
      url: 'interfaces/JwtCustomClaims.html',
      title: 'interface - JwtCustomClaims',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtCustomClaims\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/hooks/src/lib/useJwtClaims.hook.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ParsedToken\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customClaims\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customClaims\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customClaims:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Types } from '@ntua-saas-10/shared-types';\nimport { auth } from '@ntua-saas-10/web/firebase';\nimport type { ParsedToken } from 'firebase/auth';\nimport { useState, useEffect } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nexport interface JwtCustomClaims extends ParsedToken {\n  customClaims?: Partial;\n}\n\n/**\n * @returns [jwtClaims] The custom claims of the user, if any.\n */\nexport const useJwtClaims = (): [JwtCustomClaims | null] => {\n  const [jwtClaims, setJwtClaims] = useState(null);\n  const [user] = useAuthState(auth);\n  useEffect(() => {\n    if (user) {\n      user.getIdTokenResult().then((tokenResult) => {\n        setJwtClaims(tokenResult.claims as JwtCustomClaims);\n      });\n    } else {\n      setJwtClaims(null);\n    }\n  }, [user]);\n\n  return [jwtClaims];\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/NotificationsService.html': {
      url: 'injectables/NotificationsService.html',
      title: 'injectable - NotificationsService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/notifications/src/lib/notifications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                NOTIFICATIONS_COLLECTION_PATH\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                saveNotificationToFirestore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveNotificationToFirestore\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveNotificationToFirestore(uid: string, docId: string, notification: Types.UserNotification)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/notifications/src/lib/notifications.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    notification\n                                    \n                                                Types.UserNotification\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(NotificationsService.name)\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/notifications/src/lib/notifications.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        NOTIFICATIONS_COLLECTION_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CollectionsPaths.NOTIFICATIONS_COLLECTION_PATH\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/notifications/src/lib/notifications.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { firestore } from '@ntua-saas-10/server-firebase-admin';\nimport { Types } from '@ntua-saas-10/shared-types';\n\nimport { CollectionsPaths } from '@ntua-saas-10/shared-consts';\n\n@Injectable()\nexport class NotificationsService {\n  private readonly logger = new Logger(NotificationsService.name);\n  private readonly NOTIFICATIONS_COLLECTION_PATH = CollectionsPaths.NOTIFICATIONS_COLLECTION_PATH;\n  async saveNotificationToFirestore(\n    uid: string,\n    docId: string,\n    notification: Types.UserNotification,\n  ) {\n    try {\n      await firestore\n        .collection(this.NOTIFICATIONS_COLLECTION_PATH.replace('{uid}', uid))\n        .add(notification);\n    } catch (error) {\n      this.logger.error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/Render.html': {
      url: 'interfaces/Render.html',
      title: 'interface - Render',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Render\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/types/src/lib/types/Render.type.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the result of a chart rendering operation.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buffer\n                                        \n                                \n                                \n                                        \n                                            contentType\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The buffer containing the rendered chart data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentType:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The content type of the rendered chart.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The timestamp when the rendering was created.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the render.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"svg\" | \"pdf\" | \"png\" | \"html\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"svg\" | \"pdf\" | \"png\" | \"html\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the rendered chart.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { ChartType } from '@ntua-saas-10/shared-consts';\nimport type { ChartConfiguration } from 'chart.js';\n\n/**\n * Represents the parameters required for rendering a chart.\n */\nexport interface RenderParams {\n  /**\n   * The ID of the render.\n   */\n  id: string;\n  /**\n   * The configuration object for the chart.\n   */\n  chartConfig: ChartConfiguration;\n  /**\n   * The options for rendering the chart.\n   */\n  options: {\n    /**\n     * The content type of the rendered chart.\n     */\n    contentType: 'image/svg+xml' | 'image/png' | 'application/pdf' | 'text/html';\n    /**\n     * The resolution of the rendered chart.\n     */\n    resolution: {\n      /**\n       * The width of the rendered chart.\n       */\n      width: number;\n      /**\n       * The height of the rendered chart.\n       */\n      height: number;\n    };\n  };\n}\n\n/**\n * Represents the result of a chart rendering operation.\n */\nexport interface Render {\n  /**\n   * The ID of the render.\n   */\n  id: string;\n  /**\n   * The buffer containing the rendered chart data.\n   */\n  buffer: Buffer;\n  /**\n   * The content type of the rendered chart.\n   */\n  contentType: RenderParams['options']['contentType'];\n  /**\n   * The type of the rendered chart.\n   */\n  type: 'svg' | 'pdf' | 'png' | 'html';\n  /**\n   * The timestamp when the rendering was created.\n   */\n  createdAt: Date;\n}\n\n/**\n * Represents metadata associated with a rendered chart.\n */\nexport interface RenderMetadata {\n  /**\n   * The ID of the chart.\n   */\n  chartId: string;\n  /**\n   * The ID of the user who owns the chart.\n   */\n  uid: string;\n  /**\n   * The type of the chart.\n   */\n  chartType: ChartType;\n  /**\n   * The timestamp when the rendering was created.\n   */\n  createdAt: Date;\n  /**\n   * The timestamp when the rendering was created.\n   */\n  nextStep: 'NO_NEXT_STEP';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/RenderChartConfigRequestDto.html': {
      url: 'classes/RenderChartConfigRequestDto.html',
      title: 'class - RenderChartConfigRequestDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenderChartConfigRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/render-chart-config.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from \'@anatine/zod-nestjs\';\nimport { Schemas } from \'@ntua-saas-10/shared-schemas\';\n\nexport class RenderChartConfigRequestDto extends createZodDto(\n  Schemas.ResourcesSchemas.renders.create,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'controllers/RenderController.html': {
      url: 'controllers/RenderController.html',
      title: 'controller - RenderController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  RenderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/render/src/lib/render.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                render\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                renderChartConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        renderChartConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    renderChartConfig(body: RenderChartConfigRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('render-config')@UsePipes(ZodValidationPipe)\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/render/src/lib/render.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                RenderChartConfigRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ZodValidationPipe } from '@anatine/zod-nestjs';\nimport { Controller, Post, Body, Logger, UsePipes } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { ChartConfigService } from '@ntua-saas-10/server/nest/chart-config';\nimport { DatafilesService } from '@ntua-saas-10/server/nest/datafiles';\nimport { fireAndForget } from '@ntua-saas-10/server/nest/utils';\nimport { firestore } from '@ntua-saas-10/server-firebase-admin';\n\nimport { RenderChartConfigRequestDto } from '@ntua-saas-10/shared-dtos';\nimport type { Types } from '@ntua-saas-10/shared-types';\nimport type { DocumentReference } from 'firebase-admin/firestore';\n\nimport { renderMapperConfig } from './render.constants';\nimport { RenderService } from './render.service';\n\nimport { CollectionsPaths } from '@ntua-saas-10/shared-consts';\nimport { StoragePaths } from '@ntua-saas-10/shared-consts';\n\n@Controller('render')\nexport class RenderController {\n  private readonly logger: Logger;\n  constructor(\n    private readonly renderService: RenderService,\n    private readonly datafilesService: DatafilesService,\n    private readonly chartConfigService: ChartConfigService,\n  ) {\n    this.logger = new Logger(RenderController.name);\n  }\n\n  @Post('render-config')\n  @UsePipes(ZodValidationPipe)\n  async renderChartConfig(@Body() body: RenderChartConfigRequestDto) {\n    const { uid, chartId } = body;\n\n    const chartRef = firestore\n      .collection(CollectionsPaths.CHARTS_COLLECTION_PATH.replace('{uid}', uid))\n      .doc(chartId) as DocumentReference;\n    const chartSnapshot = await chartRef.get();\n    const { chartType, chartConfig } = chartSnapshot.data() as Types.Chart;\n\n    fireAndForget(async () => {\n      const renderParamsArray: Types.RenderParams[] = renderMapperConfig.map(({ contentType }) => ({\n        id: chartId,\n        chartConfig: chartConfig,\n        options: {\n          contentType,\n          resolution: {\n            width: 1024,\n            height: 680,\n          },\n        },\n      }));\n\n      const renders = await Promise.all(\n        renderParamsArray.map((params) => this.renderService.render(params)),\n      );\n\n      const uploadsMetadata = await Promise.all(\n        renders.map(({ buffer, type, contentType, createdAt }) =>\n          this.datafilesService.uploadRender(\n            buffer,\n            StoragePaths.RENDERS_DESTINATION,\n            `${chartId}.${type}`,\n            contentType,\n            {\n              uid,\n              chartId,\n              chartType,\n              createdAt,\n              nextStep: 'NO_NEXT_STEP',\n            },\n          ),\n        ),\n      );\n\n      await this.chartConfigService.saveChartsMediaLinks(uploadsMetadata);\n    });\n\n    return {\n      statusCode: 201,\n      message: `Chart rendering scheduled`,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/RenderMetadata.html': {
      url: 'interfaces/RenderMetadata.html',
      title: 'interface - RenderMetadata',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RenderMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/types/src/lib/types/Render.type.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents metadata associated with a rendered chart.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartId\n                                        \n                                \n                                \n                                        \n                                            chartType\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            nextStep\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the chart.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chartType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartType:         ChartType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChartType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the chart.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The timestamp when the rendering was created.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextStep\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextStep:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The timestamp when the rendering was created.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user who owns the chart.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { ChartType } from '@ntua-saas-10/shared-consts';\nimport type { ChartConfiguration } from 'chart.js';\n\n/**\n * Represents the parameters required for rendering a chart.\n */\nexport interface RenderParams {\n  /**\n   * The ID of the render.\n   */\n  id: string;\n  /**\n   * The configuration object for the chart.\n   */\n  chartConfig: ChartConfiguration;\n  /**\n   * The options for rendering the chart.\n   */\n  options: {\n    /**\n     * The content type of the rendered chart.\n     */\n    contentType: 'image/svg+xml' | 'image/png' | 'application/pdf' | 'text/html';\n    /**\n     * The resolution of the rendered chart.\n     */\n    resolution: {\n      /**\n       * The width of the rendered chart.\n       */\n      width: number;\n      /**\n       * The height of the rendered chart.\n       */\n      height: number;\n    };\n  };\n}\n\n/**\n * Represents the result of a chart rendering operation.\n */\nexport interface Render {\n  /**\n   * The ID of the render.\n   */\n  id: string;\n  /**\n   * The buffer containing the rendered chart data.\n   */\n  buffer: Buffer;\n  /**\n   * The content type of the rendered chart.\n   */\n  contentType: RenderParams['options']['contentType'];\n  /**\n   * The type of the rendered chart.\n   */\n  type: 'svg' | 'pdf' | 'png' | 'html';\n  /**\n   * The timestamp when the rendering was created.\n   */\n  createdAt: Date;\n}\n\n/**\n * Represents metadata associated with a rendered chart.\n */\nexport interface RenderMetadata {\n  /**\n   * The ID of the chart.\n   */\n  chartId: string;\n  /**\n   * The ID of the user who owns the chart.\n   */\n  uid: string;\n  /**\n   * The type of the chart.\n   */\n  chartType: ChartType;\n  /**\n   * The timestamp when the rendering was created.\n   */\n  createdAt: Date;\n  /**\n   * The timestamp when the rendering was created.\n   */\n  nextStep: 'NO_NEXT_STEP';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/RenderModule.html': {
      url: 'modules/RenderModule.html',
      title: 'module - RenderModule',
      body: "\n                   \n\n\n\n\n    Modules\n    RenderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RenderModule\n\n\n\ncluster_RenderModule_providers\n\n\n\n\nChartConfigService\n\nChartConfigService\n\n\n\nRenderModule\n\nRenderModule\n\nRenderModule -->\n\nChartConfigService->RenderModule\n\n\n\n\n\nDatafilesService\n\nDatafilesService\n\nRenderModule -->\n\nDatafilesService->RenderModule\n\n\n\n\n\nRenderService\n\nRenderService\n\nRenderModule -->\n\nRenderService->RenderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/server/nest/render/src/lib/render.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChartConfigService\n                        \n                        \n                            DatafilesService\n                        \n                        \n                            RenderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RenderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChartConfigService } from '@ntua-saas-10/server/nest/chart-config';\nimport { DatafilesService } from '@ntua-saas-10/server/nest/datafiles';\n\nimport { RenderController } from './render.controller';\n\nimport { RenderService } from './render.service';\n\n@Module({\n  controllers: [RenderController],\n  providers: [RenderService, DatafilesService, ChartConfigService],\n})\nexport class RenderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/RenderParams.html': {
      url: 'interfaces/RenderParams.html',
      title: 'interface - RenderParams',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RenderParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/types/src/lib/types/Render.type.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the parameters required for rendering a chart.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartConfig\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartConfig:         ChartConfiguration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChartConfiguration\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The configuration object for the chart.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the render.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The options for rendering the chart.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { ChartType } from '@ntua-saas-10/shared-consts';\nimport type { ChartConfiguration } from 'chart.js';\n\n/**\n * Represents the parameters required for rendering a chart.\n */\nexport interface RenderParams {\n  /**\n   * The ID of the render.\n   */\n  id: string;\n  /**\n   * The configuration object for the chart.\n   */\n  chartConfig: ChartConfiguration;\n  /**\n   * The options for rendering the chart.\n   */\n  options: {\n    /**\n     * The content type of the rendered chart.\n     */\n    contentType: 'image/svg+xml' | 'image/png' | 'application/pdf' | 'text/html';\n    /**\n     * The resolution of the rendered chart.\n     */\n    resolution: {\n      /**\n       * The width of the rendered chart.\n       */\n      width: number;\n      /**\n       * The height of the rendered chart.\n       */\n      height: number;\n    };\n  };\n}\n\n/**\n * Represents the result of a chart rendering operation.\n */\nexport interface Render {\n  /**\n   * The ID of the render.\n   */\n  id: string;\n  /**\n   * The buffer containing the rendered chart data.\n   */\n  buffer: Buffer;\n  /**\n   * The content type of the rendered chart.\n   */\n  contentType: RenderParams['options']['contentType'];\n  /**\n   * The type of the rendered chart.\n   */\n  type: 'svg' | 'pdf' | 'png' | 'html';\n  /**\n   * The timestamp when the rendering was created.\n   */\n  createdAt: Date;\n}\n\n/**\n * Represents metadata associated with a rendered chart.\n */\nexport interface RenderMetadata {\n  /**\n   * The ID of the chart.\n   */\n  chartId: string;\n  /**\n   * The ID of the user who owns the chart.\n   */\n  uid: string;\n  /**\n   * The type of the chart.\n   */\n  chartType: ChartType;\n  /**\n   * The timestamp when the rendering was created.\n   */\n  createdAt: Date;\n  /**\n   * The timestamp when the rendering was created.\n   */\n  nextStep: 'NO_NEXT_STEP';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/RenderService.html': {
      url: 'injectables/RenderService.html',
      title: 'injectable - RenderService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/render/src/lib/render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(undefined: Types.RenderParams)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/render/src/lib/render.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Types.RenderParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(RenderService.name)\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/render/src/lib/render.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException, Logger } from '@nestjs/common';\nimport { ContentType } from '@ntua-saas-10/shared-consts';\nimport type { Types } from '@ntua-saas-10/shared-types';\nimport { Canvas } from 'canvas';\nimport { Chart } from 'chart.js/auto';\n\nimport { ContentTypeMapper } from './render.constants';\n\nconst { image_svg_xml, application_pdf, image_png, text_html } = ContentType;\n\n@Injectable()\nexport class RenderService {\n  private readonly logger = new Logger(RenderService.name);\n\n  render({ id, chartConfig, options }: Types.RenderParams): Promise {\n    return new Promise((resolve, reject) => {\n      const {\n        resolution: { width, height },\n        contentType,\n      } = options;\n      const { canvasType, renderType } = ContentTypeMapper[contentType];\n      this.logger.log(`Rendering ${renderType} chart with ${canvasType} canvas`);\n\n      try {\n        const canvas = new Canvas(width, height, canvasType);\n        const context = canvas.getContext('2d') as unknown as CanvasRenderingContext2D;\n        new Chart(context, chartConfig);\n\n        const render: Types.Render = {\n          id,\n          buffer: Buffer.from(''),\n          contentType,\n          type: renderType,\n          createdAt: new Date(),\n        };\n\n        switch (contentType) {\n          case text_html:\n            render.buffer = Buffer.from(`${canvas.toBuffer().toString()}`);\n            break;\n          case application_pdf:\n            render.buffer = canvas.toBuffer(application_pdf);\n            break;\n          case image_png:\n            render.buffer = canvas.toBuffer(image_png);\n            break;\n          case image_svg_xml:\n          default:\n            render.buffer = canvas.toBuffer();\n            break;\n        }\n        return resolve(render);\n      } catch (error) {\n        reject(error);\n        this.logger.error(error);\n        throw new InternalServerErrorException(\"Couldn't render chart\");\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/Resource.html': {
      url: 'interfaces/Resource.html',
      title: 'interface - Resource',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Resource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/api-interfaces/src/lib/resources/utils.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Promise\n\n                    \n                \n                        \n                            \n                                Defined in libs/shared/api-interfaces/src/lib/resources/utils.ts:28\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { call } from '@ntua-saas-10/shared-call';\nimport { HttpMethod, HttpAction } from '@ntua-saas-10/shared-consts';\n\nimport { ResourcePath } from './constants';\n\nconst { GET, POST, PATCH, DELETE } = HttpMethod;\nconst { list, retrieve, create, update, remove } = HttpAction;\n\nexport interface CrudResourceGenConfig {\n  resourcePath: ResourcePath;\n  baseUrl?: string;\n}\n\nexport const crudResourceGen = ({ resourcePath, baseUrl }: CrudResourceGenConfig) =>\n  ({\n    [list]: (): Promise> =>\n      call>({ url: resourcePath, method: GET, baseUrl }), // prettier-ignore\n    [retrieve]: (id: string): Promise =>\n      call({ url: `${resourcePath}/${id}`, method: GET, baseUrl }),\n    [create]: (body: T): Promise =>\n      call({ url: resourcePath, method: POST, data: body, baseUrl }),\n    [update]: (id: string, body: Partial): Promise> =>\n      call>({ url: `${resourcePath}/${id}`, method: PATCH, data: body, baseUrl }),\n    [remove]: (id: string): Promise =>\n      call({ url: `${resourcePath}/${id}`, method: DELETE, baseUrl }),\n  } as const);\n\nexport interface Resource {\n  [key: string]: (...args: T[]) => Promise;\n}\nexport interface ResourceGenConfig {\n  baseUrl: string;\n  method: HttpMethod;\n  path: string;\n  data?: T;\n}\n\nexport const resourceGen = ({ baseUrl, method, path, data }: ResourceGenConfig) =>\n  call({ baseUrl, method, url: path, data });\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/ResourceDeleted.html': {
      url: 'interfaces/ResourceDeleted.html',
      title: 'interface - ResourceDeleted',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResourceDeleted\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/users/src/lib/users.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            deleted\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ZodValidationPipe } from '@anatine/zod-nestjs';\nimport { Body, Controller, Get, Param, Patch, Post, Delete, UsePipes } from '@nestjs/common';\nimport { ApiCreatedResponse } from '@nestjs/swagger';\nimport { UserDto, GetUsersDto, CreateUserDto, UpdateUserDto } from '@ntua-saas-10/shared-dtos';\nimport { User } from '@ntua-saas-10/shared-types';\n\nimport { UsersService } from './users.service';\n\ninterface ResourceDeleted {\n  id: string;\n  deleted: boolean;\n}\n\n@Controller('users')\n@UsePipes(ZodValidationPipe)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  @ApiCreatedResponse({\n    type: GetUsersDto,\n  })\n  async list(): Promise {\n    return await this.usersService.list();\n  }\n\n  @Get(':id')\n  @ApiCreatedResponse({\n    type: CreateUserDto,\n  })\n  async retrieve(@Param('id') id: string): Promise {\n    return await this.usersService.retrieve(id);\n  }\n\n  @Post()\n  @ApiCreatedResponse({\n    type: UserDto,\n  })\n  async create(@Body() createUserDto: CreateUserDto): Promise {\n    return await this.usersService.create(createUserDto);\n  }\n\n  @Patch(':id')\n  @ApiCreatedResponse({\n    type: UpdateUserDto,\n  })\n  async update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto): Promise {\n    return await this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @ApiCreatedResponse({\n    type: UserDto,\n  })\n  async remove(@Param('id') id: string): Promise {\n    const deleted = await this.usersService.remove(id);\n    return { id, deleted };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/ResourceGenConfig.html': {
      url: 'interfaces/ResourceGenConfig.html',
      title: 'interface - ResourceGenConfig',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResourceGenConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/api-interfaces/src/lib/resources/utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            baseUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         HttpMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { call } from '@ntua-saas-10/shared-call';\nimport { HttpMethod, HttpAction } from '@ntua-saas-10/shared-consts';\n\nimport { ResourcePath } from './constants';\n\nconst { GET, POST, PATCH, DELETE } = HttpMethod;\nconst { list, retrieve, create, update, remove } = HttpAction;\n\nexport interface CrudResourceGenConfig {\n  resourcePath: ResourcePath;\n  baseUrl?: string;\n}\n\nexport const crudResourceGen = ({ resourcePath, baseUrl }: CrudResourceGenConfig) =>\n  ({\n    [list]: (): Promise> =>\n      call>({ url: resourcePath, method: GET, baseUrl }), // prettier-ignore\n    [retrieve]: (id: string): Promise =>\n      call({ url: `${resourcePath}/${id}`, method: GET, baseUrl }),\n    [create]: (body: T): Promise =>\n      call({ url: resourcePath, method: POST, data: body, baseUrl }),\n    [update]: (id: string, body: Partial): Promise> =>\n      call>({ url: `${resourcePath}/${id}`, method: PATCH, data: body, baseUrl }),\n    [remove]: (id: string): Promise =>\n      call({ url: `${resourcePath}/${id}`, method: DELETE, baseUrl }),\n  } as const);\n\nexport interface Resource {\n  [key: string]: (...args: T[]) => Promise;\n}\nexport interface ResourceGenConfig {\n  baseUrl: string;\n  method: HttpMethod;\n  path: string;\n  data?: T;\n}\n\nexport const resourceGen = ({ baseUrl, method, path, data }: ResourceGenConfig) =>\n  call({ baseUrl, method, url: path, data });\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/ServerNestClusterModule.html': {
      url: 'modules/ServerNestClusterModule.html',
      title: 'module - ServerNestClusterModule',
      body: '\n                   \n\n\n\n\n    Modules\n    ServerNestClusterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerNestClusterModule\n\n\n\ncluster_ServerNestClusterModule_providers\n\n\n\n\nClusterModule\n\nClusterModule\n\n\n\nServerNestClusterModule\n\nServerNestClusterModule\n\nServerNestClusterModule -->\n\nClusterModule->ServerNestClusterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/server/nest/cluster/src/lib/server-nest-cluster.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClusterModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\n\nimport { ClusterModule } from \'./server-nest-cluster.service\';\n\n@Module({\n  providers: [ClusterModule],\n})\nexport class ServerNestClusterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/SignUpFormSpecs.html': {
      url: 'interfaces/SignUpFormSpecs.html',
      title: 'interface - SignUpFormSpecs',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpFormSpecs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/features/signup/src/lib/schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultValues\n                                        \n                                \n                                \n                                        \n                                            fields\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultValues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultValues:         SignUpFormData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SignUpFormData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { z } from 'zod';\nimport { getErrorMessages } from './utils';\nimport { MAX_PASSWORD_LENGTH, MIN_PASSWORD_LENGTH } from './constants';\nimport type { Types } from '@ntua-saas-10/shared-types';\nimport type { TFunction } from 'i18next';\n\nexport const getPasswordSchema = (t: TFunction): z.ZodString => {\n  const errMsg = getErrorMessages(t);\n  return z\n    .string()\n    .min(MIN_PASSWORD_LENGTH, errMsg.minPasswordLength())\n    .max(MAX_PASSWORD_LENGTH, errMsg.maxPasswordLength());\n};\n\nexport const getSignUpFormSchema = (t: TFunction, password: z.ZodString) => {\n  const errMsg = getErrorMessages(t);\n  return z\n    .object({\n      email: z.string().email(errMsg.invalidEmail()),\n      password: password,\n      passwordRepeat: password,\n    })\n    .refine(({ password, passwordRepeat }) => password === passwordRepeat, {\n      message: errMsg.passwordsDontMatch(),\n      path: ['passwordRepeat'],\n    });\n};\n\nexport type SignUpFormData = z.infer>;\nexport type SignUpFormFields = keyof SignUpFormData;\n\nexport interface SignUpFormSpecs {\n  defaultValues: SignUpFormData;\n  fields: {\n    [key in SignUpFormFields]: Types.FieldSpec;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/SignUpProps.html': {
      url: 'interfaces/SignUpProps.html',
      title: 'interface - SignUpProps',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/features/signup/src/lib/index.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            t\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        t\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        t:     TFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import styled from '@emotion/styled';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { Divider, Stack, colors } from '@mui/material';\nimport { TranslationKeys } from '@ntua-saas-10/shared-consts';\nimport { auth } from '@ntua-saas-10/web/firebase';\nimport { useFsDoc } from '@ntua-saas-10/web/hooks';\nimport { UiButton } from '@ntua-saas-10/web/ui/button';\nimport { UiCard } from '@ntua-saas-10/web/ui/card';\nimport { UiProgressSpinner } from '@ntua-saas-10/web/ui/progress-spinner';\nimport { UiSpinnerButton } from '@ntua-saas-10/web/ui/spinner-button';\nimport type { FirebaseError } from 'firebase/app';\nimport { createUserWithEmailAndPassword, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport hoistStatics from 'hoist-non-react-statics';\nimport type { TFunction } from 'i18next';\nimport { useMemo } from 'react';\nimport { FormContainer, TextFieldElement, useForm } from 'react-hook-form-mui';\nimport { withTranslation } from 'react-i18next';\n\nimport { TRANSLATION_KEY_PREFIX } from './constants';\nimport {\n  type SignUpFormData,\n  type SignUpFormSpecs,\n  getPasswordSchema,\n  getSignUpFormSchema,\n} from './schema';\nimport { getErrorMessages } from './utils';\n\ninterface SignUpProps {\n  t: TFunction;\n}\n\nconst StyledUiCard = styled(UiCard)(() => ({\n  maxWidth: '400px',\n}));\n\nconst FlexContainer = styled.div(() => ({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '24px',\n  justifyContent: 'center',\n  alignItems: 'center',\n}));\n\nconst SignUp: React.FC = ({ t }) => {\n  const SignUpFormSchema = getSignUpFormSchema(t, getPasswordSchema(t));\n  const [formSpec] = useFsDoc('form-specs/signup-form');\n\n  const [fields, defaultValues] = useMemo(() => {\n    const { fields, defaultValues } = formSpec || {};\n    return [fields, defaultValues];\n  }, [formSpec]);\n\n  const resolver = zodResolver(SignUpFormSchema);\n  const ctx = useForm({\n    defaultValues,\n    resolver,\n    mode: 'onChange',\n  });\n\n  const signUpWithEmail = async ({ email, password }: SignUpFormData) => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n    } catch (error: unknown) {\n      onError(error as FirebaseError);\n    }\n  };\n\n  const onGoogleSignIn = async () => {\n    try {\n      await signInWithPopup(auth, new GoogleAuthProvider());\n    } catch (error: unknown) {\n      onError(error as FirebaseError);\n    }\n  };\n\n  const onError = (e: FirebaseError) => {\n    //const { errors } = TranslationKeys.auth\n    const { emailAlreadyInUse } = getErrorMessages(t);\n    switch (e.code) {\n      case 'auth/email-already-in-use':\n        ctx.setError('email', { type: 'manual', message: emailAlreadyInUse() });\n        break;\n      default:\n        break;\n    }\n    ctx.setError('root', { type: 'manual', message: e.message });\n  };\n\n  const ErrorDisplay = ({ error }: { error?: string }) => {\n    return error ? {error} : null;\n  };\n\n  const SignUpForm = ({ fields, defaultValues }: SignUpFormSpecs) => {\n    return (\n      \n        \n          \n          \n          \n          \n            {t(TranslationKeys.auth.signUpWithEmail)}\n          \n        \n      \n    );\n  };\n\n  return (\n    \n      \n        \n          {t(TranslationKeys.auth.signUpWithGoogle)}\n        \n        \n          {t(TranslationKeys.auth.or)}\n        \n        {fields && defaultValues ? (\n          \n        ) : (\n          \n        )}\n        {/*\n          {ctx.formState.errors && }\n         */}\n      \n    \n  );\n};\nexport default hoistStatics(\n  withTranslation('translation', { keyPrefix: TRANSLATION_KEY_PREFIX })(SignUp),\n  SignUp,\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/SpinnerButtonProps.html': {
      url: 'interfaces/SpinnerButtonProps.html',
      title: 'interface - SpinnerButtonProps',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpinnerButtonProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/ui/spinner-button/src/lib/types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UiButtonProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            isDone\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isDone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UiButtonProps } from \'@ntua-saas-10/web/ui/button\';\n\nexport interface SpinnerButtonProps extends UiButtonProps {\n  isLoading: boolean;\n  isDone?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/ToastMessageProps.html': {
      url: 'interfaces/ToastMessageProps.html',
      title: 'interface - ToastMessageProps',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToastMessageProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/ui/toast/src/lib/index.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Typography from \'@mui/material/Typography\';\nexport interface ToastMessageProps {\n  title: string;\n  message?: string;\n}\n\nexport function ToastMessage({ title, message }: ToastMessageProps) {\n  return (\n    \n      {title}\n      {message && {message}}\n    \n  );\n}\n\nexport default ToastMessage;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/ToolbarProps.html': {
      url: 'interfaces/ToolbarProps.html',
      title: 'interface - ToolbarProps',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToolbarProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/ui/toolbar/src/lib/index.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     React.ReactNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     React.ReactNode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import styled from \'@emotion/styled\';\nimport { AppBar as MuiAppBar, Toolbar as MuiToolbar } from \'@mui/material\';\n\nconst StyledAppBar = styled(MuiAppBar)`\n  background-color: #f8f8f8;\n  color: #333333;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nconst StyledToolbar = styled(MuiToolbar)`\n  padding: 0;\n  min-height: 48px;\n`;\n\ninterface ToolbarProps {\n  children: React.ReactNode;\n}\n\nconst Toolbar: React.FC = ({ children }) => {\n  return (\n    \n      {children}\n    \n  );\n};\n\nexport default Toolbar;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'controllers/TransactionController.html': {
      url: 'controllers/TransactionController.html',
      title: 'controller - TransactionController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/transaction/src/lib/transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transaction\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                abortTransaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                verifyTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        abortTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    abortTransaction(req: AuthRequest, body: TransactionRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('abort')@UsePipes(ZodValidationPipe)@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/transaction/src/lib/transaction.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                AuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                TransactionRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        verifyTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyTransaction(body: TransactionRequestDto, req: AuthRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verify')@UsePipes(ZodValidationPipe)@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/transaction/src/lib/transaction.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                TransactionRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                AuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ZodValidationPipe } from '@anatine/zod-nestjs';\nimport { Body, Controller, HttpCode, Post, Req, UsePipes } from '@nestjs/common';\nimport { ChartConfigService } from '@ntua-saas-10/server/nest/chart-config';\nimport { DatafilesService } from '@ntua-saas-10/server/nest/datafiles';\nimport { TransactionRequestDto } from '@ntua-saas-10/shared-dtos';\nimport type { AuthRequest } from '@ntua-saas-10/shared-types';\n\nimport { TransactionService } from './transaction.service';\n\n@Controller('transaction')\nexport class TransactionController {\n  constructor(\n    private readonly transactionService: TransactionService,\n    private readonly chartConfigService: ChartConfigService,\n    private readonly datafilesService: DatafilesService,\n  ) {}\n\n  @Post('verify')\n  @UsePipes(ZodValidationPipe)\n  @HttpCode(200)\n  async verifyTransaction(@Body() body: TransactionRequestDto, @Req() req: AuthRequest) {\n    await this.transactionService.removeCreditsAndClaimChart(req.user.uid, body.chartId);\n\n    return {\n      statusCode: 200,\n      message: 'Transaction executed successfully',\n    };\n  }\n\n  @Post('abort')\n  @UsePipes(ZodValidationPipe)\n  @HttpCode(200)\n  async abortTransaction(@Req() req: AuthRequest, @Body() body: TransactionRequestDto) {\n    const { uid } = req.user;\n    const { chartId, uploadedDatafilePath } = body;\n\n    await this.chartConfigService.deleteChartConfig(uid, chartId);\n    // await this.datafilesService.deleteFile(uploadedDatafilePath, req.user.uid);\n\n    return {\n      statusCode: 200,\n      message: 'Transaction has been aborted',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/TransactionModule.html': {
      url: 'modules/TransactionModule.html',
      title: 'module - TransactionModule',
      body: "\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nChartConfigService\n\nChartConfigService\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nChartConfigService->TransactionModule\n\n\n\n\n\nDatafilesService\n\nDatafilesService\n\nTransactionModule -->\n\nDatafilesService->TransactionModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/server/nest/transaction/src/lib/transaction.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChartConfigService\n                        \n                        \n                            DatafilesService\n                        \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChartConfigService } from '@ntua-saas-10/server/nest/chart-config';\nimport { DatafilesService } from '@ntua-saas-10/server/nest/datafiles';\nimport { TransactionController } from './transaction.controller';\nimport { TransactionService } from './transaction.service';\n\n@Module({\n  controllers: [TransactionController],\n  providers: [TransactionService, ChartConfigService, DatafilesService],\n})\nexport class TransactionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/TransactionRequestDto.html': {
      url: 'classes/TransactionRequestDto.html',
      title: 'class - TransactionRequestDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/abort-transaction.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schemas } from \'@ntua-saas-10/shared-schemas\';\nimport { createZodDto } from \'@anatine/zod-nestjs\';\n\nexport class TransactionRequestDto extends createZodDto(\n  Schemas.ServicesSchemas.TransactionSchema,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/TransactionService.html': {
      url: 'injectables/TransactionService.html',
      title: 'injectable - TransactionService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/transaction/src/lib/transaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                CHARTS_COLLECTION_PATH\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                USERS_COLLECTION_PATH\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeCreditsAndClaimChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeCreditsAndClaimChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCreditsAndClaimChart(uid: string, chartId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/transaction/src/lib/transaction.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CHARTS_COLLECTION_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CollectionsPaths.CHARTS_COLLECTION_PATH\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/transaction/src/lib/transaction.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TransactionService.name)\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/transaction/src/lib/transaction.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        USERS_COLLECTION_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CollectionsPaths.USERS_COLLECTION_PATH\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/transaction/src/lib/transaction.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { firestore } from '@ntua-saas-10/server-firebase-admin';\nimport { CollectionsPaths, Quota } from '@ntua-saas-10/shared-consts';\nimport type { User, Chart } from '@ntua-saas-10/shared-types';\nimport type { DocumentReference } from 'firebase-admin/firestore';\n\n@Injectable()\nexport class TransactionService {\n  private readonly USERS_COLLECTION_PATH = CollectionsPaths.USERS_COLLECTION_PATH;\n  private readonly CHARTS_COLLECTION_PATH = CollectionsPaths.CHARTS_COLLECTION_PATH;\n  private readonly logger = new Logger(TransactionService.name);\n\n  async removeCreditsAndClaimChart(uid: string, chartId: string) {\n    const userRef = firestore.doc(\n      `${this.USERS_COLLECTION_PATH}/${uid}`,\n    ) as DocumentReference;\n\n    const chartRef = firestore.doc(\n      `${this.CHARTS_COLLECTION_PATH.replace('{uid}', uid)}/${chartId}`,\n    ) as DocumentReference;\n\n    await firestore.runTransaction(async (transaction) => {\n      this.logger.log(`Removing credits and claiming chart ${chartId} for user ${uid}`);\n      const userDoc = await transaction.get(userRef);\n      const user = userDoc.data();\n      if (!(user && chartRef)) {\n        throw new NotFoundException(`User ${uid} not found with chart ${chartId}`);\n      }\n      const updatedQuota = (user.customClaims.quota?.current || -1) - Quota.creditsPerChart;\n      if (updatedQuota >= 0) {\n        transaction.update(userRef, {\n          'customClaims.quota.current': updatedQuota,\n        });\n        transaction.update(chartRef, {\n          claimed: true,\n        });\n\n        this.logger.log(`User ${uid} has ${updatedQuota} credits left`);\n      } else {\n        throw new ForbiddenException('Not enough credits');\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/UiButtonProps.html': {
      url: 'interfaces/UiButtonProps.html',
      title: 'interface - UiButtonProps',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UiButtonProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/ui/button/src/lib/types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            variant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     React.ReactNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     React.ReactNode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         UiButtonColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UiButtonColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClick:         MouseEventHandler\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MouseEventHandler\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         UiButtonType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UiButtonType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:     "text" | "outlined" | "contained"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     "text" | "outlined" | "contained"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { MouseEventHandler } from \'react\';\nimport type { ButtonProps as MuiButtonProps } from \'@mui/material\';\nimport type { UiButtonColor, UiButtonType } from \'./consts\';\n\nexport type UiButtonType = (typeof UiButtonType)[number];\nexport type UiButtonColor = (typeof UiButtonColor)[keyof typeof UiButtonColor];\nexport interface UiButtonProps extends Omit {\n  children?: React.ReactNode;\n  color?: UiButtonColor;\n  type?: UiButtonType;\n  disabled?: boolean;\n  variant?: \'text\' | \'outlined\' | \'contained\';\n  onClick?: MouseEventHandler;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/UiCardProps.html': {
      url: 'interfaces/UiCardProps.html',
      title: 'interface - UiCardProps',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UiCardProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/ui/card/src/lib/index.tsx\n        \n\n\n\n            \n                Extends\n            \n            \n                    CardProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     React.ReactNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     React.ReactNode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card, { type CardProps } from '@mui/material/Card';\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  backgroundColor: '#fff',\n  borderRadius: '15px',\n  boxShadow: `0px 2px 10px ${theme.palette.grey[400]}`,\n  color: theme.palette.text.secondary,\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  gap: '1rem',\n  padding: '2rem',\n  margin: '1rem',\n  border: '1px solid #ddd',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-3px)',\n    boxShadow: `0px 4px 20px ${theme.palette.secondary.main}`,\n  },\n}));\n\ninterface UiCardProps extends CardProps {\n  children: React.ReactNode;\n}\n\nconst UiCard: React.FC = ({ children, ...rest }) => {\n  return {children};\n};\n\nexport default UiCard;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/UiHeaderProps.html': {
      url: 'interfaces/UiHeaderProps.html',
      title: 'interface - UiHeaderProps',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UiHeaderProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/ui/header/src/lib/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alt\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     React.ReactNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     React.ReactNode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { MouseEventHandler } from \'react\';\n\nexport interface UiHeaderProps {\n  children?: React.ReactNode;\n  links: {\n    label: string;\n    path: string;\n    isButton?: boolean;\n    handler?: () => MouseEventHandler | undefined;\n  }[];\n  brand: string;\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdateUserDto.html': {
      url: 'classes/UpdateUserDto.html',
      title: 'class - UpdateUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from '@anatine/zod-nestjs';\nimport { extendApi } from '@anatine/zod-openapi';\nimport { ResourcePath } from '@ntua-saas-10/shared-api-interfaces';\nimport { ResourcesSchemas } from '@ntua-saas-10/shared-schemas';\n\nconst resourceName = 'User';\nconst resourcePath: ResourcePath = 'users';\n\nconst { retrieve, list, create, update } = ResourcesSchemas[ResourcePath[resourcePath]];\n\nexport const UserZ = extendApi(retrieve, {\n  title: resourceName,\n  description: `Retrieve a ${resourceName}`,\n});\nexport const GetUsersZ = extendApi(list, {\n  title: `List${resourceName}s`,\n  description: `List all ${resourceName}s`,\n  type: 'array',\n});\nexport const CreateUserZ = extendApi(create, {\n  title: `Create${resourceName}`,\n  description: `Create a ${resourceName}`,\n});\nexport const UpdateUserZ = extendApi(update, {\n  title: `Update${resourceName}`,\n  description: `Update a ${resourceName}`,\n});\n\nexport class UserDto extends createZodDto(UserZ) {}\nexport class GetUsersDto extends createZodDto(GetUsersZ) {}\nexport class CreateUserDto extends createZodDto(CreateUserZ) {}\nexport class UpdateUserDto extends createZodDto(UpdateUserZ) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/UploadCsvChartFileProps.html': {
      url: 'interfaces/UploadCsvChartFileProps.html',
      title: 'interface - UploadCsvChartFileProps',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadCsvChartFileProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/web/src/app/components/UploadCsvChartFile/index.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            setActiveStep\n                                        \n                                \n                                \n                                        \n                                            setFileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        setActiveStep\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setActiveStep:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setFileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setFileId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { zodResolver } from '@hookform/resolvers/zod';\nimport { Box, FormControlLabel, FormLabel, Radio, RadioGroup, Stack } from '@mui/material';\nimport { ChartType } from '@ntua-saas-10/shared-consts';\nimport { UploadWizard, type UploadWizardRef } from '@ntua-saas-10/web/features/upload-wizard';\nimport { UiSpinnerButton } from '@ntua-saas-10/web/ui/spinner-button';\nimport React, { useEffect, useRef } from 'react';\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\n\nimport { z } from 'zod';\n\nimport { MAX_FILE_SIZE } from '../../constants/app.constants';\nimport { StepperActions } from '../Stepper';\n\nconst { line, bubble, multiAxisLine, polarArea, radar, scatter } = ChartType;\nconst UploadCsvChartFormSchema = z.object({\n  chartTitle: z.string().default('default chart title'),\n  chartType: z.nativeEnum(ChartType),\n  files: z.array(z.instanceof(File)),\n});\n\ntype UploadWizardFormData = z.infer;\n\nconst ChartTypeLabels = {\n  [line]: 'Line',\n  [bubble]: 'Bubble',\n  [multiAxisLine]: 'Multi-Axis Line ',\n  [polarArea]: 'Polar Area',\n  [radar]: 'Radar',\n  [scatter]: 'Scatter',\n} as const;\n\ninterface UploadCsvChartFileProps {\n  setActiveStep: (value: React.SetStateAction) => void;\n  setFileId: (value: React.SetStateAction) => void;\n}\n\nexport const UploadCsvChartFile: React.FC = ({\n  setActiveStep,\n  setFileId,\n}) => {\n  const methods = useForm({\n    resolver: zodResolver(UploadCsvChartFormSchema),\n  });\n  const { control, formState, watch } = methods;\n  const wizardRef = useRef(null);\n  const chartType = watch('chartType');\n  useEffect(() => {\n    if (wizardRef.current?.fileId) {\n      setActiveStep((prev) => (prev + 1) as StepperActions);\n      setFileId(wizardRef.current?.fileId);\n    }\n  }, [wizardRef.current?.fileId, setActiveStep, setFileId]);\n\n  return (\n    \n      \n         {\n            if (wizardRef.current?.meta) {\n              wizardRef.current.meta = { chartType };\n              wizardRef.current?.onSubmit(e);\n            }\n          }}\n        >\n          \n            Upload a CSV file\n             (\n                \n              )}\n            />\n\n            Select Chart Type\n             (\n                \n                  {Object.values(ChartType).map((type) => (\n                    }\n                      label={ChartTypeLabels[type]}\n                    />\n                  ))}\n                \n              )}\n            />\n            \n              Upload File\n            \n          \n        \n      \n    \n  );\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UploadDatafileRequestDto.html': {
      url: 'classes/UploadDatafileRequestDto.html',
      title: 'class - UploadDatafileRequestDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadDatafileRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/upload-datafile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from \'@anatine/zod-nestjs\';\nimport { Schemas } from \'@ntua-saas-10/shared-schemas\';\n\nexport class UploadDatafileRequestDto extends createZodDto(Schemas.UploadDatafileRequestSchema) {}\nexport class UploadDatafileResponseDto extends createZodDto(Schemas.UploadDatafileResponseSchema) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UploadDatafileResponseDto.html': {
      url: 'classes/UploadDatafileResponseDto.html',
      title: 'class - UploadDatafileResponseDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadDatafileResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/upload-datafile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from \'@anatine/zod-nestjs\';\nimport { Schemas } from \'@ntua-saas-10/shared-schemas\';\n\nexport class UploadDatafileRequestDto extends createZodDto(Schemas.UploadDatafileRequestSchema) {}\nexport class UploadDatafileResponseDto extends createZodDto(Schemas.UploadDatafileResponseSchema) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/UploadFileSchemaOptions.html': {
      url: 'interfaces/UploadFileSchemaOptions.html',
      title: 'interface - UploadFileSchemaOptions',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadFileSchemaOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/types/src/lib/types/UploadFileSchemaOptions.type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allowedTypes\n                                        \n                                \n                                \n                                        \n                                            maxFileSize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowedTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedTypes:         ContentType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ContentType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ContentType of a file that can be uploaded.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxFileSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxFileSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The maximum size of the file in bytes.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { ContentType } from \'@ntua-saas-10/shared-consts\';\n\nexport interface UploadFileSchemaOptions {\n  /**\n   * The `ContentType` of a file that can be uploaded.\n   */\n  allowedTypes: ContentType[];\n  /**\n   * The maximum `size` of the file in bytes.\n   * @example 5MB = 5 * 1024 * 1024 = 5242880\n   */\n  maxFileSize: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/UploadWizardFormData.html': {
      url: 'interfaces/UploadWizardFormData.html',
      title: 'interface - UploadWizardFormData',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadWizardFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/features/upload-wizard/src/lib/types.ts\n        \n\n\n            \n                Description\n            \n            \n                The FormData of the upload multipart form\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            files\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The FileList of the upload multipart form\nSee https://developer.mozilla.org/en-US/docs/Web/API/FileList\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { ContentType } from '@ntua-saas-10/shared-consts';\nimport type { FormEvent } from 'react';\n\nexport type FormMetadata = { [key: string]: string | Blob };\n\nexport interface UploadWizardProps {\n  /**\n   * The `path` of the API endpoint repsponsible for the upload action\n   */\n  path: string;\n\n  /**\n   * The `Content-Type` of the upload multipart form\n   * @default 'text/plain'\n   */\n  mimeType?: ContentType;\n\n  /**\n   * The `maxFileSize` of the upload multipart form\n   * @default 5e6 (5MB)\n   */\n  maxFileSize?: number;\n\n  /**\n   * Key-Value pairs for the FormData append method\n   */\n  formMetadata: FormMetadata;\n}\n\n/**\n * The `FormData` of the upload multipart form\n */\nexport interface UploadWizardFormData {\n  /**\n   * The `FileList` of the upload multipart form\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/FileList\n   */\n  files: File[];\n}\n\nexport interface UploadWizardRef {\n  onSubmit: (e: FormEvent) => void;\n  files: readonly File[];\n  fileId: string | null;\n  meta: FormMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/UploadWizardProps.html': {
      url: 'interfaces/UploadWizardProps.html',
      title: 'interface - UploadWizardProps',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadWizardProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/features/upload-wizard/src/lib/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            formMetadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxFileSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        formMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formMetadata:         FormMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Key-Value pairs for the FormData append method\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxFileSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxFileSize:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 5e6 (5MB)\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maxFileSize of the upload multipart form\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         ContentType\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 'text/plain'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         ContentType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Content-Type of the upload multipart form\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path of the API endpoint repsponsible for the upload action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { ContentType } from '@ntua-saas-10/shared-consts';\nimport type { FormEvent } from 'react';\n\nexport type FormMetadata = { [key: string]: string | Blob };\n\nexport interface UploadWizardProps {\n  /**\n   * The `path` of the API endpoint repsponsible for the upload action\n   */\n  path: string;\n\n  /**\n   * The `Content-Type` of the upload multipart form\n   * @default 'text/plain'\n   */\n  mimeType?: ContentType;\n\n  /**\n   * The `maxFileSize` of the upload multipart form\n   * @default 5e6 (5MB)\n   */\n  maxFileSize?: number;\n\n  /**\n   * Key-Value pairs for the FormData append method\n   */\n  formMetadata: FormMetadata;\n}\n\n/**\n * The `FormData` of the upload multipart form\n */\nexport interface UploadWizardFormData {\n  /**\n   * The `FileList` of the upload multipart form\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/FileList\n   */\n  files: File[];\n}\n\nexport interface UploadWizardRef {\n  onSubmit: (e: FormEvent) => void;\n  files: readonly File[];\n  fileId: string | null;\n  meta: FormMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/UploadWizardRef.html': {
      url: 'interfaces/UploadWizardRef.html',
      title: 'interface - UploadWizardRef',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadWizardRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/features/upload-wizard/src/lib/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileId\n                                        \n                                \n                                \n                                        \n                                            files\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            onSubmit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileId:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         FormMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSubmit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onSubmit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { ContentType } from '@ntua-saas-10/shared-consts';\nimport type { FormEvent } from 'react';\n\nexport type FormMetadata = { [key: string]: string | Blob };\n\nexport interface UploadWizardProps {\n  /**\n   * The `path` of the API endpoint repsponsible for the upload action\n   */\n  path: string;\n\n  /**\n   * The `Content-Type` of the upload multipart form\n   * @default 'text/plain'\n   */\n  mimeType?: ContentType;\n\n  /**\n   * The `maxFileSize` of the upload multipart form\n   * @default 5e6 (5MB)\n   */\n  maxFileSize?: number;\n\n  /**\n   * Key-Value pairs for the FormData append method\n   */\n  formMetadata: FormMetadata;\n}\n\n/**\n * The `FormData` of the upload multipart form\n */\nexport interface UploadWizardFormData {\n  /**\n   * The `FileList` of the upload multipart form\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/FileList\n   */\n  files: File[];\n}\n\nexport interface UploadWizardRef {\n  onSubmit: (e: FormEvent) => void;\n  files: readonly File[];\n  fileId: string | null;\n  meta: FormMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/UseHookFormProps.html': {
      url: 'interfaces/UseHookFormProps.html',
      title: 'interface - UseHookFormProps',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UseHookFormProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/hooks/src/lib/useHookForm.hook.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            defaultValues\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            httpConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            httpMethod\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            response\n                                        \n                                \n                                \n                                        \n                                            schema\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultValues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultValues:     DeepPartial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DeepPartial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpConfig:     AxiosRequestConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AxiosRequestConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpMethod:         Exclude\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Exclude\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"onSubmit\" | \"onChange\" | \"onBlur\" | \"onTouched\" | \"all\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"onSubmit\" | \"onChange\" | \"onBlur\" | \"onTouched\" | \"all\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response:     K\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     K\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schema:     z.ZodObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     z.ZodObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { zodResolver } from '@hookform/resolvers/zod';\nimport { HttpMethod } from '@ntua-saas-10/shared-consts';\nimport type { AxiosRequestConfig } from 'axios';\nimport { useForm, type DeepPartial, type ErrorOption } from 'react-hook-form';\n\nimport { type ZodRawShape, z } from 'zod';\n\nimport { useReactMutation } from './useReactMutation.hook';\n\ninterface UseHookFormProps {\n  path: string;\n  schema: z.ZodObject;\n  httpMethod?: Exclude;\n  httpConfig?: AxiosRequestConfig;\n  defaultValues?: DeepPartial;\n  mode?: 'onSubmit' | 'onChange' | 'onBlur' | 'onTouched' | 'all';\n  response?: K;\n}\n\n/**\n *  Hook for React Hook Form with React Query\n * @param path HTTP path to the API endpoint\n * @param schema `Zod Schema` for validation\n * @param httpMethod Default is `POST`\n * @param defaultValues Default values for the form\n * @returns Mutate function, isLoading, isError, error, isSuccess, data\n */\nexport const useHookForm = ({\n  path,\n  schema,\n  httpMethod = HttpMethod.POST,\n  httpConfig = {},\n  defaultValues,\n  mode = 'onSubmit',\n}: UseHookFormProps) => {\n  const { mutate, ...mutation } = useReactMutation(path, httpMethod, httpConfig);\n  const methods = useForm({\n    defaultValues,\n    mode,\n    resolver: zodResolver(schema),\n  });\n\n  const submitFn = (data: T) => {\n    try {\n      mutate(data);\n    } catch (error: unknown) {\n      const e = error as ErrorOption;\n      methods.setError('root', e);\n    }\n  };\n\n  return {\n    ...mutation,\n    methods,\n    submitFn,\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/UseReactMutation.html': {
      url: 'interfaces/UseReactMutation.html',
      title: 'interface - UseReactMutation',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UseReactMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/web/hooks/src/lib/useReactMutation.hook.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            isError\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                                \n                                        \n                                            isSuccess\n                                        \n                                \n                                \n                                        \n                                            mutate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     K | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     K | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     Error | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Error | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuccess\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSuccess:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mutate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpMethod } from '@ntua-saas-10/shared-consts';\nimport { useMutation } from '@tanstack/react-query';\n\nimport type { AxiosRequestConfig } from 'axios';\n\nimport { BASE_URL, DEFAULT_HEADERS } from './constants';\nimport { useAxios } from './useAxios.hook';\n\ninterface UseReactMutation {\n  mutate: (data: T) => void;\n  isLoading: boolean;\n  isError: boolean;\n  error: Error | null;\n  isSuccess: boolean;\n  data: K | undefined;\n}\n\n/**\n * @param url Path to the API endpoint - Concats with the base URL from axios instance\n * @param method Default is `POST`\n * @returns Mutate function, isLoading, isError, error, isSuccess, data\n */\nexport const useReactMutation = (\n  url: string,\n  method: Exclude = HttpMethod.POST,\n  config: AxiosRequestConfig = {},\n): UseReactMutation => {\n  const axios = useAxios(config);\n  const { baseURL, headers = {} } = config;\n  const requestConfig = {\n    url,\n    method,\n    baseURL: baseURL || BASE_URL,\n    headers: Object.keys(headers).length > 0 ? { ...DEFAULT_HEADERS, ...headers } : DEFAULT_HEADERS,\n  };\n  const { mutate, isLoading, isError, error, isSuccess, data } = useMutation(\n    async (data: T) => {\n      try {\n        const res = await axios.request({\n          ...requestConfig,\n          data: method !== HttpMethod.DELETE && data ? data : undefined,\n        });\n        return res?.data;\n      } catch (error) {\n        throw new Error(JSON.stringify(error));\n      }\n    },\n  );\n  return { mutate, isLoading, isError, error, isSuccess, data };\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/UserDocument.html': {
      url: 'interfaces/UserDocument.html',
      title: 'interface - UserDocument',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/users/src/lib/user.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n\n\n\n    \n\n\n    \n        import type { AbstractDocument } from '@ntua-saas-10/server/nest/database';\nimport type { User } from '@ntua-saas-10/shared-types';\nimport { Schema } from 'mongoose';\n\nexport interface UserDocument extends User, AbstractDocument {}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const UserSchema = new Schema({} as Record, {\n  collection: 'users',\n  timestamps: true,\n  strict: false,\n  validateBeforeSave: false,\n});\n\nUserSchema.index({ uid: 1 }, { unique: true });\nUserSchema.index({ createdAt: -1 }, { background: true });\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UserDto.html': {
      url: 'classes/UserDto.html',
      title: 'class - UserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from '@anatine/zod-nestjs';\nimport { extendApi } from '@anatine/zod-openapi';\nimport { ResourcePath } from '@ntua-saas-10/shared-api-interfaces';\nimport { ResourcesSchemas } from '@ntua-saas-10/shared-schemas';\n\nconst resourceName = 'User';\nconst resourcePath: ResourcePath = 'users';\n\nconst { retrieve, list, create, update } = ResourcesSchemas[ResourcePath[resourcePath]];\n\nexport const UserZ = extendApi(retrieve, {\n  title: resourceName,\n  description: `Retrieve a ${resourceName}`,\n});\nexport const GetUsersZ = extendApi(list, {\n  title: `List${resourceName}s`,\n  description: `List all ${resourceName}s`,\n  type: 'array',\n});\nexport const CreateUserZ = extendApi(create, {\n  title: `Create${resourceName}`,\n  description: `Create a ${resourceName}`,\n});\nexport const UpdateUserZ = extendApi(update, {\n  title: `Update${resourceName}`,\n  description: `Update a ${resourceName}`,\n});\n\nexport class UserDto extends createZodDto(UserZ) {}\nexport class GetUsersDto extends createZodDto(GetUsersZ) {}\nexport class CreateUserDto extends createZodDto(CreateUserZ) {}\nexport class UpdateUserDto extends createZodDto(UpdateUserZ) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UserRepository.html': {
      url: 'classes/UserRepository.html',
      title: 'class - UserRepository',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/users/src/lib/users.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in libs/server/nest/users/src/lib/users.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractRepository:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: Omit, options?: SaveOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            Omit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            SaveOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndUpdate(filterQuery: FilterQuery, update: UpdateQuery>, upsert)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    update\n                                    \n                                            UpdateQuery>\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    upsert\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractRepository } from '@ntua-saas-10/server/nest/database';\n\nimport type { Model } from 'mongoose';\n\nimport type { UserDocument } from './user.schema';\n\nexport class UserRepository extends AbstractRepository {\n  constructor(model: Model) {\n    super(model);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/UsersController.html': {
      url: 'controllers/UsersController.html',
      title: 'controller - UsersController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/users/src/lib/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                list\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                retrieve\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: UserDto})\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/users/src/lib/users.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiCreatedResponse({type: GetUsersDto})\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/users/src/lib/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiCreatedResponse({type: UserDto})\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/users/src/lib/users.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        retrieve\n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiCreatedResponse({type: CreateUserDto})\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/users/src/lib/users.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiCreatedResponse({type: UpdateUserDto})\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/users/src/lib/users.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ZodValidationPipe } from '@anatine/zod-nestjs';\nimport { Body, Controller, Get, Param, Patch, Post, Delete, UsePipes } from '@nestjs/common';\nimport { ApiCreatedResponse } from '@nestjs/swagger';\nimport { UserDto, GetUsersDto, CreateUserDto, UpdateUserDto } from '@ntua-saas-10/shared-dtos';\nimport { User } from '@ntua-saas-10/shared-types';\n\nimport { UsersService } from './users.service';\n\ninterface ResourceDeleted {\n  id: string;\n  deleted: boolean;\n}\n\n@Controller('users')\n@UsePipes(ZodValidationPipe)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  @ApiCreatedResponse({\n    type: GetUsersDto,\n  })\n  async list(): Promise {\n    return await this.usersService.list();\n  }\n\n  @Get(':id')\n  @ApiCreatedResponse({\n    type: CreateUserDto,\n  })\n  async retrieve(@Param('id') id: string): Promise {\n    return await this.usersService.retrieve(id);\n  }\n\n  @Post()\n  @ApiCreatedResponse({\n    type: UserDto,\n  })\n  async create(@Body() createUserDto: CreateUserDto): Promise {\n    return await this.usersService.create(createUserDto);\n  }\n\n  @Patch(':id')\n  @ApiCreatedResponse({\n    type: UpdateUserDto,\n  })\n  async update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto): Promise {\n    return await this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @ApiCreatedResponse({\n    type: UserDto,\n  })\n  async remove(@Param('id') id: string): Promise {\n    const deleted = await this.usersService.remove(id);\n    return { id, deleted };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/UsersModule.html': {
      url: 'modules/UsersModule.html',
      title: 'module - UsersModule',
      body: "\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/server/nest/users/src/lib/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DatabaseModule } from '@ntua-saas-10/server/nest/database';\n\nimport { type UserDocument, UserSchema } from './user.schema';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [\n    DatabaseModule.forFeature({\n      name: UsersService.name,\n      schema: UserSchema,\n    }),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/UsersService.html': {
      url: 'injectables/UsersService.html',
      title: 'injectable - UsersService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/users/src/lib/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                retrieve\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in libs/server/nest/users/src/lib/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/users/src/lib/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/users/src/lib/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/users/src/lib/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        retrieve\n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/users/src/lib/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/users/src/lib/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRepository\n\n                    \n                \n                    \n                        \n                                Defined in libs/server/nest/users/src/lib/users.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { CreateUserDto, UpdateUserDto } from '@ntua-saas-10/shared-dtos';\nimport { User } from '@ntua-saas-10/shared-types';\nimport { Model } from 'mongoose';\n\nimport { UserDocument } from './user.schema';\nimport { UserRepository } from './users.repository';\n\n@Injectable()\nexport class UsersService {\n  private readonly userRepository!: UserRepository;\n  constructor(@InjectModel(UsersService.name) userModel: Model) {\n    if (!this.userRepository) {\n      this.userRepository = new UserRepository(userModel);\n    }\n  }\n\n  async list(): Promise {\n    return await this.userRepository.find({});\n  }\n\n  async retrieve(id: string): Promise {\n    return await this.userRepository.findOne({ uid: id });\n  }\n\n  async create(createUserDto: CreateUserDto): Promise {\n    return await this.userRepository.create(createUserDto);\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto): Promise {\n    return await this.userRepository.findOneAndUpdate({ uid: id }, updateUserDto);\n  }\n\n  async remove(id: string): Promise {\n    const res = await this.userRepository.findOneAndUpdate({ uid: id }, { deleted: true });\n    return res.$isDeleted();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ValidateDatafileRequestDto.html': {
      url: 'classes/ValidateDatafileRequestDto.html',
      title: 'class - ValidateDatafileRequestDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateDatafileRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/validate-datafile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from \'@anatine/zod-nestjs\';\nimport {\n  ValidateDatafileRequestSchema,\n  ValidateDatafileResponseSchema,\n} from \'@ntua-saas-10/shared-schemas\';\n\nexport class ValidateDatafileRequestDto extends createZodDto(ValidateDatafileRequestSchema) {}\n\nexport class ValidateDatafileResponseDto extends createZodDto(ValidateDatafileResponseSchema) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/ValidateDatafileResponseDto.html': {
      url: 'classes/ValidateDatafileResponseDto.html',
      title: 'class - ValidateDatafileResponseDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateDatafileResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/dtos/src/lib/dtos/validate-datafile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { createZodDto } from \'@anatine/zod-nestjs\';\nimport {\n  ValidateDatafileRequestSchema,\n  ValidateDatafileResponseSchema,\n} from \'@ntua-saas-10/shared-schemas\';\n\nexport class ValidateDatafileRequestDto extends createZodDto(ValidateDatafileRequestSchema) {}\n\nexport class ValidateDatafileResponseDto extends createZodDto(ValidateDatafileResponseSchema) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'controllers/ValidationController.html': {
      url: 'controllers/ValidationController.html',
      title: 'controller - ValidationController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  ValidationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/validation/src/lib/validation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                validation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                validateDatafile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        validateDatafile\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDatafile(body: ValidateDatafileRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('validate-csv')@UsePipes(ZodValidationPipe)\n                \n            \n\n            \n                \n                    Defined in libs/server/nest/validation/src/lib/validation.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                ValidateDatafileRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ZodValidationPipe } from '@anatine/zod-nestjs';\nimport { Logger, Post, UsePipes, Body, Controller } from '@nestjs/common';\nimport { ChartConfigService } from '@ntua-saas-10/server/nest/chart-config';\nimport { DatafilesService } from '@ntua-saas-10/server/nest/datafiles';\nimport { NotificationsService } from '@ntua-saas-10/server/nest/notifications';\nimport { fireAndForget } from '@ntua-saas-10/server/nest/utils';\nimport { NotificationType } from '@ntua-saas-10/shared-consts';\nimport { ValidateDatafileRequestDto, ValidateDatafileResponseDto } from '@ntua-saas-10/shared-dtos';\n\nimport { ValidationService } from './validation.service';\n\n@Controller('validation')\nexport class ValidationController {\n  private readonly logger = new Logger(ValidationController.name);\n  constructor(\n    private readonly validationService: ValidationService,\n    private readonly datafilesService: DatafilesService,\n    private readonly chartConfigService: ChartConfigService,\n    private readonly notificationsService: NotificationsService,\n  ) {}\n\n  @Post('validate-csv')\n  @UsePipes(ZodValidationPipe)\n  async validateDatafile(\n    @Body()\n    body: ValidateDatafileRequestDto,\n  ): Promise {\n    fireAndForget(async () => {\n      const { name } = body.object;\n      const { chartTitle, chartType, uid, chartId } = body.object.metadata;\n      const createdAt = new Date(body.object.timeCreated);\n\n      try {\n        const fileBuffer = await this.datafilesService.streamFromStorage(body.object.name);\n        const parsedFile = this.datafilesService.parseCsv(fileBuffer);\n        const validatedData = this.validationService.validateDatafile(parsedFile, chartType);\n        const chartConfig = this.chartConfigService.generateChartConfig(\n          chartTitle,\n          chartType,\n          validatedData,\n        );\n        this.logger.log(`Chart config generated for chart ${chartId} for user ${uid}`);\n        await this.chartConfigService.saveChartConfig(uid, {\n          chartTitle,\n          chartId,\n          chartType,\n          chartConfig,\n          createdAt,\n          uploadedDatafilePath: name,\n        });\n\n        await this.notificationsService.saveNotificationToFirestore(uid, chartId, {\n          chartId: chartId,\n          type: NotificationType.success,\n          createdAt: new Date(),\n          data: {\n            title: 'Datafile validation successful',\n            message: 'You can preview your chart now',\n          },\n          delivered: false,\n        });\n      } catch (e) {\n        const error = e as Error;\n\n        await this.notificationsService.saveNotificationToFirestore(uid, chartId, {\n          chartId: chartId,\n          type: NotificationType.error,\n          createdAt: new Date(),\n          data: {\n            title: 'Datafile validation failed',\n            message: error.message,\n          },\n          delivered: false,\n        });\n\n        this.logger.error(error);\n      }\n    });\n\n    return {\n      statusCode: 201,\n      message: 'Datafile validation scheduled',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/ValidationModule.html': {
      url: 'modules/ValidationModule.html',
      title: 'module - ValidationModule',
      body: "\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ValidationModule\n\n\n\ncluster_ValidationModule_providers\n\n\n\n\nChartConfigService\n\nChartConfigService\n\n\n\nValidationModule\n\nValidationModule\n\nValidationModule -->\n\nChartConfigService->ValidationModule\n\n\n\n\n\nDatafilesService\n\nDatafilesService\n\nValidationModule -->\n\nDatafilesService->ValidationModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nValidationModule -->\n\nNotificationsService->ValidationModule\n\n\n\n\n\nValidationService\n\nValidationService\n\nValidationModule -->\n\nValidationService->ValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/server/nest/validation/src/lib/validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChartConfigService\n                        \n                        \n                            DatafilesService\n                        \n                        \n                            NotificationsService\n                        \n                        \n                            ValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ValidationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ChartConfigService } from '@ntua-saas-10/server/nest/chart-config';\nimport { DatafilesService } from '@ntua-saas-10/server/nest/datafiles';\nimport { NotificationsService } from '@ntua-saas-10/server/nest/notifications';\n\nimport { ValidationController } from './validation.controller';\nimport { ValidationService } from './validation.service';\n\n@Module({\n  controllers: [ValidationController],\n  providers: [\n    ValidationService,\n    DatafilesService,\n    ChartConfigService,\n    NotificationsService,\n  ],\n})\nexport class ValidationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ValidationService.html': {
      url: 'injectables/ValidationService.html',
      title: 'injectable - ValidationService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/server/nest/validation/src/lib/validation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                validateBubble\n                            \n                            \n                                validateDatafile\n                            \n                            \n                                    Private\n                                validateLine\n                            \n                            \n                                    Private\n                                validatePolarArea\n                            \n                            \n                                    Private\n                                validateRadar\n                            \n                            \n                                    Private\n                                validateScatter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateBubble\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateBubble(parsedFile: ParseResult<>)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/validation/src/lib/validation.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsedFile\n                                    \n                                            ParseResult<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateDatafile\n                        \n                    \n                \n            \n            \n                \nvalidateDatafile(parsedFile: ParseResult<>, chartType: ChartType)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/validation/src/lib/validation.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsedFile\n                                    \n                                            ParseResult<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartType\n                                    \n                                                ChartType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateLine\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLine(parsedFile: ParseResult<>, isMultiAxis)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/validation/src/lib/validation.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    parsedFile\n                                    \n                                            ParseResult<>\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isMultiAxis\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validatePolarArea\n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePolarArea(parsedFile: ParseResult<>)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/validation/src/lib/validation.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsedFile\n                                    \n                                            ParseResult<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateRadar\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRadar(parsedFile: ParseResult<>)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/validation/src/lib/validation.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsedFile\n                                    \n                                            ParseResult<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateScatter\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateScatter(parsedFile: ParseResult<>)\n                \n            \n\n\n            \n                \n                    Defined in libs/server/nest/validation/src/lib/validation.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsedFile\n                                    \n                                            ParseResult<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotImplementedException } from '@nestjs/common';\nimport { TransformMapper } from '@ntua-saas-10/server/nest/utils';\nimport type { ChartType } from '@ntua-saas-10/shared-consts';\nimport { isChartData } from '@ntua-saas-10/shared-utils';\nimport { ParseResult } from 'papaparse';\n\n@Injectable()\nexport class ValidationService {\n  validateDatafile(parsedFile: ParseResult, chartType: ChartType) {\n    switch (chartType) {\n      case 'line':\n      case 'multiAxisLine':\n        return this.validateLine(parsedFile, chartType === 'multiAxisLine');\n      case 'scatter':\n        return this.validateScatter(parsedFile);\n      case 'bubble':\n        return this.validateBubble(parsedFile);\n      case 'polarArea':\n        return this.validatePolarArea(parsedFile);\n      case 'radar':\n        return this.validateRadar(parsedFile);\n      default:\n        break;\n    }\n    throw new NotImplementedException('Cannot validate datafile against the specified chart type');\n  }\n\n  private validateLine(parsedFile: ParseResult, isMultiAxis = false) {\n    const transformedData = TransformMapper['line'](parsedFile, isMultiAxis);\n\n    if (!isChartData(transformedData)) {\n      throw new BadRequestException(`Data don't match line chart type`);\n    }\n\n    return transformedData;\n  }\n\n  private validateScatter(parsedFile: ParseResult) {\n    const transformedData = TransformMapper['scatter'](parsedFile);\n\n    if (!isChartData(transformedData)) {\n      throw new BadRequestException(`Data don't match scatter chart type`);\n    }\n\n    return transformedData;\n  }\n\n  private validateBubble(parsedFile: ParseResult) {\n    const transformedData = TransformMapper['bubble'](parsedFile);\n    if (!isChartData(transformedData)) {\n      throw new BadRequestException(`Data don't match bubble chart type`);\n    }\n\n    return transformedData;\n  }\n\n  private validatePolarArea(parsedFile: ParseResult) {\n    const transformedData = TransformMapper['polarArea'](parsedFile);\n\n    if (!isChartData(transformedData)) {\n      throw new BadRequestException(`Data don't match polar area chart type`);\n    }\n\n    return transformedData;\n  }\n\n  private validateRadar(parsedFile: ParseResult) {\n    const transformedData = TransformMapper['radar'](parsedFile);\n\n    if (!isChartData(transformedData)) {\n      throw new BadRequestException(`Data don't match radar chart type`);\n    }\n\n    return transformedData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'dependencies.html': {
      url: 'dependencies.html',
      title: 'package-dependencies - dependencies',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @anatine/zod-nestjs : 1.10.0\n        \n            @anatine/zod-openapi : 1.14.0\n        \n            @changesets/cli : 2.26.2\n        \n            @emotion/react : 11.11.1\n        \n            @emotion/styled : 11.11.0\n        \n            @fontsource/inter : 5.0.3\n        \n            @hookform/resolvers : 3.1.1\n        \n            @mui/icons-material : 5.11.16\n        \n            @mui/material : 5.13.6\n        \n            @mui/system : 5.13.6\n        \n            @mui/x-data-grid : 6.9.1\n        \n            @mui/x-date-pickers : 6.9.1\n        \n            @nestjs/common : 9.4.3\n        \n            @nestjs/config : 2.3.4\n        \n            @nestjs/core : 9.4.3\n        \n            @nestjs/mapped-types : 1.2.2\n        \n            @nestjs/microservices : 9.4.3\n        \n            @nestjs/mongoose : 9.2.2\n        \n            @nestjs/platform-express : 9.4.3\n        \n            @nestjs/serve-static : 3.0.1\n        \n            @nestjs/swagger : 6.3.0\n        \n            @nestjs/throttler : 4.1.0\n        \n            @simondotm/nx-firebase : 1.0.0\n        \n            @tanstack/react-query : 4.29.19\n        \n            axios : 1.4.0\n        \n            canvas : 2.11.2\n        \n            chart.js : 4.3.0\n        \n            class-validator : 0.14.0\n        \n            compression : 1.7.4\n        \n            date-fns : 2.30.0\n        \n            express : 4.18.2\n        \n            firebase : 9.23.0\n        \n            firebase-admin : 11.9.0\n        \n            firebase-functions : 4.4.1\n        \n            hoist-non-react-statics : 3.3.2\n        \n            i18next : 22.5.1\n        \n            i18next-browser-languagedetector : 7.1.0\n        \n            i18next-http-backend : 2.2.1\n        \n            mongoose : 7.2.2\n        \n            multer : 1.4.5-lts.1\n        \n            openapi3-ts : 3.2.0\n        \n            papaparse : 5.4.1\n        \n            react : 18.2.0\n        \n            react-chartjs-2 : 5.2.0\n        \n            react-dom : 18.2.0\n        \n            react-dropzone : 14.2.3\n        \n            react-firebase-hooks : 5.1.1\n        \n            react-hook-form : 7.45.1\n        \n            react-hook-form-mui : 6.3.1\n        \n            react-i18next : 12.3.1\n        \n            react-material-ui-carousel : 3.4.2\n        \n            react-router : 6.14.1\n        \n            react-router-dom : 6.14.1\n        \n            react-toastify : 9.1.3\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.8.1\n        \n            tslib : 2.5.3\n        \n            zod : 3.21.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/functions.html': {
      url: 'miscellaneous/functions.html',
      title: 'miscellaneous-functions - functions',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createResourceSchemaAndDto   (libs/.../utils.ts)\n                        \n                        \n                            fireAndForget   (libs/.../fire-and-forget.util.ts)\n                        \n                        \n                            isChartData   (libs/.../isChartData.ts)\n                        \n                        \n                            ToastMessage   (libs/.../index.tsx)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/user-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/i18n-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/validation-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/shared/dtos/src/lib/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createResourceSchemaAndDto\n                        \n                    \n                \n            \n            \n                \ncreateResourceSchemaAndDto(resourceName: string, resourcePath: ResourcePath)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resourceName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resourcePath\n                                    \n                                                ResourcePath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/server/nest/utils/src/lib/fire-and-forget.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fireAndForget\n                        \n                    \n                \n            \n            \n                \nfireAndForget(fn)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/shared/utils/src/lib/isChartData.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isChartData\n                        \n                    \n                \n            \n            \n                \nisChartData(object: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ChartDataType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/web/ui/toast/src/lib/index.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        ToastMessage\n                        \n                    \n                \n            \n            \n                \nToastMessage(__namedParameters: {title: ToastMessageProps, message})\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                ToastMessageProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'index.html': {
      url: 'index.html',
      title: 'getting-started - index',
      body: '\n                   \n\nNtua SaaS 10 Monorepo\nThis project is an event-driven architecture-based application that converts CSV data into interactive charts and to their png|svg|pdf|html formats. \nIt uses NX as it\'s build system and its almost 100% based on TypeScript.\nTechnologies Used\n\nNx: A next generation build system with first class monorepo support and powerful integrations.\n\nNest.js: A framework for building scalable and maintainable server-side applications using TypeScript.\n\nReact: A JavaScript library for building user interfaces.\n\nFirebase: A comprehensive suite of cloud-based tools and services provided by Google, including Firestore for NoSQL database, Firebase Cloud Functions for serverless functions, and Firebase Hosting for web app deployment.\n\nDocker: A containerization platform that allows packaging applications with their dependencies into standardized units.\n\nCloud Run: A serverless compute platform provided by Google Cloud for deploying containerized applications.\n\nMongoDB: A popular NoSQL database used for the resource-related microservice.\n\n\nProject Concept\nThe goal of this project is to provide a user-friendly web application that enables users to upload CSV files and convert the data into interactive charts. The application follows an event-driven architecture, allowing for loose coupling and scalability.\nThe project is organized as a monorepo using Nx, which provides a powerful development environment for managing multiple related projects. It includes the following components:\n\nWeb App: A React-based web application that provides the user interface for uploading CSV files, visualizing data, and generating charts.\n\nNest.js Backend Services: Backend services built with Nest.js, responsible for handling file uploads, data processing, and chart generation. These services follow an event-driven architecture, enabling them to communicate with each other through events.\n\nFirebase Functions: Cloud Functions are used for serverless execution of backend logic, such as file processing and chart generation. They integrate with Firebase services like Firestore and Cloud Storage.\n\nShared: A shared package that contains shared code and utilities used across different packages within the monorepo.\n\n\nDevelopment\npnpm serve\nor\nnx serve [project]\nBuilding\npnpm build\nor \nnx build [project]\nDeployment\npnpm deploy:all\nor\nnx deploy [project]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules.html': {
      url: 'modules.html',
      title: 'modules - modules',
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatafilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        I18nStreamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RenderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerNestClusterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'overview.html': {
      url: 'overview.html',
      title: 'overview - overview',
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DatafilesModule\n\n\n\ncluster_DatafilesModule_providers\n\n\n\ncluster_RenderModule\n\n\n\ncluster_RenderModule_providers\n\n\n\ncluster_ServerNestClusterModule\n\n\n\ncluster_ServerNestClusterModule_providers\n\n\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_ValidationModule\n\n\n\ncluster_ValidationModule_providers\n\n\n\n\nDatafilesModule\n\nDatafilesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatafilesModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nRenderModule\n\nRenderModule\n\nAppModule -->\n\nRenderModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nI18nStreamModule\n\nI18nStreamModule\n\nAppModule -->\n\nI18nStreamModule->AppModule\n\n\n\n\n\nI18nStreamService\n\nI18nStreamService\n\nAppModule -->\n\nI18nStreamService->AppModule\n\n\n\nI18nStreamModule -->\n\nI18nStreamService->I18nStreamModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nAppModule -->\n\nValidationModule->AppModule\n\n\n\n\n\nDatafilesService\n\nDatafilesService\n\nDatafilesModule -->\n\nDatafilesService->DatafilesModule\n\n\n\nTransactionModule -->\n\nDatafilesService->TransactionModule\n\n\n\nRenderModule -->\n\nDatafilesService->RenderModule\n\n\n\nValidationModule -->\n\nDatafilesService->ValidationModule\n\n\n\n\n\nFilenameService\n\nFilenameService\n\nDatafilesModule -->\n\nFilenameService->DatafilesModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nDatafilesModule -->\n\nNotificationsService->DatafilesModule\n\n\n\nValidationModule -->\n\nNotificationsService->ValidationModule\n\n\n\n\n\nChartConfigService\n\nChartConfigService\n\nTransactionModule -->\n\nChartConfigService->TransactionModule\n\n\n\nRenderModule -->\n\nChartConfigService->RenderModule\n\n\n\nValidationModule -->\n\nChartConfigService->ValidationModule\n\n\n\n\n\nRenderService\n\nRenderService\n\nRenderModule -->\n\nRenderService->RenderModule\n\n\n\n\n\nClusterModule\n\nClusterModule\n\n\n\nServerNestClusterModule\n\nServerNestClusterModule\n\nServerNestClusterModule -->\n\nClusterModule->ServerNestClusterModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nValidationService\n\nValidationService\n\nValidationModule -->\n\nValidationService->ValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    35 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'properties.html': {
      url: 'properties.html',
      title: 'package-properties - properties',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.1\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/typealiases.html': {
      url: 'miscellaneous/typealiases.html',
      title: 'miscellaneous-typealiases - typealiases',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiResources   (libs/.../index.ts)\n                        \n                        \n                            AppColors   (apps/.../colors.constants.ts)\n                        \n                        \n                            AppRoutes   (apps/.../routes.ts)\n                        \n                        \n                            BubbleChartDataType   (libs/.../ChartData.type.ts)\n                        \n                        \n                            ButtonColorState   (libs/.../index.tsx)\n                        \n                        \n                            Chart   (libs/.../Chart.type.ts)\n                        \n                        \n                            ChartDataType   (libs/.../ChartData.type.ts)\n                        \n                        \n                            ChartPreviewActions   (apps/.../index.tsx)\n                        \n                        \n                            ChartType   (libs/.../ChartType.const.ts)\n                        \n                        \n                            Color   (apps/.../palette.constants.ts)\n                        \n                        \n                            ContentType   (libs/.../ContentType.const.ts)\n                        \n                        \n                            ContentTypeMapperType   (libs/.../render.constants.ts)\n                        \n                        \n                            DatafileMetadata   (libs/.../Datafile.type.ts)\n                        \n                        \n                            DefaultLanguage   (apps/.../i18n.constants.ts)\n                        \n                        \n                            ExtraLanguages   (apps/.../i18n.constants.ts)\n                        \n                        \n                            FieldSpec   (libs/.../FieldSpec.type.ts)\n                        \n                        \n                            FirebaseOptions   (libs/.../firebase-config.ts)\n                        \n                        \n                            FormMetadata   (libs/.../types.ts)\n                        \n                        \n                            HeaderLink   (apps/.../HeaderLink.type.ts)\n                        \n                        \n                            HttpAction   (libs/.../HttpAction.const.ts)\n                        \n                        \n                            HttpMethod   (libs/.../HttpMethod.const.ts)\n                        \n                        \n                            IHTMLInputTypeAttribute   (libs/.../FieldSpec.type.ts)\n                        \n                        \n                            JwtToken   (libs/.../useJwt.hook.ts)\n                        \n                        \n                            Languages   (libs/.../constants.ts)\n                        \n                        \n                            LineChartDataset   (libs/.../chart-config.service.ts)\n                        \n                        \n                            LineChartDataType   (libs/.../ChartData.type.ts)\n                        \n                        \n                            MediaLink   (libs/.../Chart.type.ts)\n                        \n                        \n                            MediaLinks   (libs/.../Chart.type.ts)\n                        \n                        \n                            NextStep   (libs/.../getNextStep.util.ts)\n                        \n                        \n                            NotificationType   (libs/.../NotificationType.const.ts)\n                        \n                        \n                            Pages   (apps/.../index.ts)\n                        \n                        \n                            PolarAreaChartDataType   (libs/.../ChartData.type.ts)\n                        \n                        \n                            ProcessEnv   (libs/.../index.ts)\n                        \n                        \n                            Quota   (libs/.../Quota.const.ts)\n                        \n                        \n                            RadarChartDataType   (libs/.../ChartData.type.ts)\n                        \n                        \n                            RenderMapperConfig   (libs/.../render.constants.ts)\n                        \n                        \n                            ResourceEndpoint   (libs/.../ResourceEndpoint.type.ts)\n                        \n                        \n                            ResourcePath   (libs/.../constants.ts)\n                        \n                        \n                            ResourcesSchemas   (libs/.../index.ts)\n                        \n                        \n                            ScatterChartDataType   (libs/.../ChartData.type.ts)\n                        \n                        \n                            ServicePaths   (libs/.../constants.ts)\n                        \n                        \n                            Services   (libs/.../index.ts)\n                        \n                        \n                            SignUpFormData   (libs/.../schema.ts)\n                        \n                        \n                            SignUpFormFields   (libs/.../schema.ts)\n                        \n                        \n                            StepperActions   (apps/.../index.tsx)\n                        \n                        \n                            SupportedContentType   (libs/.../render.constants.ts)\n                        \n                        \n                            SupportedLanguages   (apps/.../i18n.constants.ts)\n                        \n                        \n                            TranslateNamespace   (apps/.../i18n.constants.ts)\n                        \n                        \n                            TranslatePrefix   (apps/.../i18n.constants.ts)\n                        \n                        \n                            TranslationKeys   (libs/.../TranslationKeys.const.ts)\n                        \n                        \n                            UiButtonColor   (libs/.../types.ts)\n                        \n                        \n                            UiButtonType   (libs/.../types.ts)\n                        \n                        \n                            UploadChartConfig   (libs/.../chart-config.service.ts)\n                        \n                        \n                            UploadDatafileRequest   (libs/.../Datafile.type.ts)\n                        \n                        \n                            UploadDatafileResponse   (libs/.../Datafile.type.ts)\n                        \n                        \n                            UploadWizardFormData   (apps/.../index.tsx)\n                        \n                        \n                            User   (libs/.../User.type.ts)\n                        \n                        \n                            UserAttributes   (libs/.../UserAttributes.schema.ts)\n                        \n                        \n                            UserCustomClaims   (libs/.../UserCustomClaims.schema.ts)\n                        \n                        \n                            UserNotification   (libs/.../UserNotification.type.ts)\n                        \n                        \n                            UserQuota   (libs/.../UserQuota.schema.ts)\n                        \n                        \n                            UserRole   (libs/.../UserRole.const.ts)\n                        \n                        \n                            UserRolesType   (libs/.../UserRoles.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared/api-interfaces/src/lib/resources/index.ts\n    \n    \n        \n            \n                \n                    \n                    ApiResources\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/web/src/app/constants/colors.constants.ts\n    \n    \n        \n            \n                \n                    \n                    AppColors\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/web/src/app/routes.ts\n    \n    \n        \n            \n                \n                    \n                    AppRoutes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/types/src/lib/types/ChartData.type.ts\n    \n    \n        \n            \n                \n                    \n                    BubbleChartDataType\n                \n            \n            \n                \n                        ChartDataType\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ChartDataType\n                \n            \n            \n                \n                            Omit, > | "xLabels" | "yLabels">\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LineChartDataType\n                \n            \n            \n                \n                        ChartDataType\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolarAreaChartDataType\n                \n            \n            \n                \n                        ChartDataType\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RadarChartDataType\n                \n            \n            \n                \n                        ChartDataType\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ScatterChartDataType\n                \n            \n            \n                \n                        ChartDataType\n\n                \n            \n        \n    \n    libs/web/ui/spinner-button/src/lib/index.tsx\n    \n    \n        \n            \n                \n                    \n                    ButtonColorState\n                \n            \n            \n                \n                        "primary" | "success" | "inherit"\n\n                \n            \n        \n    \n    libs/shared/types/src/lib/types/Chart.type.ts\n    \n    \n        \n            \n                \n                    \n                    Chart\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaLink\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaLinks\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/web/src/app/components/ChartPreview/index.tsx\n    \n    \n        \n            \n                \n                    \n                    ChartPreviewActions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/consts/src/lib/ChartType.const.ts\n    \n    \n        \n            \n                \n                    \n                    ChartType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/web/src/app/constants/palette.constants.ts\n    \n    \n        \n            \n                \n                    \n                    Color\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/consts/src/lib/ContentType.const.ts\n    \n    \n        \n            \n                \n                    \n                    ContentType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/server/nest/render/src/lib/render.constants.ts\n    \n    \n        \n            \n                \n                    \n                    ContentTypeMapperType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RenderMapperConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SupportedContentType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/types/src/lib/types/Datafile.type.ts\n    \n    \n        \n            \n                \n                    \n                    DatafileMetadata\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadDatafileRequest\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadDatafileResponse\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    apps/web/src/app/constants/i18n.constants.ts\n    \n    \n        \n            \n                \n                    \n                    DefaultLanguage\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExtraLanguages\n                \n            \n            \n                \n                        Exclude\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SupportedLanguages\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TranslateNamespace\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TranslatePrefix\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/types/src/lib/types/FieldSpec.type.ts\n    \n    \n        \n            \n                \n                    \n                    FieldSpec\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IHTMLInputTypeAttribute\n                \n            \n            \n                \n                        "button" | "checkbox" | "color" | "date" | "datetime-local" | "email" | "file" | "hidden" | "image" | "month" | "number" | "password" | "radio" | "range" | "reset" | "search" | "submit" | "tel" | "text" | "time" | "url" | "week"\n\n                \n            \n        \n    \n    libs/web/env/src/lib/firebase-config.ts\n    \n    \n        \n            \n                \n                    \n                    FirebaseOptions\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    libs/web/features/upload-wizard/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    FormMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/web/src/app/types/HeaderLink.type.ts\n    \n    \n        \n            \n                \n                    \n                    HeaderLink\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/shared/consts/src/lib/HttpAction.const.ts\n    \n    \n        \n            \n                \n                    \n                    HttpAction\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/consts/src/lib/HttpMethod.const.ts\n    \n    \n        \n            \n                \n                    \n                    HttpMethod\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/web/hooks/src/lib/useJwt.hook.ts\n    \n    \n        \n            \n                \n                    \n                    JwtToken\n                \n            \n            \n                \n                        string | null\n\n                \n            \n        \n    \n    libs/web/features/change-language/src/lib/constants.ts\n    \n    \n        \n            \n                \n                    \n                    Languages\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/server/nest/chart-config/src/lib/chart-config.service.ts\n    \n    \n        \n            \n                \n                    \n                    LineChartDataset\n                \n            \n            \n                \n                            ChartDataset<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadChartConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/server/firebase-functions-triggers/src/lib/utils/getNextStep.util.ts\n    \n    \n        \n            \n                \n                    \n                    NextStep\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/consts/src/lib/NotificationType.const.ts\n    \n    \n        \n            \n                \n                    \n                    NotificationType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/web/src/app/pages/index.ts\n    \n    \n        \n            \n                \n                    \n                    Pages\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/web/env/src/lib/index.ts\n    \n    \n        \n            \n                \n                    \n                    ProcessEnv\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    libs/shared/consts/src/lib/Quota.const.ts\n    \n    \n        \n            \n                \n                    \n                    Quota\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/types/src/lib/types/ResourceEndpoint.type.ts\n    \n    \n        \n            \n                \n                    \n                    ResourceEndpoint\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/api-interfaces/src/lib/resources/constants.ts\n    \n    \n        \n            \n                \n                    \n                    ResourcePath\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/schemas/src/lib/resources/index.ts\n    \n    \n        \n            \n                \n                    \n                    ResourcesSchemas\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/api-interfaces/src/lib/services/constants.ts\n    \n    \n        \n            \n                \n                    \n                    ServicePaths\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/api-interfaces/src/lib/services/index.ts\n    \n    \n        \n            \n                \n                    \n                    Services\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/web/features/signup/src/lib/schema.ts\n    \n    \n        \n            \n                \n                    \n                    SignUpFormData\n                \n            \n            \n                \n                        z.infer>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignUpFormFields\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/web/src/app/components/Stepper/index.tsx\n    \n    \n        \n            \n                \n                    \n                    StepperActions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/consts/src/lib/TranslationKeys.const.ts\n    \n    \n        \n            \n                \n                    \n                    TranslationKeys\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/web/ui/button/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    UiButtonColor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UiButtonType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/web/src/app/components/UploadCsvChartFile/index.tsx\n    \n    \n        \n            \n                \n                    \n                    UploadWizardFormData\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    libs/shared/types/src/lib/types/User.type.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    libs/shared/schemas/src/lib/internal/UserAttributes.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserAttributes\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    libs/shared/schemas/src/lib/internal/UserCustomClaims.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserCustomClaims\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    libs/shared/types/src/lib/types/UserNotification.type.ts\n    \n    \n        \n            \n                \n                    \n                    UserNotification\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    libs/shared/schemas/src/lib/internal/UserQuota.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserQuota\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    libs/shared/consts/src/lib/UserRole.const.ts\n    \n    \n        \n            \n                \n                    \n                    UserRole\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/schemas/src/lib/internal/UserRoles.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserRolesType\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
  },
};
